SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 14:03:45  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Administrator\Desktop\2015-06-1平面移入交点法\list.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          list.c     1    #include <stdio.h>
          list.c     2    #include "headfile.h"












          list.c     3    
          list.c     4    
          list.c     5    void InitList(List* qList) 
P   00000000              _InitList:                       ; function: InitList
                                                           ; frame size=0
          list.c     6    {
          list.c     7            qList->length = 0;
    00000000 E500                   MOV         #0,R5
          list.c     8            qList->next   = NULL;
    00000002 E040                   MOV         #64,R0
    00000004 2452                   MOV.L       R5,@R4
          list.c     9    }
    00000006 000B                   RTS
    00000008 0456                   MOV.L       R5,@(R0,R4)
          list.c    10    
          list.c    11    void PushList(List* qList,s_pqx s)
    0000000A              _PushList:                       ; function: PushList
                                                           ; frame size=8
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    0000000A 4F22                   STS.L       PR,@-R15
          list.c    12    {
          list.c    13            List * newNode = (List *)malloc(sizeof(List));
    0000000C D319                   MOV.L       L509+2,R3  ; _malloc
    0000000E 7FFC                   ADD         #-4,R15
    00000010 2F42                   MOV.L       R4,@R15
    00000012 430B                   JSR         @R3
    00000014 E444                   MOV         #68,R4
    00000016 6503                   MOV         R0,R5
          list.c    14            List * temp = qList;
    00000018 64F2                   MOV.L       @R15,R4
          list.c    15            newNode->next = NULL;
    0000001A E300                   MOV         #0,R3
    0000001C E040                   MOV         #64,R0
          list.c    16            newNode->node = s;
    0000001E 6153                   MOV         R5,R1
    00000020 0536                   MOV.L       R3,@(R0,R5)
    00000022 62F3                   MOV         R15,R2
    00000024 D314                   MOV.L       L509+6,R3  ; __quick_odd_mvn
    00000026 7104                   ADD         #4,R1
    00000028 7208                   ADD         #8,R2
    0000002A 430B                   JSR         @R3
    0000002C E03C                   MOV         #60,R0
          list.c    17    
          list.c    18            while(temp->next!=NULL)
    0000002E A001                   BRA         L504
    00000030 0009                   NOP
    00000032              L505:                             
          list.c    19                    temp = temp->next;     //找到表尾
    00000032 044E                   MOV.L       @(R0,R4),R4
    00000034              L504:                             
    00000034 E040                   MOV         #64,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 14:03:45  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000036 034E                   MOV.L       @(R0,R4),R3
    00000038 2338                   TST         R3,R3
    0000003A 8BFA                   BF          L505
          list.c    20            temp->next = newNode;       //将表尾跟新的节点连接
    0000003C 0456                   MOV.L       R5,@(R0,R4)
          list.c    21            qList->length++;
    0000003E 63F2                   MOV.L       @R15,R3
    00000040 6232                   MOV.L       @R3,R2
    00000042 7201                   ADD         #1,R2
    00000044 2322                   MOV.L       R2,@R3
          list.c    22    }
    00000046 7F04                   ADD         #4,R15
    00000048 4F26                   LDS.L       @R15+,PR
    0000004A 000B                   RTS
    0000004C 0009                   NOP
          list.c    23    
          list.c    24    s_pqx GetList(List* qList,int index0)
    0000004E              _GetList:                        ; function: GetList
                                                           ; frame size=4
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
          list.c    25     {
          list.c    26             int i;
          list.c    27             for(i=0;i<=index0;i++)
    0000004E 4511                   CMP/PZ      R5
    00000050 4F22                   STS.L       PR,@-R15
    00000052 8F05                   BF/S        L506
    00000054 E600                   MOV         #0,R6
    00000056              L507:                             
          list.c    28                     qList = qList->next;
    00000056 E040                   MOV         #64,R0
    00000058 7601                   ADD         #1,R6
    0000005A 3657                   CMP/GT      R5,R6
    0000005C 8FFB                   BF/S        L507
    0000005E 044E                   MOV.L       @(R0,R4),R4
    00000060              L506:                             
          list.c    29             return qList->node;
    00000060 51F1                   MOV.L       @(4,R15),R1
    00000062 6243                   MOV         R4,R2
    00000064 D304                   MOV.L       L509+6,R3  ; __quick_odd_mvn
    00000066 7204                   ADD         #4,R2
    00000068 430B                   JSR         @R3
    0000006A E03C                   MOV         #60,R0
          list.c    30     }
    0000006C 4F26                   LDS.L       @R15+,PR
    0000006E 000B                   RTS
    00000070 0009                   NOP
    00000072              L509:                             
    00000072 0000                   .DATA.W     0
    00000074 <00000000>             .DATA.L     _malloc
    00000078 <00000000>             .DATA.L     __quick_odd_mvn
          list.c    31    
          list.c    32    
          list.c    33    
          list.c    34    






SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 14:03:45  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       34



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000007C Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000007C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            2
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            10






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkD89F.tmp 

