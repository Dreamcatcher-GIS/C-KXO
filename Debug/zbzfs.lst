SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    1

************ OBJECT LISTING ************

FILE NAME: F:\ProgramOfUniversity\C-KXO\C-KXO\zbzfs.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         zbzfs.c     1    #pragma once
         zbzfs.c     2    #include <math.h>
         zbzfs.c     3    //#include <iostream>
         zbzfs.c     4    #include "headfile.h"












         zbzfs.c     5    #include "cvs.h"
         zbzfs.c     6    #include "zbzfs.h"

         zbzfs.c     7    
         zbzfs.c     8    #define N_MAX 16
         zbzfs.c     9    
         zbzfs.c    10    
         zbzfs.c    11    double ss;      // Æðµã×®ºÅ
         zbzfs.c    12    double es;      // ÖÕµã×®ºÅ
         zbzfs.c    13    double sx;      // Æðµã×ø±êX
         zbzfs.c    14    double sy;      // ÖÕµã×ø±êY
         zbzfs.c    15    double sa;      // Æðµã×ø±ê·½Î»½Ç(DEG)
         zbzfs.c    16    int v;          // ÏßÔª×ªÏò,ÓÒ×ªÎª1,×ó×ªÎª-1
         zbzfs.c    17    double sp;      // ÏßÔªÆðµãÇúÂÊ,Ö±ÏßÎª0,Ô²ÇúÏßÎª1/R
         zbzfs.c    18    double ep;      // ÏßÔªÖÕµãÇúÂÊ,Ö±ÏßÎª0,Ô²ÇúÏßÎª1/R
         zbzfs.c    19    
         zbzfs.c    20            // ¼ÆËãµÈ·Öµã´¦×®ºÅ
         zbzfs.c    21            // ¼ÆËãnµÈ·Ö´¦Ê±nÈ¡2,4,6..
         zbzfs.c    22            // ¼ÆËã2nµÈ·Ö´¦Ê±nÈ¡1,3,5...
         zbzfs.c    23            double s_function(double s, int n);
         zbzfs.c    24            // ¼ÆËãÀï³Ìs´¦ÇúÂÊ
         zbzfs.c    25            double p_function(double s);
         zbzfs.c    26            // ¼ÆËãÀï³Ìs´¦ÇÐÏß·½Î»½Ç(DEG)
         zbzfs.c    27            double a_function(double p, double s);
         zbzfs.c    28    
         zbzfs.c    29            // ¼ÆËãÀï³Ìs´¦×ø±êX/Y¼°×ø±ê·½Î»½ÇA(DEG)
         zbzfs.c    30            double zbzs_m_xy(double s, int xy);
         zbzfs.c    31            double zbzs_m_a(double s);
         zbzfs.c    32            // ¼ÆËã×ø±êX/Y¶ÔÓ¦µÄÀï³Ì¼°Æ«¾à

         zbzfs.c    46            double zbfs_s(double px, double py);
         zbzfs.c    47            double zbfs_d(double px, double py);
         zbzfs.c    48    
         zbzfs.c    49    
         zbzfs.c    50    void intialCZb(double ss_v,double es_v,double sx_v,double sy_v,double sa_v,int v_v,double sp_v,double ep_v
                         +)
P   00000000              _intialCZb:                      ; function: intialCZb
                                                           ; frame size=0
         zbzfs.c    51    {       ss=ss_v;   // Æðµã×®ºÅ
    00000000 D27D                   MOV.L       L668,R2    ; _ss
         zbzfs.c    52            es=es_v;   // ÖÕµã×®ºÅ
    00000002 60F3                   MOV         R15,R0
    00000004 63F3                   MOV         R15,R3
    00000006 7008                   ADD         #8,R0
    00000008 6132                   MOV.L       @R3,R1
    0000000A 2212                   MOV.L       R1,@R2
    0000000C 5131                   MOV.L       @(4,R3),R1
    0000000E 1211                   MOV.L       R1,@(4,R2)
    00000010 D37A                   MOV.L       L668+4,R3  ; _es
    00000012 6102                   MOV.L       @R0,R1
    00000014 2312                   MOV.L       R1,@R3
    00000016 5101                   MOV.L       @(4,R0),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         zbzfs.c    53            sx=sx_v;   // Æðµã×ø±êX
    00000018 D079                   MOV.L       L668+8,R0  ; _sx
    0000001A 1311                   MOV.L       R1,@(4,R3)
    0000001C 61F3                   MOV         R15,R1
    0000001E 7110                   ADD         #16,R1
    00000020 6212                   MOV.L       @R1,R2
    00000022 2022                   MOV.L       R2,@R0
    00000024 5211                   MOV.L       @(4,R1),R2
    00000026 1021                   MOV.L       R2,@(4,R0)
         zbzfs.c    54            sy=sy_v;   // ÖÕµã×ø±êY
    00000028 D176                   MOV.L       L668+12,R1 ; _sy
    0000002A 62F3                   MOV         R15,R2
    0000002C 7218                   ADD         #24,R2
    0000002E 6322                   MOV.L       @R2,R3
    00000030 2132                   MOV.L       R3,@R1
    00000032 5321                   MOV.L       @(4,R2),R3
         zbzfs.c    55            sa=sa_v;   // Æðµã×ø±ê·½Î»½Ç(DEG)
    00000034 D274                   MOV.L       L668+16,R2 ; _sa
    00000036 1131                   MOV.L       R3,@(4,R1)
    00000038 63F3                   MOV         R15,R3
    0000003A 7320                   ADD         #32,R3
    0000003C 6032                   MOV.L       @R3,R0
         zbzfs.c    56            v =v_v;    // ÏßÔª×ªÏò,ÓÒ×ªÎª1,×ó×ªÎª-1
         zbzfs.c    57            sp=sp_v;   // ÏßÔªÆðµãÇúÂÊ,Ö±ÏßÎª0,Ô²ÇúÏßÎª1/R
    0000003E 61F3                   MOV         R15,R1
    00000040 2202                   MOV.L       R0,@R2
    00000042 7128                   ADD         #40,R1
    00000044 5031                   MOV.L       @(4,R3),R0
    00000046 1201                   MOV.L       R0,@(4,R2)
    00000048 D370                   MOV.L       L668+20,R3 ; _v
    0000004A 2342                   MOV.L       R4,@R3
    0000004C D070                   MOV.L       L668+24,R0 ; _sp
    0000004E 6212                   MOV.L       @R1,R2
    00000050 2022                   MOV.L       R2,@R0
    00000052 5211                   MOV.L       @(4,R1),R2
         zbzfs.c    58            ep=ep_v;   // ÏßÔªÖÕµãÇúÂÊ,Ö±ÏßÎª0,Ô²ÇúÏßÎª1/R
    00000054 D16F                   MOV.L       L668+28,R1 ; _ep
    00000056 1021                   MOV.L       R2,@(4,R0)
    00000058 62F3                   MOV         R15,R2
    0000005A 7230                   ADD         #48,R2
    0000005C 6322                   MOV.L       @R2,R3
    0000005E 2132                   MOV.L       R3,@R1
    00000060 5321                   MOV.L       @(4,R2),R3
         zbzfs.c    59    }
    00000062 000B                   RTS
    00000064 1131                   MOV.L       R3,@(4,R1)
         zbzfs.c    60    
         zbzfs.c    61    // ¼ÆËãµÈ·Öµã´¦Àï³Ì
         zbzfs.c    62    // ¼ÆËãnµÈ·Ö´¦Ê±nÈ¡2,4,6...
         zbzfs.c    63    // ¼ÆËã2nµÈ·Ö´¦Ê±nÈ¡1,3,5...
         zbzfs.c    64    double s_function(double s, int n)
    00000066              _s_function:                     ; function: s_function
                                                           ; frame size=48
                                                           ; used runtime library name:
                                                           ; __addd, __subdr, __muld, __divdr, __itod
    00000066 4F22                   STS.L       PR,@-R15
         zbzfs.c    65    {       return (s-ss)*n/N_MAX+ss;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000068 D363                   MOV.L       L668,R3    ; _ss
    0000006A 7FE8                   ADD         #-24,R15
    0000006C 50F9                   MOV.L       @(36,R15),R0
    0000006E 2F06                   MOV.L       R0,@-R15
    00000070 50F9                   MOV.L       @(36,R15),R0
    00000072 2F06                   MOV.L       R0,@-R15
    00000074 5231                   MOV.L       @(4,R3),R2
    00000076 2F26                   MOV.L       R2,@-R15
    00000078 6232                   MOV.L       @R3,R2
    0000007A 2F26                   MOV.L       R2,@-R15
    0000007C D066                   MOV.L       L668+32,R0 ; __subdr
    0000007E 61F3                   MOV         R15,R1
    00000080 7110                   ADD         #16,R1
    00000082 400B                   JSR         @R0
    00000084 2F16                   MOV.L       R1,@-R15
    00000086 6043                   MOV         R4,R0
    00000088 D364                   MOV.L       L668+36,R3 ; __itod
    0000008A 7FF8                   ADD         #-8,R15
    0000008C 430B                   JSR         @R3
    0000008E 2FF6                   MOV.L       R15,@-R15
    00000090 D163                   MOV.L       L668+40,R1 ; __muld
    00000092 62F3                   MOV         R15,R2
    00000094 7210                   ADD         #16,R2
    00000096 410B                   JSR         @R1
    00000098 2F26                   MOV.L       R2,@-R15
    0000009A E300                   MOV         #0,R3
    0000009C D162                   MOV.L       L668+48,R1 ; __divdr
    0000009E 2F36                   MOV.L       R3,@-R15
    000000A0 D360                   MOV.L       L668+44,R3 ; H'40300000
    000000A2 2F36                   MOV.L       R3,@-R15
    000000A4 62F3                   MOV         R15,R2
    000000A6 7210                   ADD         #16,R2
    000000A8 410B                   JSR         @R1
    000000AA 2F26                   MOV.L       R2,@-R15
    000000AC D352                   MOV.L       L668,R3    ; _ss
    000000AE 5031                   MOV.L       @(4,R3),R0
    000000B0 D25E                   MOV.L       L668+52,R2 ; __addd
    000000B2 2F06                   MOV.L       R0,@-R15
    000000B4 6032                   MOV.L       @R3,R0
    000000B6 2F06                   MOV.L       R0,@-R15
    000000B8 51F5                   MOV.L       @(20,R15),R1
    000000BA 420B                   JSR         @R2
    000000BC 2F16                   MOV.L       R1,@-R15
         zbzfs.c    66    }
    000000BE 4F26                   LDS.L       @R15+,PR
    000000C0 000B                   RTS
    000000C2 0009                   NOP
         zbzfs.c    67    
         zbzfs.c    68    // ¼ÆËãÀï³Ìs´¦ÇúÂÊ
         zbzfs.c    69    double p_function(double s)
    000000C4              _p_function:                     ; function: p_function
                                                           ; frame size=56
                                                           ; used runtime library name:
                                                           ; __addd, __subdr, __muld, __divdr
    000000C4 4F22                   STS.L       PR,@-R15
         zbzfs.c    70    {       return sp+(ep-sp)*(s-ss)/(es-ss);  //ÆðµãÇúÂÊ+£¨ÆðµãÇúÂÊ-ÆðµãÇúÂÊ£©*£¨¼ÆËãÆ÷Àï³Ì-ÆðµãÀï³Ì£©/(ÖÕµãÀ
                         +ï³Ì-ÆðµãÀï³Ì£©




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000C6 7FE8                   ADD         #-24,R15
    000000C8 D352                   MOV.L       L668+28,R3 ; _ep
    000000CA 5031                   MOV.L       @(4,R3),R0
    000000CC D250                   MOV.L       L668+24,R2 ; _sp
    000000CE 2F06                   MOV.L       R0,@-R15
    000000D0 6032                   MOV.L       @R3,R0
    000000D2 2F06                   MOV.L       R0,@-R15
    000000D4 5121                   MOV.L       @(4,R2),R1
    000000D6 2F16                   MOV.L       R1,@-R15
    000000D8 6122                   MOV.L       @R2,R1
    000000DA 2F16                   MOV.L       R1,@-R15
    000000DC D04E                   MOV.L       L668+32,R0 ; __subdr
    000000DE 63F3                   MOV         R15,R3
    000000E0 7310                   ADD         #16,R3
    000000E2 400B                   JSR         @R0
    000000E4 2F36                   MOV.L       R3,@-R15
    000000E6 7FF8                   ADD         #-8,R15
    000000E8 D343                   MOV.L       L668,R3    ; _ss
    000000EA 52FB                   MOV.L       @(44,R15),R2
    000000EC D04A                   MOV.L       L668+32,R0 ; __subdr
    000000EE 2F26                   MOV.L       R2,@-R15
    000000F0 52FB                   MOV.L       @(44,R15),R2
    000000F2 2F26                   MOV.L       R2,@-R15
    000000F4 5131                   MOV.L       @(4,R3),R1
    000000F6 2F16                   MOV.L       R1,@-R15
    000000F8 6132                   MOV.L       @R3,R1
    000000FA 2F16                   MOV.L       R1,@-R15
    000000FC 62F3                   MOV         R15,R2
    000000FE 7210                   ADD         #16,R2
    00000100 400B                   JSR         @R0
    00000102 2F26                   MOV.L       R2,@-R15
    00000104 D146                   MOV.L       L668+40,R1 ; __muld
    00000106 63F3                   MOV         R15,R3
    00000108 7310                   ADD         #16,R3
    0000010A 410B                   JSR         @R1
    0000010C 2F36                   MOV.L       R3,@-R15
    0000010E 7FF8                   ADD         #-8,R15
    00000110 D23A                   MOV.L       L668+4,R2  ; _es
    00000112 5021                   MOV.L       @(4,R2),R0
    00000114 D338                   MOV.L       L668,R3    ; _ss
    00000116 2F06                   MOV.L       R0,@-R15
    00000118 6022                   MOV.L       @R2,R0
    0000011A 2F06                   MOV.L       R0,@-R15
    0000011C 5131                   MOV.L       @(4,R3),R1
    0000011E 2F16                   MOV.L       R1,@-R15
    00000120 6132                   MOV.L       @R3,R1
    00000122 2F16                   MOV.L       R1,@-R15
    00000124 D03C                   MOV.L       L668+32,R0 ; __subdr
    00000126 62F3                   MOV         R15,R2
    00000128 7210                   ADD         #16,R2
    0000012A 400B                   JSR         @R0
    0000012C 2F26                   MOV.L       R2,@-R15
    0000012E 63F3                   MOV         R15,R3
    00000130 D13D                   MOV.L       L668+48,R1 ; __divdr
    00000132 7310                   ADD         #16,R3
    00000134 410B                   JSR         @R1
    00000136 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000138 D235                   MOV.L       L668+24,R2 ; _sp
    0000013A 5021                   MOV.L       @(4,R2),R0
    0000013C D33B                   MOV.L       L668+52,R3 ; __addd
    0000013E 2F06                   MOV.L       R0,@-R15
    00000140 6022                   MOV.L       @R2,R0
    00000142 2F06                   MOV.L       R0,@-R15
    00000144 51F5                   MOV.L       @(20,R15),R1
    00000146 430B                   JSR         @R3
    00000148 2F16                   MOV.L       R1,@-R15
         zbzfs.c    71    }
    0000014A 4F26                   LDS.L       @R15+,PR
    0000014C 000B                   RTS
    0000014E 0009                   NOP
         zbzfs.c    72    
         zbzfs.c    73    // ¼ÆËãÀï³Ìs´¦ÇÐÏß·½Î»½Ç
         zbzfs.c    74    double a_function(double p, double s)
    00000150              _a_function:                     ; function: a_function
                                                           ; frame size=76
                                                           ; used runtime library name:
                                                           ; __addd, __subdr, __muld, __divdr, __itod
    00000150 4F22                   STS.L       PR,@-R15
         zbzfs.c    75    {       return sa+90*v*(p+sp)*fabs(s-ss)/PI;  //Æðµã·½Î»½Ç+90*ÏßÔªÆ«Ïò*£¨pÊÇÊ²Ã´+ÆðµãÇúÂÊ£©*¾ø¶ÔÖµ£¨¼ÆËãµ
                         +ãÀï³Ì-ÆðµãÀï³Ì£©/¦Ð
    00000152 E35A                   MOV         #90,R3
    00000154 D12D                   MOV.L       L668+20,R1 ; _v
    00000156 4F12                   STS.L       MACL,@-R15
    00000158 D22B                   MOV.L       L668+16,R2 ; _sa
    0000015A 5021                   MOV.L       @(4,R2),R0
    0000015C 2F06                   MOV.L       R0,@-R15
    0000015E 6022                   MOV.L       @R2,R0
    00000160 2F06                   MOV.L       R0,@-R15
    00000162 6212                   MOV.L       @R1,R2
    00000164 D12D                   MOV.L       L668+36,R1 ; __itod
    00000166 7FE0                   ADD         #-32,R15
    00000168 0237                   MUL.L       R3,R2
    0000016A 001A                   STS         MACL,R0
    0000016C 410B                   JSR         @R1
    0000016E 2FF6                   MOV.L       R15,@-R15
    00000170 D027                   MOV.L       L668+24,R0 ; _sp
    00000172 7FF8                   ADD         #-8,R15
    00000174 5101                   MOV.L       @(4,R0),R1
    00000176 2F16                   MOV.L       R1,@-R15
    00000178 6102                   MOV.L       @R0,R1
    0000017A E048                   MOV         #72,R0
    0000017C 2F16                   MOV.L       R1,@-R15
    0000017E 01FE                   MOV.L       @(R0,R15),R1
    00000180 2F16                   MOV.L       R1,@-R15
    00000182 E048                   MOV         #72,R0
    00000184 01FE                   MOV.L       @(R0,R15),R1
    00000186 2F16                   MOV.L       R1,@-R15
    00000188 D028                   MOV.L       L668+52,R0 ; __addd
    0000018A 61F3                   MOV         R15,R1
    0000018C 7110                   ADD         #16,R1
    0000018E 400B                   JSR         @R0
    00000190 2F16                   MOV.L       R1,@-R15
    00000192 61F3                   MOV         R15,R1
    00000194 D022                   MOV.L       L668+40,R0 ; __muld




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000196 7110                   ADD         #16,R1
    00000198 400B                   JSR         @R0
    0000019A 2F16                   MOV.L       R1,@-R15
    0000019C 7FF0                   ADD         #-16,R15
    0000019E E048                   MOV         #72,R0
    000001A0 01FE                   MOV.L       @(R0,R15),R1
    000001A2 E048                   MOV         #72,R0
    000001A4 2F16                   MOV.L       R1,@-R15
    000001A6 01FE                   MOV.L       @(R0,R15),R1
    000001A8 2F16                   MOV.L       R1,@-R15
    000001AA D113                   MOV.L       L668,R1    ; _ss
    000001AC 5011                   MOV.L       @(4,R1),R0
    000001AE 2F06                   MOV.L       R0,@-R15
    000001B0 6012                   MOV.L       @R1,R0
    000001B2 2F06                   MOV.L       R0,@-R15
    000001B4 D018                   MOV.L       L668+32,R0 ; __subdr
    000001B6 61F3                   MOV         R15,R1
    000001B8 7110                   ADD         #16,R1
    000001BA 400B                   JSR         @R0
    000001BC 2F16                   MOV.L       R1,@-R15
    000001BE E108                   MOV         #8,R1
    000001C0 31FC                   ADD         R15,R1
    000001C2 2F16                   MOV.L       R1,@-R15
    000001C4 D11A                   MOV.L       L668+56,R1 ; _fabs
    000001C6 410B                   JSR         @R1
    000001C8 0009                   NOP
    000001CA 7F0C                   ADD         #12,R15
    000001CC D214                   MOV.L       L668+40,R2 ; __muld
    000001CE 63F3                   MOV         R15,R3
    000001D0 7310                   ADD         #16,R3
    000001D2 420B                   JSR         @R2
    000001D4 2F36                   MOV.L       R3,@-R15
    000001D6 D117                   MOV.L       L668+60,R1 ; H'53C8D4F1
    000001D8 D213                   MOV.L       L668+48,R2 ; __divdr
    000001DA 2F16                   MOV.L       R1,@-R15
    000001DC D116                   MOV.L       L668+64,R1 ; H'400921FB
    000001DE 2F16                   MOV.L       R1,@-R15
    000001E0 63F3                   MOV         R15,R3
    000001E2 7310                   ADD         #16,R3
    000001E4 420B                   JSR         @R2
    000001E6 2F36                   MOV.L       R3,@-R15
    000001E8 50F6                   MOV.L       @(24,R15),R0
    000001EA D110                   MOV.L       L668+52,R1 ; __addd
    000001EC 410B                   JSR         @R1
    000001EE 2F06                   MOV.L       R0,@-R15
         zbzfs.c    76    }
    000001F0 4F16                   LDS.L       @R15+,MACL
    000001F2 4F26                   LDS.L       @R15+,PR
    000001F4 000B                   RTS
    000001F6 0009                   NOP
    000001F8              L668:                             
    000001F8 <00000000>             .DATA.L     _ss
    000001FC <00000000>             .DATA.L     _es
    00000200 <00000000>             .DATA.L     _sx
    00000204 <00000000>             .DATA.L     _sy
    00000208 <00000000>             .DATA.L     _sa
    0000020C <00000000>             .DATA.L     _v




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000210 <00000000>             .DATA.L     _sp
    00000214 <00000000>             .DATA.L     _ep
    00000218 <00000000>             .DATA.L     __subdr
    0000021C <00000000>             .DATA.L     __itod
    00000220 <00000000>             .DATA.L     __muld
    00000224 40300000               .DATA.L     H'40300000
    00000228 <00000000>             .DATA.L     __divdr
    0000022C <00000000>             .DATA.L     __addd
    00000230 <00000000>             .DATA.L     _fabs
    00000234 53C8D4F1               .DATA.L     H'53C8D4F1
    00000238 400921FB               .DATA.L     H'400921FB
         zbzfs.c    77    
         zbzfs.c    78    // ¼ÆËãÀï³Ìs×ø±êX/Y
         zbzfs.c    79    double zbzs_m_xy(double s, int xy)
    0000023C              _zbzs_m_xy:                      ; function: zbzs_m_xy
                                                           ; frame size=568
                                                           ; used runtime library name:
                                                           ; __addd, __subdr, __muld, __divdr
    0000023C 2FE6                   MOV.L       R14,@-R15
         zbzfs.c    80    {       // N_MAXµÈ·Öµã´¦Àï³Ì
         zbzfs.c    81        double s_array[N_MAX];
         zbzfs.c    82        // N_MAXµÈ·Öµã´¦ÇúÂÊ
         zbzfs.c    83        double p_array[N_MAX];
         zbzfs.c    84        // N_MAXµÈ·Öµã´¦ÇÐÏß·½Î»½Ç
         zbzfs.c    85        double a_array[N_MAX];
         zbzfs.c    86            double sum_n_cos = 0;
    0000023E E200                   MOV         #0,R2
    00000240 90AC                   MOV.W       L669,R0    ; H'FE3C
    00000242 2FD6                   MOV.L       R13,@-R15
    00000244 2FC6                   MOV.L       R12,@-R15
    00000246 2FB6                   MOV.L       R11,@-R15
    00000248 2FA6                   MOV.L       R10,@-R15
    0000024A 2F96                   MOV.L       R9,@-R15
    0000024C 2F86                   MOV.L       R8,@-R15
    0000024E 4F22                   STS.L       PR,@-R15
    00000250 3F0C                   ADD         R0,R15
    00000252 63F3                   MOV         R15,R3
    00000254 1F41                   MOV.L       R4,@(4,R15)
         zbzfs.c    87            double sum_2n_cos = 0;
    00000256 61F3                   MOV         R15,R1
    00000258 733C                   ADD         #60,R3
    0000025A 7134                   ADD         #52,R1
    0000025C 2322                   MOV.L       R2,@R3
    0000025E 6023                   MOV         R2,R0
    00000260 1321                   MOV.L       R2,@(4,R3)
         zbzfs.c    88            double sum_n_sin = 0;
    00000262 63F3                   MOV         R15,R3
    00000264 2122                   MOV.L       R2,@R1
    00000266 732C                   ADD         #44,R3
    00000268 1101                   MOV.L       R0,@(4,R1)
         zbzfs.c    89            double sum_2n_sin = 0;
    0000026A 61F3                   MOV         R15,R1
    0000026C 2302                   MOV.L       R0,@R3
    0000026E 7124                   ADD         #36,R1
    00000270 1301                   MOV.L       R0,@(4,R3)
    00000272 2102                   MOV.L       R0,@R1
    00000274 1101                   MOV.L       R0,@(4,R1)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         zbzfs.c    90            double s_p , s_a;
         zbzfs.c    91            double H = fabs(ss-s)/(N_MAX/2);
    00000276 7FF0                   ADD         #-16,R15
    00000278 D34B                   MOV.L       L669+12,R3 ; _ss
    0000027A 5231                   MOV.L       @(4,R3),R2
    0000027C 908F                   MOV.W       L669+2,R0  ; H'0204
    0000027E 2F26                   MOV.L       R2,@-R15
    00000280 6232                   MOV.L       @R3,R2
    00000282 2F26                   MOV.L       R2,@-R15
    00000284 01FE                   MOV.L       @(R0,R15),R1
    00000286 2F16                   MOV.L       R1,@-R15
    00000288 9089                   MOV.W       L669+2,R0  ; H'0204
    0000028A 01FE                   MOV.L       @(R0,R15),R1
    0000028C D247                   MOV.L       L669+16,R2 ; __subdr
    0000028E 2F16                   MOV.L       R1,@-R15
    00000290 63F3                   MOV         R15,R3
    00000292 7310                   ADD         #16,R3
    00000294 420B                   JSR         @R2
    00000296 2F36                   MOV.L       R3,@-R15
    00000298 D345                   MOV.L       L669+20,R3 ; _fabs
    0000029A E108                   MOV         #8,R1
    0000029C 31FC                   ADD         R15,R1
    0000029E 430B                   JSR         @R3
    000002A0 2F16                   MOV.L       R1,@-R15
    000002A2 7F0C                   ADD         #12,R15
    000002A4 D344                   MOV.L       L669+28,R3 ; __divdr
    000002A6 E100                   MOV         #0,R1
    000002A8 2F16                   MOV.L       R1,@-R15
    000002AA D142                   MOV.L       L669+24,R1 ; H'40200000
    000002AC 2F16                   MOV.L       R1,@-R15
    000002AE 62F3                   MOV         R15,R2
    000002B0 721C                   ADD         #28,R2
    000002B2 430B                   JSR         @R3
    000002B4 2F26                   MOV.L       R2,@-R15
         zbzfs.c    92            // Êý×é³õÊ¼»¯
         zbzfs.c    93            int iTmp;
         zbzfs.c    94            for (iTmp=0; iTmp<N_MAX; iTmp++)
    000002B6 E600                   MOV         #0,R6
    000002B8 9972                   MOV.W       L669+4,R9  ; H'00C4
    000002BA 6DF3                   MOV         R15,R13
    000002BC 9B71                   MOV.W       L669+6,R11 ; H'0144
    000002BE E710                   MOV         #16,R7
    000002C0 6563                   MOV         R6,R5
    000002C2 6463                   MOV         R6,R4
    000002C4 39FC                   ADD         R15,R9
    000002C6 3BFC                   ADD         R15,R11
    000002C8 7D44                   ADD         #68,R13
    000002CA              L626:                             
         zbzfs.c    95            {       s_array[iTmp] = 0;
    000002CA 6343                   MOV         R4,R3
    000002CC 33BC                   ADD         R11,R3
    000002CE 6233                   MOV         R3,R2
    000002D0 E100                   MOV         #0,R1
         zbzfs.c    96            p_array[iTmp] = 0;
    000002D2 6043                   MOV         R4,R0
    000002D4 2212                   MOV.L       R1,@R2
    000002D6 7501                   ADD         #1,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002D8 1211                   MOV.L       R1,@(4,R2)
    000002DA 309C                   ADD         R9,R0
    000002DC 6303                   MOV         R0,R3
    000002DE 6213                   MOV         R1,R2
    000002E0 2312                   MOV.L       R1,@R3
    000002E2 3573                   CMP/GE      R7,R5
    000002E4 1321                   MOV.L       R2,@(4,R3)
         zbzfs.c    97            a_array[iTmp] = 0;
    000002E6 6143                   MOV         R4,R1
    000002E8 31DC                   ADD         R13,R1
    000002EA 6313                   MOV         R1,R3
    000002EC E200                   MOV         #0,R2
    000002EE 2322                   MOV.L       R2,@R3
    000002F0 1321                   MOV.L       R2,@(4,R3)
    000002F2 8FEA                   BF/S        L626
    000002F4 7408                   ADD         #8,R4
         zbzfs.c    98            }
         zbzfs.c    99            // ¼ÆËãN_MAX(n&2n)µÈ·Öµã´¦Àï³Ìµ½s_array(N_MAX)
         zbzfs.c   100            // ¼ÆËãN_MAX(n&2n)µÈ·Öµã´¦ÇúÂÊµ½p_array(N_MAX)
         zbzfs.c   101            // ¼ÆËãN_MAX(n&2n)µÈ·Öµã´¦ÇÐÏß·½Î»½Çµ½A_array(N_MAX)
         zbzfs.c   102            for (iTmp=0; iTmp<(N_MAX-1); iTmp++)
    000002F6 6863                   MOV         R6,R8
    000002F8 EC01                   MOV         #1,R12
    000002FA 6E63                   MOV         R6,R14
    000002FC              L627:                             
         zbzfs.c   103            {       s_array[iTmp] = s_function(s, iTmp+1);
    000002FC 9052                   MOV.W       L669+8,R0  ; H'01EC
    000002FE 64C3                   MOV         R12,R4
    00000300 02FE                   MOV.L       @(R0,R15),R2
    00000302 6AE3                   MOV         R14,R10
    00000304 2F26                   MOV.L       R2,@-R15
    00000306 3ABC                   ADD         R11,R10
    00000308 904C                   MOV.W       L669+8,R0  ; H'01EC
    0000030A 02FE                   MOV.L       @(R0,R15),R2
    0000030C 2F26                   MOV.L       R2,@-R15
    0000030E BEAA                   BSR         _s_function
    00000310 2FA6                   MOV.L       R10,@-R15
         zbzfs.c   104                    p_array[iTmp] = p_function(s_array[iTmp]);
    00000312 63E3                   MOV         R14,R3
    00000314 339C                   ADD         R9,R3
    00000316 1F33                   MOV.L       R3,@(12,R15)
    00000318 52A1                   MOV.L       @(4,R10),R2
    0000031A 2F26                   MOV.L       R2,@-R15
    0000031C 62A2                   MOV.L       @R10,R2
    0000031E 2F26                   MOV.L       R2,@-R15
    00000320 BED0                   BSR         _p_function
    00000322 2F36                   MOV.L       R3,@-R15
         zbzfs.c   105                    a_array[iTmp] = a_function(p_array[iTmp], s_array[iTmp]);
    00000324 52A1                   MOV.L       @(4,R10),R2
    00000326 63E3                   MOV         R14,R3
    00000328 2F26                   MOV.L       R2,@-R15
    0000032A 33DC                   ADD         R13,R3
    0000032C 62A2                   MOV.L       @R10,R2
    0000032E 6133                   MOV         R3,R1
    00000330 2F26                   MOV.L       R2,@-R15
    00000332 53F8                   MOV.L       @(32,R15),R3
    00000334 5231                   MOV.L       @(4,R3),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000336 2F26                   MOV.L       R2,@-R15
    00000338 6232                   MOV.L       @R3,R2
    0000033A 2F26                   MOV.L       R2,@-R15
    0000033C BF08                   BSR         _a_function
    0000033E 2F16                   MOV.L       R1,@-R15
    00000340 7F2C                   ADD         #44,R15
    00000342 7801                   ADD         #1,R8
    00000344 7C01                   ADD         #1,R12
    00000346 E20F                   MOV         #15,R2
    00000348 3823                   CMP/GE      R2,R8
    0000034A 8FD7                   BF/S        L627
    0000034C 7E08                   ADD         #8,R14
    0000034E 6CD3                   MOV         R13,R12
    00000350 DB1A                   MOV.L       L669+32,R11; _cos
    00000352 6AD3                   MOV         R13,R10
    00000354 DE1A                   MOV.L       L669+36,R14; _rad
    00000356 7C08                   ADD         #8,R12
    00000358 1FC2                   MOV.L       R12,@(8,R15)
         zbzfs.c   106            }
         zbzfs.c   107            // ¼ÆËãN_MAX/2(n)µÈ·Öµã´¦ÇÐÏß·½Î»½ÇÓàÏÒºÍsum_n_cos
         zbzfs.c   108    
         zbzfs.c   109        for (iTmp=1; iTmp<(N_MAX-1); iTmp=iTmp+2)
    0000035A A01B                   BRA         L628
    0000035C 7A78                   ADD         #120,R10
    0000035E              L629:                             
         zbzfs.c   110            {       
         zbzfs.c   111                    sum_n_cos = sum_n_cos+cos(rad(a_array[iTmp]));
    0000035E E040                   MOV         #64,R0
    00000360 02FE                   MOV.L       @(R0,R15),R2
    00000362 E040                   MOV         #64,R0
    00000364 2F26                   MOV.L       R2,@-R15
    00000366 02FE                   MOV.L       @(R0,R15),R2
    00000368 2F26                   MOV.L       R2,@-R15
    0000036A 7FF0                   ADD         #-16,R15
    0000036C 53C1                   MOV.L       @(4,R12),R3
    0000036E E208                   MOV         #8,R2
    00000370 2F36                   MOV.L       R3,@-R15
    00000372 63C2                   MOV.L       @R12,R3
    00000374 2F36                   MOV.L       R3,@-R15
    00000376 32FC                   ADD         R15,R2
    00000378 4E0B                   JSR         @R14
    0000037A 2F26                   MOV.L       R2,@-R15
    0000037C 7F0C                   ADD         #12,R15
    0000037E E108                   MOV         #8,R1
    00000380 31FC                   ADD         R15,R1
    00000382 4B0B                   JSR         @R11
    00000384 2F16                   MOV.L       R1,@-R15
    00000386 7F0C                   ADD         #12,R15
    00000388 D20E                   MOV.L       L669+40,R2 ; __addd
    0000038A 61F3                   MOV         R15,R1
    0000038C 714C                   ADD         #76,R1
    0000038E 420B                   JSR         @R2
    00000390 2F16                   MOV.L       R1,@-R15
    00000392 7C10                   ADD         #16,R12
    00000394              L628:                             
    00000394 3CA2                   CMP/HS      R10,R12
    00000396 8BE2                   BF          L629




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         zbzfs.c   112            }
         zbzfs.c   113            // ¼ÆËãN_MAX(2n)µÈ·Öµã´¦ÇÐÏß·½Î»½ÇÓàÏÒºÍsum_2n_cos
         zbzfs.c   114            
         zbzfs.c   115            for (iTmp=0; iTmp<(N_MAX-1); iTmp=iTmp+2)
    00000398 A02F                   BRA         L630
    0000039A 2FD2                   MOV.L       R13,@R15
    0000039C              L669:                             
    0000039C FE3C                   .DATA.W     H'FE3C
    0000039E 0204                   .DATA.W     H'0204
    000003A0 00C4                   .DATA.W     H'00C4
    000003A2 0144                   .DATA.W     H'0144
    000003A4 01EC                   .DATA.W     H'01EC
    000003A6 0000                   .DATA.W     0
    000003A8 <00000000>             .DATA.L     _ss
    000003AC <00000000>             .DATA.L     __subdr
    000003B0 <00000000>             .DATA.L     _fabs
    000003B4 40200000               .DATA.L     H'40200000
    000003B8 <00000000>             .DATA.L     __divdr
    000003BC <00000000>             .DATA.L     _cos
    000003C0 <00000000>             .DATA.L     _rad
    000003C4 <00000000>             .DATA.L     __addd
    000003C8              L631:                             
         zbzfs.c   116            {       sum_2n_cos = sum_2n_cos+cos(rad(a_array[iTmp]));
    000003C8 52FE                   MOV.L       @(56,R15),R2
    000003CA 2F26                   MOV.L       R2,@-R15
    000003CC 52FE                   MOV.L       @(56,R15),R2
    000003CE 2F26                   MOV.L       R2,@-R15
    000003D0 7FF0                   ADD         #-16,R15
    000003D2 E208                   MOV         #8,R2
    000003D4 53D1                   MOV.L       @(4,R13),R3
    000003D6 2F36                   MOV.L       R3,@-R15
    000003D8 63D2                   MOV.L       @R13,R3
    000003DA 2F36                   MOV.L       R3,@-R15
    000003DC 32FC                   ADD         R15,R2
    000003DE 4E0B                   JSR         @R14
    000003E0 2F26                   MOV.L       R2,@-R15
    000003E2 7F0C                   ADD         #12,R15
    000003E4 E108                   MOV         #8,R1
    000003E6 31FC                   ADD         R15,R1
    000003E8 4B0B                   JSR         @R11
    000003EA 2F16                   MOV.L       R1,@-R15
    000003EC D214                   MOV.L       L670+2,R2  ; __addd
    000003EE 7F0C                   ADD         #12,R15
    000003F0 61F3                   MOV         R15,R1
    000003F2 7144                   ADD         #68,R1
    000003F4 420B                   JSR         @R2
    000003F6 2F16                   MOV.L       R1,@-R15
    000003F8 7D10                   ADD         #16,R13
    000003FA              L630:                             
    000003FA 3DA2                   CMP/HS      R10,R13
    000003FC 8BE4                   BF          L631
    000003FE DC11                   MOV.L       L670+6,R12 ; _sin
         zbzfs.c   117            }
         zbzfs.c   118            // ¼ÆËãN_MAX/2(n)µÈ·Öµã´¦ÇÐÏß·½Î»½ÇÕýÏÒºÍsum_n_sin
         zbzfs.c   119            
         zbzfs.c   120        for (iTmp=1; iTmp<(N_MAX-1); iTmp=iTmp+2)
    00000400 A019                   BRA         L632




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000402 5DF2                   MOV.L       @(8,R15),R13
    00000404              L633:                             
         zbzfs.c   121            {       sum_n_sin = sum_n_sin+sin(rad(a_array[iTmp]));
    00000404 52FC                   MOV.L       @(48,R15),R2
    00000406 2F26                   MOV.L       R2,@-R15
    00000408 52FC                   MOV.L       @(48,R15),R2
    0000040A 2F26                   MOV.L       R2,@-R15
    0000040C 7FF0                   ADD         #-16,R15
    0000040E E208                   MOV         #8,R2
    00000410 53D1                   MOV.L       @(4,R13),R3
    00000412 2F36                   MOV.L       R3,@-R15
    00000414 63D2                   MOV.L       @R13,R3
    00000416 2F36                   MOV.L       R3,@-R15
    00000418 32FC                   ADD         R15,R2
    0000041A 4E0B                   JSR         @R14
    0000041C 2F26                   MOV.L       R2,@-R15
    0000041E 7F0C                   ADD         #12,R15
    00000420 E108                   MOV         #8,R1
    00000422 31FC                   ADD         R15,R1
    00000424 4C0B                   JSR         @R12
    00000426 2F16                   MOV.L       R1,@-R15
    00000428 D205                   MOV.L       L670+2,R2  ; __addd
    0000042A 7F0C                   ADD         #12,R15
    0000042C 61F3                   MOV         R15,R1
    0000042E 713C                   ADD         #60,R1
    00000430 420B                   JSR         @R2
    00000432 2F16                   MOV.L       R1,@-R15
    00000434 7D10                   ADD         #16,R13
    00000436              L632:                             
    00000436 3DA2                   CMP/HS      R10,R13
    00000438 8BE4                   BF          L633
         zbzfs.c   122            }
         zbzfs.c   123            // ¼ÆËãN_MAX(2n)µÈ·Öµã´¦ÇÐÏß·½Î»½ÇÕýÏÒºÍsum_2n_sin
         zbzfs.c   124            
         zbzfs.c   125            for (iTmp=0; iTmp<(N_MAX-1); iTmp=iTmp+2)
    0000043A A01E                   BRA         L634
    0000043C 6DF2                   MOV.L       @R15,R13
    0000043E              L670:                             
    0000043E 0000                   .DATA.W     0
    00000440 <00000000>             .DATA.L     __addd
    00000444 <00000000>             .DATA.L     _sin
    00000448              L635:                             
         zbzfs.c   126            {       sum_2n_sin = sum_2n_sin+sin(rad(a_array[iTmp]));
    00000448 52FA                   MOV.L       @(40,R15),R2
    0000044A 2F26                   MOV.L       R2,@-R15
    0000044C 52FA                   MOV.L       @(40,R15),R2
    0000044E 2F26                   MOV.L       R2,@-R15
    00000450 7FF0                   ADD         #-16,R15
    00000452 E208                   MOV         #8,R2
    00000454 53D1                   MOV.L       @(4,R13),R3
    00000456 2F36                   MOV.L       R3,@-R15
    00000458 63D2                   MOV.L       @R13,R3
    0000045A 2F36                   MOV.L       R3,@-R15
    0000045C 32FC                   ADD         R15,R2
    0000045E 4E0B                   JSR         @R14
    00000460 2F26                   MOV.L       R2,@-R15
    00000462 7F0C                   ADD         #12,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000464 E108                   MOV         #8,R1
    00000466 31FC                   ADD         R15,R1
    00000468 4C0B                   JSR         @R12
    0000046A 2F16                   MOV.L       R1,@-R15
    0000046C D24C                   MOV.L       L671+8,R2  ; __addd
    0000046E 7F0C                   ADD         #12,R15
    00000470 61F3                   MOV         R15,R1
    00000472 7134                   ADD         #52,R1
    00000474 420B                   JSR         @R2
    00000476 2F16                   MOV.L       R1,@-R15
    00000478 7D10                   ADD         #16,R13
    0000047A              L634:                             
    0000047A 3DA2                   CMP/HS      R10,R13
    0000047C 8BE4                   BF          L635
         zbzfs.c   127            }
         zbzfs.c   128            // ¼ÆËãs´¦ÇúÂÊs_p¼°ÇÐÏß·½Î»½Çs_a
         zbzfs.c   129            
         zbzfs.c   130            s_p = p_function(s);
    0000047E 908B                   MOV.W       L671,R0    ; H'01EC
    00000480 02FE                   MOV.L       @(R0,R15),R2
    00000482 2F26                   MOV.L       R2,@-R15
    00000484 9088                   MOV.W       L671,R0    ; H'01EC
    00000486 02FE                   MOV.L       @(R0,R15),R2
    00000488 2F26                   MOV.L       R2,@-R15
    0000048A 63F3                   MOV         R15,R3
    0000048C 7324                   ADD         #36,R3
    0000048E BE19                   BSR         _p_function
    00000490 2F36                   MOV.L       R3,@-R15
         zbzfs.c   131            s_a = a_function(s_p, s);
    00000492 9082                   MOV.W       L671+2,R0  ; H'01F8
    00000494 03FE                   MOV.L       @(R0,R15),R3
    00000496 2F36                   MOV.L       R3,@-R15
    00000498 907F                   MOV.W       L671+2,R0  ; H'01F8
    0000049A 03FE                   MOV.L       @(R0,R15),R3
    0000049C 2F36                   MOV.L       R3,@-R15
    0000049E 52FD                   MOV.L       @(52,R15),R2
    000004A0 2F26                   MOV.L       R2,@-R15
    000004A2 52FD                   MOV.L       @(52,R15),R2
    000004A4 2F26                   MOV.L       R2,@-R15
    000004A6 63F3                   MOV         R15,R3
    000004A8 7330                   ADD         #48,R3
    000004AA BE51                   BSR         _a_function
    000004AC 2F36                   MOV.L       R3,@-R15
    000004AE 7F20                   ADD         #32,R15
         zbzfs.c   132    
         zbzfs.c   133            // ¼ÆËã×ø±êÖµ
         zbzfs.c   134            
         zbzfs.c   135            if( xy==0 )
    000004B0 53F1                   MOV.L       @(4,R15),R3
    000004B2 2338                   TST         R3,R3
    000004B4 8901                   BT          L672
    000004B6 A083                   BRA         L636
    000004B8 0009                   NOP
    000004BA              L672:                             
         zbzfs.c   136            {       return (sx + H / 6 * (cos(rad(sa)) + 4 * sum_2n_cos + 2 * sum_n_cos + cos(rad(s_a))));
    000004BA D33A                   MOV.L       L671+12,R3 ; _sx
    000004BC 5131                   MOV.L       @(4,R3),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004BE 2F16                   MOV.L       R1,@-R15
    000004C0 6132                   MOV.L       @R3,R1
    000004C2 E300                   MOV         #0,R3
    000004C4 2F16                   MOV.L       R1,@-R15
    000004C6 7FF0                   ADD         #-16,R15
    000004C8 D138                   MOV.L       L671+20,R1 ; __divdr
    000004CA 52FA                   MOV.L       @(40,R15),R2
    000004CC 2F26                   MOV.L       R2,@-R15
    000004CE 52FA                   MOV.L       @(40,R15),R2
    000004D0 2F26                   MOV.L       R2,@-R15
    000004D2 2F36                   MOV.L       R3,@-R15
    000004D4 D334                   MOV.L       L671+16,R3 ; H'40180000
    000004D6 2F36                   MOV.L       R3,@-R15
    000004D8 62F3                   MOV         R15,R2
    000004DA 7210                   ADD         #16,R2
    000004DC 410B                   JSR         @R1
    000004DE 2F26                   MOV.L       R2,@-R15
    000004E0 D333                   MOV.L       L671+24,R3 ; _sa
    000004E2 E208                   MOV         #8,R2
    000004E4 7FD8                   ADD         #-40,R15
    000004E6 5031                   MOV.L       @(4,R3),R0
    000004E8 2F06                   MOV.L       R0,@-R15
    000004EA 6032                   MOV.L       @R3,R0
    000004EC 2F06                   MOV.L       R0,@-R15
    000004EE 32FC                   ADD         R15,R2
    000004F0 4E0B                   JSR         @R14
    000004F2 2F26                   MOV.L       R2,@-R15
    000004F4 7F0C                   ADD         #12,R15
    000004F6 E108                   MOV         #8,R1
    000004F8 31FC                   ADD         R15,R1
    000004FA 4B0B                   JSR         @R11
    000004FC 2F16                   MOV.L       R1,@-R15
    000004FE 7F04                   ADD         #4,R15
    00000500 D12D                   MOV.L       L671+32,R1 ; __muld
    00000502 E078                   MOV         #120,R0
    00000504 02FE                   MOV.L       @(R0,R15),R2
    00000506 E300                   MOV         #0,R3
    00000508 2F26                   MOV.L       R2,@-R15
    0000050A E078                   MOV         #120,R0
    0000050C 02FE                   MOV.L       @(R0,R15),R2
    0000050E 2F26                   MOV.L       R2,@-R15
    00000510 2F36                   MOV.L       R3,@-R15
    00000512 D328                   MOV.L       L671+28,R3 ; H'40100000
    00000514 2F36                   MOV.L       R3,@-R15
    00000516 62F3                   MOV         R15,R2
    00000518 7210                   ADD         #16,R2
    0000051A 410B                   JSR         @R1
    0000051C 2F26                   MOV.L       R2,@-R15
    0000051E 63F3                   MOV         R15,R3
    00000520 D01F                   MOV.L       L671+8,R0  ; __addd
    00000522 7310                   ADD         #16,R3
    00000524 400B                   JSR         @R0
    00000526 2F36                   MOV.L       R3,@-R15
    00000528 D123                   MOV.L       L671+32,R1 ; __muld
    0000052A 7FF8                   ADD         #-8,R15
    0000052C E078                   MOV         #120,R0
    0000052E E300                   MOV         #0,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000530 02FE                   MOV.L       @(R0,R15),R2
    00000532 E078                   MOV         #120,R0
    00000534 2F26                   MOV.L       R2,@-R15
    00000536 02FE                   MOV.L       @(R0,R15),R2
    00000538 2F26                   MOV.L       R2,@-R15
    0000053A 2F36                   MOV.L       R3,@-R15
    0000053C D31F                   MOV.L       L671+36,R3 ; H'40000000
    0000053E 2F36                   MOV.L       R3,@-R15
    00000540 62F3                   MOV         R15,R2
    00000542 7210                   ADD         #16,R2
    00000544 410B                   JSR         @R1
    00000546 2F26                   MOV.L       R2,@-R15
    00000548 D015                   MOV.L       L671+8,R0  ; __addd
    0000054A 63F3                   MOV         R15,R3
    0000054C 7310                   ADD         #16,R3
    0000054E 400B                   JSR         @R0
    00000550 2F36                   MOV.L       R3,@-R15
    00000552 7FF0                   ADD         #-16,R15
    00000554 E050                   MOV         #80,R0
    00000556 E308                   MOV         #8,R3
    00000558 02FE                   MOV.L       @(R0,R15),R2
    0000055A E050                   MOV         #80,R0
    0000055C 2F26                   MOV.L       R2,@-R15
    0000055E 02FE                   MOV.L       @(R0,R15),R2
    00000560 2F26                   MOV.L       R2,@-R15
    00000562 33FC                   ADD         R15,R3
    00000564 4E0B                   JSR         @R14
    00000566 2F36                   MOV.L       R3,@-R15
    00000568 7F0C                   ADD         #12,R15
    0000056A E108                   MOV         #8,R1
    0000056C 31FC                   ADD         R15,R1
    0000056E 4B0B                   JSR         @R11
    00000570 2F16                   MOV.L       R1,@-R15
    00000572 7F0C                   ADD         #12,R15
    00000574 D10A                   MOV.L       L671+8,R1  ; __addd
    00000576 63F3                   MOV         R15,R3
    00000578 7310                   ADD         #16,R3
    0000057A 410B                   JSR         @R1
    0000057C 2F36                   MOV.L       R3,@-R15
    0000057E 62F3                   MOV         R15,R2
    00000580 D00D                   MOV.L       L671+32,R0 ; __muld
    00000582 7210                   ADD         #16,R2
    00000584 400B                   JSR         @R0
    00000586 2F26                   MOV.L       R2,@-R15
    00000588 9108                   MOV.W       L671+4,R1  ; H'01F4
    0000058A 31FC                   ADD         R15,R1
    0000058C 6112                   MOV.L       @R1,R1
    0000058E D304                   MOV.L       L671+8,R3  ; __addd
    00000590 430B                   JSR         @R3
    00000592 2F16                   MOV.L       R1,@-R15
    00000594 A081                   BRA         L637
    00000596 0009                   NOP
    00000598              L671:                             
    00000598 01EC                   .DATA.W     H'01EC
    0000059A 01F8                   .DATA.W     H'01F8
    0000059C 01F4                   .DATA.W     H'01F4
    0000059E 0000                   .DATA.W     0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005A0 <00000000>             .DATA.L     __addd
    000005A4 <00000000>             .DATA.L     _sx
    000005A8 40180000               .DATA.L     H'40180000
    000005AC <00000000>             .DATA.L     __divdr
    000005B0 <00000000>             .DATA.L     _sa
    000005B4 40100000               .DATA.L     H'40100000
    000005B8 <00000000>             .DATA.L     __muld
    000005BC 40000000               .DATA.L     H'40000000
    000005C0              L636:                             
         zbzfs.c   137            }
         zbzfs.c   138            else
         zbzfs.c   139            {       return (sy + H / 6 * (sin(rad(sa)) + 4 * sum_2n_sin + 2 * sum_n_sin + sin(rad(s_a))));
    000005C0 D03C                   MOV.L       L673+4,R0  ; _sy
    000005C2 5201                   MOV.L       @(4,R0),R2
    000005C4 D13D                   MOV.L       L673+12,R1 ; __divdr
    000005C6 2F26                   MOV.L       R2,@-R15
    000005C8 6202                   MOV.L       @R0,R2
    000005CA 2F26                   MOV.L       R2,@-R15
    000005CC 7FF0                   ADD         #-16,R15
    000005CE E200                   MOV         #0,R2
    000005D0 53FA                   MOV.L       @(40,R15),R3
    000005D2 2F36                   MOV.L       R3,@-R15
    000005D4 53FA                   MOV.L       @(40,R15),R3
    000005D6 2F36                   MOV.L       R3,@-R15
    000005D8 2F26                   MOV.L       R2,@-R15
    000005DA D237                   MOV.L       L673+8,R2  ; H'40180000
    000005DC 2F26                   MOV.L       R2,@-R15
    000005DE 63F3                   MOV         R15,R3
    000005E0 7310                   ADD         #16,R3
    000005E2 410B                   JSR         @R1
    000005E4 2F36                   MOV.L       R3,@-R15
    000005E6 7FD8                   ADD         #-40,R15
    000005E8 D235                   MOV.L       L673+16,R2 ; _sa
    000005EA E308                   MOV         #8,R3
    000005EC 5021                   MOV.L       @(4,R2),R0
    000005EE 2F06                   MOV.L       R0,@-R15
    000005F0 6022                   MOV.L       @R2,R0
    000005F2 2F06                   MOV.L       R0,@-R15
    000005F4 33FC                   ADD         R15,R3
    000005F6 4E0B                   JSR         @R14
    000005F8 2F36                   MOV.L       R3,@-R15
    000005FA 7F0C                   ADD         #12,R15
    000005FC E108                   MOV         #8,R1
    000005FE 31FC                   ADD         R15,R1
    00000600 4C0B                   JSR         @R12
    00000602 2F16                   MOV.L       R1,@-R15
    00000604 D130                   MOV.L       L673+24,R1 ; __muld
    00000606 7F04                   ADD         #4,R15
    00000608 E068                   MOV         #104,R0
    0000060A E200                   MOV         #0,R2
    0000060C 03FE                   MOV.L       @(R0,R15),R3
    0000060E E068                   MOV         #104,R0
    00000610 2F36                   MOV.L       R3,@-R15
    00000612 03FE                   MOV.L       @(R0,R15),R3
    00000614 2F36                   MOV.L       R3,@-R15
    00000616 2F26                   MOV.L       R2,@-R15
    00000618 D22A                   MOV.L       L673+20,R2 ; H'40100000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000061A 2F26                   MOV.L       R2,@-R15
    0000061C 63F3                   MOV         R15,R3
    0000061E 7310                   ADD         #16,R3
    00000620 410B                   JSR         @R1
    00000622 2F36                   MOV.L       R3,@-R15
    00000624 D029                   MOV.L       L673+28,R0 ; __addd
    00000626 62F3                   MOV         R15,R2
    00000628 7210                   ADD         #16,R2
    0000062A 400B                   JSR         @R0
    0000062C 2F26                   MOV.L       R2,@-R15
    0000062E 7FF8                   ADD         #-8,R15
    00000630 D125                   MOV.L       L673+24,R1 ; __muld
    00000632 E068                   MOV         #104,R0
    00000634 03FE                   MOV.L       @(R0,R15),R3
    00000636 E200                   MOV         #0,R2
    00000638 2F36                   MOV.L       R3,@-R15
    0000063A E068                   MOV         #104,R0
    0000063C 03FE                   MOV.L       @(R0,R15),R3
    0000063E 2F36                   MOV.L       R3,@-R15
    00000640 2F26                   MOV.L       R2,@-R15
    00000642 D223                   MOV.L       L673+32,R2 ; H'40000000
    00000644 2F26                   MOV.L       R2,@-R15
    00000646 63F3                   MOV         R15,R3
    00000648 7310                   ADD         #16,R3
    0000064A 410B                   JSR         @R1
    0000064C 2F36                   MOV.L       R3,@-R15
    0000064E 62F3                   MOV         R15,R2
    00000650 D01E                   MOV.L       L673+28,R0 ; __addd
    00000652 7210                   ADD         #16,R2
    00000654 400B                   JSR         @R0
    00000656 2F26                   MOV.L       R2,@-R15
    00000658 7FF0                   ADD         #-16,R15
    0000065A E050                   MOV         #80,R0
    0000065C 03FE                   MOV.L       @(R0,R15),R3
    0000065E E208                   MOV         #8,R2
    00000660 2F36                   MOV.L       R3,@-R15
    00000662 E050                   MOV         #80,R0
    00000664 03FE                   MOV.L       @(R0,R15),R3
    00000666 2F36                   MOV.L       R3,@-R15
    00000668 32FC                   ADD         R15,R2
    0000066A 4E0B                   JSR         @R14
    0000066C 2F26                   MOV.L       R2,@-R15
    0000066E 7F0C                   ADD         #12,R15
    00000670 E108                   MOV         #8,R1
    00000672 31FC                   ADD         R15,R1
    00000674 4C0B                   JSR         @R12
    00000676 2F16                   MOV.L       R1,@-R15
    00000678 D114                   MOV.L       L673+28,R1 ; __addd
    0000067A 7F0C                   ADD         #12,R15
    0000067C 62F3                   MOV         R15,R2
    0000067E 7210                   ADD         #16,R2
    00000680 410B                   JSR         @R1
    00000682 2F26                   MOV.L       R2,@-R15
    00000684 D010                   MOV.L       L673+24,R0 ; __muld
    00000686 63F3                   MOV         R15,R3
    00000688 7310                   ADD         #16,R3
    0000068A 400B                   JSR         @R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000068C 2F36                   MOV.L       R3,@-R15
    0000068E 910F                   MOV.W       L673,R1    ; H'01F4
    00000690 D20E                   MOV.L       L673+28,R2 ; __addd
    00000692 31FC                   ADD         R15,R1
    00000694 6112                   MOV.L       @R1,R1
    00000696 420B                   JSR         @R2
    00000698 2F16                   MOV.L       R1,@-R15
         zbzfs.c   140            }
         zbzfs.c   141    }
    0000069A              L637:                             
    0000069A 910A                   MOV.W       L673+2,R1  ; H'01C4
    0000069C 3F1C                   ADD         R1,R15
    0000069E 4F26                   LDS.L       @R15+,PR
    000006A0 68F6                   MOV.L       @R15+,R8
    000006A2 69F6                   MOV.L       @R15+,R9
    000006A4 6AF6                   MOV.L       @R15+,R10
    000006A6 6BF6                   MOV.L       @R15+,R11
    000006A8 6CF6                   MOV.L       @R15+,R12
    000006AA 6DF6                   MOV.L       @R15+,R13
    000006AC 000B                   RTS
    000006AE 6EF6                   MOV.L       @R15+,R14
    000006B0              L673:                             
    000006B0 01F4                   .DATA.W     H'01F4
    000006B2 01C4                   .DATA.W     H'01C4
    000006B4 <00000000>             .DATA.L     _sy
    000006B8 40180000               .DATA.L     H'40180000
    000006BC <00000000>             .DATA.L     __divdr
    000006C0 <00000000>             .DATA.L     _sa
    000006C4 40100000               .DATA.L     H'40100000
    000006C8 <00000000>             .DATA.L     __muld
    000006CC <00000000>             .DATA.L     __addd
    000006D0 40000000               .DATA.L     H'40000000
         zbzfs.c   142    
         zbzfs.c   143    // ¼ÆËãÀï³Ìs×ø±ê·½Î»½ÇA
         zbzfs.c   144    double zbzs_m_a(double s)
    000006D4              _zbzs_m_a:                       ; function: zbzs_m_a
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __addd, __gtd, __ltd
    000006D4 4F22                   STS.L       PR,@-R15
    000006D6 7FF8                   ADD         #-8,R15
         zbzfs.c   145    {       double ma;
         zbzfs.c   146            ma = a_function(p_function(s), s);
    000006D8 53F5                   MOV.L       @(20,R15),R3
    000006DA 2F36                   MOV.L       R3,@-R15
    000006DC 53F5                   MOV.L       @(20,R15),R3
    000006DE 2F36                   MOV.L       R3,@-R15
    000006E0 7FF8                   ADD         #-8,R15
    000006E2 E308                   MOV         #8,R3
    000006E4 52F9                   MOV.L       @(36,R15),R2
    000006E6 2F26                   MOV.L       R2,@-R15
    000006E8 52F9                   MOV.L       @(36,R15),R2
    000006EA 2F26                   MOV.L       R2,@-R15
    000006EC 33FC                   ADD         R15,R3
    000006EE BCE9                   BSR         _p_function
    000006F0 2F36                   MOV.L       R3,@-R15
    000006F2 7F0C                   ADD         #12,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006F4 63F3                   MOV         R15,R3
    000006F6 7310                   ADD         #16,R3
    000006F8 BD2A                   BSR         _a_function
    000006FA 2F36                   MOV.L       R3,@-R15
    000006FC 7F14                   ADD         #20,R15
         zbzfs.c   147            if (ma>360)
    000006FE E200                   MOV         #0,R2
    00000700 53F1                   MOV.L       @(4,R15),R3
    00000702 2F36                   MOV.L       R3,@-R15
    00000704 53F1                   MOV.L       @(4,R15),R3
    00000706 2F36                   MOV.L       R3,@-R15
    00000708 2F26                   MOV.L       R2,@-R15
    0000070A D21A                   MOV.L       L674,R2    ; H'40768000
    0000070C D31A                   MOV.L       L674+4,R3  ; __gtd
    0000070E 430B                   JSR         @R3
    00000710 2F26                   MOV.L       R2,@-R15
    00000712 8800                   CMP/EQ      #0,R0
    00000714 890C                   BT          L639
         zbzfs.c   148            {       ma = ma-360;
    00000716 E300                   MOV         #0,R3
    00000718 52F1                   MOV.L       @(4,R15),R2
    0000071A 2F26                   MOV.L       R2,@-R15
    0000071C 52F1                   MOV.L       @(4,R15),R2
    0000071E 2F26                   MOV.L       R2,@-R15
    00000720 2F36                   MOV.L       R3,@-R15
    00000722 D316                   MOV.L       L674+8,R3  ; H'C0768000
    00000724 D216                   MOV.L       L674+12,R2 ; __addd
    00000726 2F36                   MOV.L       R3,@-R15
    00000728 61F3                   MOV         R15,R1
    0000072A 7110                   ADD         #16,R1
    0000072C 420B                   JSR         @R2
    0000072E 2F16                   MOV.L       R1,@-R15
    00000730              L639:                             
         zbzfs.c   149            }
         zbzfs.c   150            if (ma<0)
    00000730 53F1                   MOV.L       @(4,R15),R3
    00000732 E200                   MOV         #0,R2
    00000734 2F36                   MOV.L       R3,@-R15
    00000736 53F1                   MOV.L       @(4,R15),R3
    00000738 2F36                   MOV.L       R3,@-R15
    0000073A 2F26                   MOV.L       R2,@-R15
    0000073C D311                   MOV.L       L674+16,R3 ; __ltd
    0000073E 430B                   JSR         @R3
    00000740 2F26                   MOV.L       R2,@-R15
    00000742 8800                   CMP/EQ      #0,R0
    00000744 890C                   BT          L640
         zbzfs.c   151            {       ma = ma+360;
    00000746 E300                   MOV         #0,R3
    00000748 52F1                   MOV.L       @(4,R15),R2
    0000074A 2F26                   MOV.L       R2,@-R15
    0000074C 52F1                   MOV.L       @(4,R15),R2
    0000074E 2F26                   MOV.L       R2,@-R15
    00000750 2F36                   MOV.L       R3,@-R15
    00000752 D308                   MOV.L       L674,R3    ; H'40768000
    00000754 D20A                   MOV.L       L674+12,R2 ; __addd
    00000756 2F36                   MOV.L       R3,@-R15
    00000758 61F3                   MOV         R15,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000075A 7110                   ADD         #16,R1
    0000075C 420B                   JSR         @R2
    0000075E 2F16                   MOV.L       R1,@-R15
    00000760              L640:                             
         zbzfs.c   152            }
         zbzfs.c   153            return ma;
    00000760 52F3                   MOV.L       @(12,R15),R2
    00000762 60F3                   MOV         R15,R0
    00000764 6102                   MOV.L       @R0,R1
    00000766 2212                   MOV.L       R1,@R2
    00000768 5101                   MOV.L       @(4,R0),R1
    0000076A 1211                   MOV.L       R1,@(4,R2)
         zbzfs.c   154    }
    0000076C 7F08                   ADD         #8,R15
    0000076E 4F26                   LDS.L       @R15+,PR
    00000770 000B                   RTS
    00000772 0009                   NOP
    00000774              L674:                             
    00000774 40768000               .DATA.L     H'40768000
    00000778 <00000000>             .DATA.L     __gtd
    0000077C C0768000               .DATA.L     H'C0768000
    00000780 <00000000>             .DATA.L     __addd
    00000784 <00000000>             .DATA.L     __ltd
         zbzfs.c   155    
         zbzfs.c   156    // ¼ÆËãPµã×ø±êpx/py¶ÔÓ¦µÄÀï³Ì¼°Æ«¾à

         zbzfs.c   159    //    ÇÒd1(¾àÏßÔªÆðµã·¨Ïß´¹¾à)Ð¡ÓÚÏßÔª³¤¶È²ÉÓÃËã·¨A
         zbzfs.c   160    // 2. Î»ÓÚÏßÔªÄÚ²àÇÒÎ»ÓÚÔ²ÐÄÍâ²à²ÉÓÃËã·¨B
         zbzfs.c   161    // 3. Î»ÓÚÏßÔªÍâ²àÇÒd1¾àÏßÔª³¬¹ýÏßÔª³¤¶È²ÉÓÃËã·¨B
         zbzfs.c   162    double zbfs_s_d(double px, double py, int sd)
    00000788              _zbfs_s_d:                       ; function: zbfs_s_d
                                                           ; frame size=244
                                                           ; used runtime library name:
                                                           ; __addd, __subdr, __muld, __divdr, __gtd, __ltd, __led
    00000788 2FE6                   MOV.L       R14,@-R15
    0000078A 2FD6                   MOV.L       R13,@-R15
    0000078C 2FC6                   MOV.L       R12,@-R15
    0000078E 2FB6                   MOV.L       R11,@-R15
    00000790 4F22                   STS.L       PR,@-R15
    00000792 7F84                   ADD         #-124,R15
         zbzfs.c   163    {       // ¼ÆËãÏßÔªÖÕµã×ø±êex/ey¼°·½Î»½Çea
         zbzfs.c   164            double ex = zbzs_m_xy(es, 0);
    00000794 D35E                   MOV.L       L675+10,R3 ; _es
    00000796 2F42                   MOV.L       R4,@R15
    00000798 5231                   MOV.L       @(4,R3),R2
    0000079A E400                   MOV         #0,R4
    0000079C 2F26                   MOV.L       R2,@-R15
    0000079E 6232                   MOV.L       @R3,R2
    000007A0 2F26                   MOV.L       R2,@-R15
    000007A2 63F3                   MOV         R15,R3
    000007A4 737C                   ADD         #124,R3
    000007A6 BD49                   BSR         _zbzs_m_xy
    000007A8 2F36                   MOV.L       R3,@-R15
         zbzfs.c   165            double ey = zbzs_m_xy(es, 1);
    000007AA E401                   MOV         #1,R4
    000007AC D358                   MOV.L       L675+10,R3 ; _es
    000007AE 5231                   MOV.L       @(4,R3),R2
    000007B0 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007B2 6232                   MOV.L       @R3,R2
    000007B4 93A7                   MOV.W       L675,R3    ; H'0080
    000007B6 2F26                   MOV.L       R2,@-R15
    000007B8 33FC                   ADD         R15,R3
    000007BA BD3F                   BSR         _zbzs_m_xy
    000007BC 2F36                   MOV.L       R3,@-R15
         zbzfs.c   166            double ea = zbzs_m_a (es);
    000007BE D354                   MOV.L       L675+10,R3 ; _es
    000007C0 91A2                   MOV.W       L675+2,R1  ; H'0084
    000007C2 5231                   MOV.L       @(4,R3),R2
    000007C4 2F26                   MOV.L       R2,@-R15
    000007C6 6232                   MOV.L       @R3,R2
    000007C8 2F26                   MOV.L       R2,@-R15
    000007CA 31FC                   ADD         R15,R1
    000007CC BF82                   BSR         _zbzs_m_a
    000007CE 2F16                   MOV.L       R1,@-R15
         zbzfs.c   167    
         zbzfs.c   168            // ¼ÆËãÏßÔªÆðÖÕµãÖÁPµã·½Î»½ÇÖ®¼Ð½Ç
         zbzfs.c   169            double sa_spa_b = fabs(sa - azimuth(sx, sy, px, py) );
    000007D0 DD50                   MOV.L       L675+14,R13; _fabs
    000007D2 7F1C                   ADD         #28,R15
    000007D4 D250                   MOV.L       L675+18,R2 ; _sa
    000007D6 5321                   MOV.L       @(4,R2),R3
    000007D8 9097                   MOV.W       L675+4,R0  ; H'00B8
    000007DA 2F36                   MOV.L       R3,@-R15
    000007DC 6322                   MOV.L       @R2,R3
    000007DE 2F36                   MOV.L       R3,@-R15
    000007E0 D24E                   MOV.L       L675+22,R2 ; _sy
    000007E2 7FF8                   ADD         #-8,R15
    000007E4 01FE                   MOV.L       @(R0,R15),R1
    000007E6 2F16                   MOV.L       R1,@-R15
    000007E8 908F                   MOV.W       L675+4,R0  ; H'00B8
    000007EA 01FE                   MOV.L       @(R0,R15),R1
    000007EC 908D                   MOV.W       L675+4,R0  ; H'00B8
    000007EE 2F16                   MOV.L       R1,@-R15
    000007F0 03FE                   MOV.L       @(R0,R15),R3
    000007F2 2F36                   MOV.L       R3,@-R15
    000007F4 9089                   MOV.W       L675+4,R0  ; H'00B8
    000007F6 03FE                   MOV.L       @(R0,R15),R3
    000007F8 2F36                   MOV.L       R3,@-R15
    000007FA 5121                   MOV.L       @(4,R2),R1
    000007FC D348                   MOV.L       L675+26,R3 ; _sx
    000007FE 2F16                   MOV.L       R1,@-R15
    00000800 6122                   MOV.L       @R2,R1
    00000802 E220                   MOV         #32,R2
    00000804 2F16                   MOV.L       R1,@-R15
    00000806 5031                   MOV.L       @(4,R3),R0
    00000808 2F06                   MOV.L       R0,@-R15
    0000080A 6032                   MOV.L       @R3,R0
    0000080C 2F06                   MOV.L       R0,@-R15
    0000080E 32FC                   ADD         R15,R2
    00000810 D144                   MOV.L       L675+30,R1 ; _azimuth
    00000812 410B                   JSR         @R1
    00000814 2F26                   MOV.L       R2,@-R15
    00000816 7F24                   ADD         #36,R15
    00000818 D143                   MOV.L       L675+34,R1 ; __subdr
    0000081A 62F3                   MOV         R15,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000081C 7210                   ADD         #16,R2
    0000081E 410B                   JSR         @R1
    00000820 2F26                   MOV.L       R2,@-R15
    00000822 63F3                   MOV         R15,R3
    00000824 7364                   ADD         #100,R3
    00000826 4D0B                   JSR         @R13
    00000828 2F36                   MOV.L       R3,@-R15
         zbzfs.c   170            double ea_epa_b = fabs(ea - azimuth(ex, ey, px, py) );
    0000082A 7F04                   ADD         #4,R15
    0000082C E070                   MOV         #112,R0
    0000082E 00FE                   MOV.L       @(R0,R15),R0
    00000830 2F06                   MOV.L       R0,@-R15
    00000832 E070                   MOV         #112,R0
    00000834 00FE                   MOV.L       @(R0,R15),R0
    00000836 2F06                   MOV.L       R0,@-R15
    00000838 9067                   MOV.W       L675+4,R0  ; H'00B8
    0000083A 7FF8                   ADD         #-8,R15
    0000083C 03FE                   MOV.L       @(R0,R15),R3
    0000083E 2F36                   MOV.L       R3,@-R15
    00000840 9063                   MOV.W       L675+4,R0  ; H'00B8
    00000842 03FE                   MOV.L       @(R0,R15),R3
    00000844 9061                   MOV.W       L675+4,R0  ; H'00B8
    00000846 2F36                   MOV.L       R3,@-R15
    00000848 02FE                   MOV.L       @(R0,R15),R2
    0000084A 2F26                   MOV.L       R2,@-R15
    0000084C 905D                   MOV.W       L675+4,R0  ; H'00B8
    0000084E 02FE                   MOV.L       @(R0,R15),R2
    00000850 905C                   MOV.W       L675+6,R0  ; H'0098
    00000852 2F26                   MOV.L       R2,@-R15
    00000854 03FE                   MOV.L       @(R0,R15),R3
    00000856 2F36                   MOV.L       R3,@-R15
    00000858 9058                   MOV.W       L675+6,R0  ; H'0098
    0000085A 03FE                   MOV.L       @(R0,R15),R3
    0000085C 9057                   MOV.W       L675+8,R0  ; H'00A8
    0000085E 2F36                   MOV.L       R3,@-R15
    00000860 02FE                   MOV.L       @(R0,R15),R2
    00000862 2F26                   MOV.L       R2,@-R15
    00000864 9053                   MOV.W       L675+8,R0  ; H'00A8
    00000866 02FE                   MOV.L       @(R0,R15),R2
    00000868 2F26                   MOV.L       R2,@-R15
    0000086A E320                   MOV         #32,R3
    0000086C D12D                   MOV.L       L675+30,R1 ; _azimuth
    0000086E 33FC                   ADD         R15,R3
    00000870 410B                   JSR         @R1
    00000872 2F36                   MOV.L       R3,@-R15
    00000874 D12C                   MOV.L       L675+34,R1 ; __subdr
    00000876 7F24                   ADD         #36,R15
    00000878 63F3                   MOV         R15,R3
    0000087A 7310                   ADD         #16,R3
    0000087C 410B                   JSR         @R1
    0000087E 2F36                   MOV.L       R3,@-R15
    00000880 62F3                   MOV         R15,R2
    00000882 725C                   ADD         #92,R2
    00000884 4D0B                   JSR         @R13
    00000886 2F26                   MOV.L       R2,@-R15
         zbzfs.c   171    
         zbzfs.c   172            double d;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         zbzfs.c   173            d = fabs( (py-sy) * cos(rad(sa-90)) - (px-sx) * sin(rad(sa-90)) );
    00000888 DB28                   MOV.L       L675+38,R11; _cos
    0000088A 7FF4                   ADD         #-12,R15
    0000088C 903D                   MOV.W       L675+4,R0  ; H'00B8
    0000088E DC28                   MOV.L       L675+42,R12; _sin
    00000890 DE28                   MOV.L       L675+46,R14; _rad
    00000892 03FE                   MOV.L       @(R0,R15),R3
    00000894 9039                   MOV.W       L675+4,R0  ; H'00B8
    00000896 2F36                   MOV.L       R3,@-R15
    00000898 03FE                   MOV.L       @(R0,R15),R3
    0000089A 2F36                   MOV.L       R3,@-R15
    0000089C D21F                   MOV.L       L675+22,R2 ; _sy
    0000089E 5121                   MOV.L       @(4,R2),R1
    000008A0 D021                   MOV.L       L675+34,R0 ; __subdr
    000008A2 2F16                   MOV.L       R1,@-R15
    000008A4 6122                   MOV.L       @R2,R1
    000008A6 2F16                   MOV.L       R1,@-R15
    000008A8 63F3                   MOV         R15,R3
    000008AA 7310                   ADD         #16,R3
    000008AC 400B                   JSR         @R0
    000008AE 2F36                   MOV.L       R3,@-R15
    000008B0 D219                   MOV.L       L675+18,R2 ; _sa
    000008B2 E300                   MOV         #0,R3
    000008B4 7FE8                   ADD         #-24,R15
    000008B6 5121                   MOV.L       @(4,R2),R1
    000008B8 2F16                   MOV.L       R1,@-R15
    000008BA 6122                   MOV.L       @R2,R1
    000008BC 2F16                   MOV.L       R1,@-R15
    000008BE 2F36                   MOV.L       R3,@-R15
    000008C0 D31D                   MOV.L       L675+50,R3 ; H'C0568000
    000008C2 2F36                   MOV.L       R3,@-R15
    000008C4 D11D                   MOV.L       L675+54,R1 ; __addd
    000008C6 62F3                   MOV         R15,R2
    000008C8 7210                   ADD         #16,R2
    000008CA 410B                   JSR         @R1
    000008CC 2F26                   MOV.L       R2,@-R15
    000008CE E308                   MOV         #8,R3
    000008D0 33FC                   ADD         R15,R3
    000008D2 4E0B                   JSR         @R14
    000008D4 2F36                   MOV.L       R3,@-R15
    000008D6 7F0C                   ADD         #12,R15
    000008D8 E008                   MOV         #8,R0
    000008DA 30FC                   ADD         R15,R0
    000008DC 4B0B                   JSR         @R11
    000008DE 2F06                   MOV.L       R0,@-R15
    000008E0 D017                   MOV.L       L675+58,R0 ; __muld
    000008E2 7F0C                   ADD         #12,R15
    000008E4 63F3                   MOV         R15,R3
    000008E6 7310                   ADD         #16,R3
    000008E8 400B                   JSR         @R0
    000008EA 2F36                   MOV.L       R3,@-R15
    000008EC 900D                   MOV.W       L675+4,R0  ; H'00B8
    000008EE 7FF0                   ADD         #-16,R15
    000008F0 D30B                   MOV.L       L675+26,R3 ; _sx
    000008F2 02FE                   MOV.L       @(R0,R15),R2
    000008F4 9009                   MOV.W       L675+4,R0  ; H'00B8
    000008F6 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008F8 02FE                   MOV.L       @(R0,R15),R2
    000008FA 2F26                   MOV.L       R2,@-R15
    000008FC 5131                   MOV.L       @(4,R3),R1
    000008FE 2F16                   MOV.L       R1,@-R15
    00000900 6132                   MOV.L       @R3,R1
    00000902 A01F                   BRA         L664
    00000904 0009                   NOP
    00000906              L675:                             
    00000906 0080                   .DATA.W     H'0080
    00000908 0084                   .DATA.W     H'0084
    0000090A 00B8                   .DATA.W     H'00B8
    0000090C 0098                   .DATA.W     H'0098
    0000090E 00A8                   .DATA.W     H'00A8
    00000910 <00000000>             .DATA.L     _es
    00000914 <00000000>             .DATA.L     _fabs
    00000918 <00000000>             .DATA.L     _sa
    0000091C <00000000>             .DATA.L     _sy
    00000920 <00000000>             .DATA.L     _sx
    00000924 <00000000>             .DATA.L     _azimuth
    00000928 <00000000>             .DATA.L     __subdr
    0000092C <00000000>             .DATA.L     _cos
    00000930 <00000000>             .DATA.L     _sin
    00000934 <00000000>             .DATA.L     _rad
    00000938 C0568000               .DATA.L     H'C0568000
    0000093C <00000000>             .DATA.L     __addd
    00000940 <00000000>             .DATA.L     __muld
    00000944              L664:                             
    00000944 2F16                   MOV.L       R1,@-R15
    00000946 62F3                   MOV         R15,R2
    00000948 D061                   MOV.L       L676+6,R0  ; __subdr
    0000094A 7210                   ADD         #16,R2
    0000094C 400B                   JSR         @R0
    0000094E 2F26                   MOV.L       R2,@-R15
    00000950 D360                   MOV.L       L676+10,R3 ; _sa
    00000952 E200                   MOV         #0,R2
    00000954 7FE8                   ADD         #-24,R15
    00000956 5131                   MOV.L       @(4,R3),R1
    00000958 2F16                   MOV.L       R1,@-R15
    0000095A 6132                   MOV.L       @R3,R1
    0000095C 2F16                   MOV.L       R1,@-R15
    0000095E 2F26                   MOV.L       R2,@-R15
    00000960 D25D                   MOV.L       L676+14,R2 ; H'C0568000
    00000962 2F26                   MOV.L       R2,@-R15
    00000964 D15D                   MOV.L       L676+18,R1 ; __addd
    00000966 63F3                   MOV         R15,R3
    00000968 7310                   ADD         #16,R3
    0000096A 410B                   JSR         @R1
    0000096C 2F36                   MOV.L       R3,@-R15
    0000096E E208                   MOV         #8,R2
    00000970 32FC                   ADD         R15,R2
    00000972 4E0B                   JSR         @R14
    00000974 2F26                   MOV.L       R2,@-R15
    00000976 7F0C                   ADD         #12,R15
    00000978 E008                   MOV         #8,R0
    0000097A 30FC                   ADD         R15,R0
    0000097C 4C0B                   JSR         @R12
    0000097E 2F06                   MOV.L       R0,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000980 D057                   MOV.L       L676+22,R0 ; __muld
    00000982 7F0C                   ADD         #12,R15
    00000984 62F3                   MOV         R15,R2
    00000986 7210                   ADD         #16,R2
    00000988 400B                   JSR         @R0
    0000098A 2F26                   MOV.L       R2,@-R15
    0000098C D150                   MOV.L       L676+6,R1  ; __subdr
    0000098E 63F3                   MOV         R15,R3
    00000990 7310                   ADD         #16,R3
    00000992 410B                   JSR         @R1
    00000994 2F36                   MOV.L       R3,@-R15
    00000996 62F3                   MOV         R15,R2
    00000998 7254                   ADD         #84,R2
    0000099A 4D0B                   JSR         @R13
    0000099C 2F26                   MOV.L       R2,@-R15
    0000099E 7F0C                   ADD         #12,R15
         zbzfs.c   174    
         zbzfs.c   175            // 1. Î»ÓÚÏßÔªÄÚ²àÇÒÎ»ÓÚÔ²ÐÄÄÚ²à »ò Î»ÓÚÏßÔªÍâ²à
«(7)
    000009A0 D251                   MOV.L       L676+30,R2 ; __ltd
    000009A2 E060                   MOV         #96,R0
    000009A4 00FE                   MOV.L       @(R0,R15),R0
    000009A6 E300                   MOV         #0,R3
    000009A8 2F06                   MOV.L       R0,@-R15
    000009AA E060                   MOV         #96,R0
    000009AC 00FE                   MOV.L       @(R0,R15),R0
    000009AE 2F06                   MOV.L       R0,@-R15
    000009B0 2F36                   MOV.L       R3,@-R15
    000009B2 D34C                   MOV.L       L676+26,R3 ; H'40568000
    000009B4 420B                   JSR         @R2
    000009B6 2F36                   MOV.L       R3,@-R15
    000009B8 8800                   CMP/EQ      #0,R0
    000009BA 8B01                   BF          L677
    000009BC A212                   BRA         L642
    000009BE 0009                   NOP
    000009C0              L677:                             
    000009C0 E058                   MOV         #88,R0
    000009C2 E200                   MOV         #0,R2
    000009C4 03FE                   MOV.L       @(R0,R15),R3
    000009C6 E058                   MOV         #88,R0
    000009C8 2F36                   MOV.L       R3,@-R15
    000009CA 03FE                   MOV.L       @(R0,R15),R3
    000009CC 2F36                   MOV.L       R3,@-R15
    000009CE 2F26                   MOV.L       R2,@-R15
    000009D0 D244                   MOV.L       L676+26,R2 ; H'40568000
    000009D2 D346                   MOV.L       L676+34,R3 ; __gtd
    000009D4 430B                   JSR         @R3
    000009D6 2F26                   MOV.L       R2,@-R15
    000009D8 8800                   CMP/EQ      #0,R0
    000009DA 8B01                   BF          L678
    000009DC A202                   BRA         L642
    000009DE 0009                   NOP
    000009E0              L678:                             
    000009E0 D343                   MOV.L       L676+38,R3 ; _es
    000009E2 E050                   MOV         #80,R0
    000009E4 02FE                   MOV.L       @(R0,R15),R2
    000009E6 E050                   MOV         #80,R0
    000009E8 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009EA 02FE                   MOV.L       @(R0,R15),R2
    000009EC 2F26                   MOV.L       R2,@-R15
    000009EE 7FF0                   ADD         #-16,R15
    000009F0 D240                   MOV.L       L676+42,R2 ; _ss
    000009F2 5131                   MOV.L       @(4,R3),R1
    000009F4 2F16                   MOV.L       R1,@-R15
    000009F6 6132                   MOV.L       @R3,R1
    000009F8 2F16                   MOV.L       R1,@-R15
    000009FA 5021                   MOV.L       @(4,R2),R0
    000009FC D134                   MOV.L       L676+6,R1  ; __subdr
    000009FE 2F06                   MOV.L       R0,@-R15
    00000A00 6022                   MOV.L       @R2,R0
    00000A02 2F06                   MOV.L       R0,@-R15
    00000A04 63F3                   MOV         R15,R3
    00000A06 7310                   ADD         #16,R3
    00000A08 410B                   JSR         @R1
    00000A0A 2F36                   MOV.L       R3,@-R15
    00000A0C E208                   MOV         #8,R2
    00000A0E 32FC                   ADD         R15,R2
    00000A10 4D0B                   JSR         @R13
    00000A12 2F26                   MOV.L       R2,@-R15
    00000A14 D038                   MOV.L       L676+46,R0 ; __led
    00000A16 400B                   JSR         @R0
    00000A18 7F0C                   ADD         #12,R15
    00000A1A 8800                   CMP/EQ      #0,R0
    00000A1C 8B01                   BF          L679
    00000A1E A1E1                   BRA         L642
    00000A20 0009                   NOP
    00000A22              L679:                             
         zbzfs.c   192                    
         zbzfs.c   193                    pix = zbzs_m_xy( ss+d, 0); //¼ÆËãÏßÔª+D ×ø±êx
    00000A22 7FF8                   ADD         #-8,R15
    00000A24 D333                   MOV.L       L676+42,R3 ; _ss
    00000A26 E060                   MOV         #96,R0
    00000A28 5231                   MOV.L       @(4,R3),R2
    00000A2A 2F26                   MOV.L       R2,@-R15
    00000A2C 6232                   MOV.L       @R3,R2
    00000A2E 2F26                   MOV.L       R2,@-R15
    00000A30 01FE                   MOV.L       @(R0,R15),R1
    00000A32 E060                   MOV         #96,R0
    00000A34 D229                   MOV.L       L676+18,R2 ; __addd
    00000A36 2F16                   MOV.L       R1,@-R15
    00000A38 01FE                   MOV.L       @(R0,R15),R1
    00000A3A 2F16                   MOV.L       R1,@-R15
    00000A3C 63F3                   MOV         R15,R3
    00000A3E 7310                   ADD         #16,R3
    00000A40 420B                   JSR         @R2
    00000A42 2F36                   MOV.L       R3,@-R15
    00000A44 E400                   MOV         #0,R4
    00000A46 63F3                   MOV         R15,R3
    00000A48 7344                   ADD         #68,R3
    00000A4A BBF7                   BSR         _zbzs_m_xy
    00000A4C 2F36                   MOV.L       R3,@-R15
         zbzfs.c   194                    piy = zbzs_m_xy( ss+d, 1); //¼ÆËãÏßÔª+D ×ø±êy
    00000A4E 7F04                   ADD         #4,R15
    00000A50 D328                   MOV.L       L676+42,R3 ; _ss
    00000A52 E060                   MOV         #96,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A54 5231                   MOV.L       @(4,R3),R2
    00000A56 2F26                   MOV.L       R2,@-R15
    00000A58 6232                   MOV.L       @R3,R2
    00000A5A 2F26                   MOV.L       R2,@-R15
    00000A5C 01FE                   MOV.L       @(R0,R15),R1
    00000A5E E060                   MOV         #96,R0
    00000A60 D21E                   MOV.L       L676+18,R2 ; __addd
    00000A62 2F16                   MOV.L       R1,@-R15
    00000A64 01FE                   MOV.L       @(R0,R15),R1
    00000A66 2F16                   MOV.L       R1,@-R15
    00000A68 63F3                   MOV         R15,R3
    00000A6A 7310                   ADD         #16,R3
    00000A6C 420B                   JSR         @R2
    00000A6E 2F36                   MOV.L       R3,@-R15
    00000A70 E401                   MOV         #1,R4
    00000A72 63F3                   MOV         R15,R3
    00000A74 733C                   ADD         #60,R3
    00000A76 BBE1                   BSR         _zbzs_m_xy
    00000A78 2F36                   MOV.L       R3,@-R15
    00000A7A 7F0C                   ADD         #12,R15
         zbzfs.c   195    
         zbzfs.c   196                    do
    00000A7C              L643:                             
         zbzfs.c   197                    {       di = (py-piy) * cos(rad( a_function(p_function(ss+d), ss+d )-90 ))  
         zbzfs.c   198                               - (px-pix) * sin(rad( a_function(p_function(ss+d), ss+d )-90 ));  //Öð²½±Æ½üÖµ£
                         +¬Ö±µ½diÐ¡ÓÚ0.001¼´ÊÇ·´Ëãµã¶ÔÓ¦µÄÀï³Ì
    00000A7C 9025                   MOV.W       L676,R0    ; H'00B0
    00000A7E 7FF0                   ADD         #-16,R15
    00000A80 D113                   MOV.L       L676+6,R1  ; __subdr
    00000A82 03FE                   MOV.L       @(R0,R15),R3
    00000A84 9021                   MOV.W       L676,R0    ; H'00B0
    00000A86 2F36                   MOV.L       R3,@-R15
    00000A88 03FE                   MOV.L       @(R0,R15),R3
    00000A8A E050                   MOV         #80,R0
    00000A8C 2F36                   MOV.L       R3,@-R15
    00000A8E 02FE                   MOV.L       @(R0,R15),R2
    00000A90 2F26                   MOV.L       R2,@-R15
    00000A92 E050                   MOV         #80,R0
    00000A94 02FE                   MOV.L       @(R0,R15),R2
    00000A96 2F26                   MOV.L       R2,@-R15
    00000A98 63F3                   MOV         R15,R3
    00000A9A 7310                   ADD         #16,R3
    00000A9C 410B                   JSR         @R1
    00000A9E 2F36                   MOV.L       R3,@-R15
    00000AA0 D214                   MOV.L       L676+42,R2 ; _ss
    00000AA2 7FD8                   ADD         #-40,R15
    00000AA4 D10D                   MOV.L       L676+18,R1 ; __addd
    00000AA6 5021                   MOV.L       @(4,R2),R0
    00000AA8 2F06                   MOV.L       R0,@-R15
    00000AAA 6022                   MOV.L       @R2,R0
    00000AAC 2F06                   MOV.L       R0,@-R15
    00000AAE 900D                   MOV.W       L676+2,R0  ; H'0090
    00000AB0 03FE                   MOV.L       @(R0,R15),R3
    00000AB2 2F36                   MOV.L       R3,@-R15
    00000AB4 900A                   MOV.W       L676+2,R0  ; H'0090
    00000AB6 03FE                   MOV.L       @(R0,R15),R3
    00000AB8 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000ABA 62F3                   MOV         R15,R2
    00000ABC 7210                   ADD         #16,R2
    00000ABE 410B                   JSR         @R1
    00000AC0 2F26                   MOV.L       R2,@-R15
    00000AC2 7FF0                   ADD         #-16,R15
    00000AC4 D30B                   MOV.L       L676+42,R3 ; _ss
    00000AC6 A019                   BRA         L665
    00000AC8 0009                   NOP
    00000ACA              L676:                             
    00000ACA 00B0                   .DATA.W     H'00B0
    00000ACC 0090                   .DATA.W     H'0090
    00000ACE 0000                   .DATA.W     0
    00000AD0 <00000000>             .DATA.L     __subdr
    00000AD4 <00000000>             .DATA.L     _sa
    00000AD8 C0568000               .DATA.L     H'C0568000
    00000ADC <00000000>             .DATA.L     __addd
    00000AE0 <00000000>             .DATA.L     __muld
    00000AE4 40568000               .DATA.L     H'40568000
    00000AE8 <00000000>             .DATA.L     __ltd
    00000AEC <00000000>             .DATA.L     __gtd
    00000AF0 <00000000>             .DATA.L     _es
    00000AF4 <00000000>             .DATA.L     _ss
    00000AF8 <00000000>             .DATA.L     __led
    00000AFC              L665:                             
    00000AFC 5031                   MOV.L       @(4,R3),R0
    00000AFE 2F06                   MOV.L       R0,@-R15
    00000B00 6032                   MOV.L       @R3,R0
    00000B02 2F06                   MOV.L       R0,@-R15
    00000B04 90C9                   MOV.W       L680,R0    ; H'00A0
    00000B06 02FE                   MOV.L       @(R0,R15),R2
    00000B08 90C7                   MOV.W       L680,R0    ; H'00A0
    00000B0A 2F26                   MOV.L       R2,@-R15
    00000B0C 02FE                   MOV.L       @(R0,R15),R2
    00000B0E 2F26                   MOV.L       R2,@-R15
    00000B10 D164                   MOV.L       L680+10,R1 ; __addd
    00000B12 63F3                   MOV         R15,R3
    00000B14 7310                   ADD         #16,R3
    00000B16 410B                   JSR         @R1
    00000B18 2F36                   MOV.L       R3,@-R15
    00000B1A E208                   MOV         #8,R2
    00000B1C 32FC                   ADD         R15,R2
    00000B1E BAD1                   BSR         _p_function
    00000B20 2F26                   MOV.L       R2,@-R15
    00000B22 7F0C                   ADD         #12,R15
    00000B24 E210                   MOV         #16,R2
    00000B26 32FC                   ADD         R15,R2
    00000B28 BB12                   BSR         _a_function
    00000B2A 2F26                   MOV.L       R2,@-R15
    00000B2C D15D                   MOV.L       L680+10,R1 ; __addd
    00000B2E 7F14                   ADD         #20,R15
    00000B30 E200                   MOV         #0,R2
    00000B32 2F26                   MOV.L       R2,@-R15
    00000B34 D25C                   MOV.L       L680+14,R2 ; H'C0568000
    00000B36 2F26                   MOV.L       R2,@-R15
    00000B38 63F3                   MOV         R15,R3
    00000B3A 7310                   ADD         #16,R3
    00000B3C 410B                   JSR         @R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B3E 2F36                   MOV.L       R3,@-R15
    00000B40 E208                   MOV         #8,R2
    00000B42 32FC                   ADD         R15,R2
    00000B44 4E0B                   JSR         @R14
    00000B46 2F26                   MOV.L       R2,@-R15
    00000B48 7F0C                   ADD         #12,R15
    00000B4A E008                   MOV         #8,R0
    00000B4C 30FC                   ADD         R15,R0
    00000B4E 4B0B                   JSR         @R11
    00000B50 2F06                   MOV.L       R0,@-R15
    00000B52 7F0C                   ADD         #12,R15
    00000B54 D055                   MOV.L       L680+18,R0 ; __muld
    00000B56 62F3                   MOV         R15,R2
    00000B58 7210                   ADD         #16,R2
    00000B5A 400B                   JSR         @R0
    00000B5C 2F26                   MOV.L       R2,@-R15
    00000B5E 7FF0                   ADD         #-16,R15
    00000B60 909C                   MOV.W       L680+2,R0  ; H'00B0
    00000B62 03FE                   MOV.L       @(R0,R15),R3
    00000B64 909A                   MOV.W       L680+2,R0  ; H'00B0
    00000B66 2F36                   MOV.L       R3,@-R15
    00000B68 03FE                   MOV.L       @(R0,R15),R3
    00000B6A E060                   MOV         #96,R0
    00000B6C D150                   MOV.L       L680+22,R1 ; __subdr
    00000B6E 2F36                   MOV.L       R3,@-R15
    00000B70 02FE                   MOV.L       @(R0,R15),R2
    00000B72 E060                   MOV         #96,R0
    00000B74 2F26                   MOV.L       R2,@-R15
    00000B76 02FE                   MOV.L       @(R0,R15),R2
    00000B78 2F26                   MOV.L       R2,@-R15
    00000B7A 63F3                   MOV         R15,R3
    00000B7C 7310                   ADD         #16,R3
    00000B7E 410B                   JSR         @R1
    00000B80 2F36                   MOV.L       R3,@-R15
    00000B82 7FD8                   ADD         #-40,R15
    00000B84 D24B                   MOV.L       L680+26,R2 ; _ss
    00000B86 5021                   MOV.L       @(4,R2),R0
    00000B88 D146                   MOV.L       L680+10,R1 ; __addd
    00000B8A 2F06                   MOV.L       R0,@-R15
    00000B8C 6022                   MOV.L       @R2,R0
    00000B8E 2F06                   MOV.L       R0,@-R15
    00000B90 9085                   MOV.W       L680+4,R0  ; H'0098
    00000B92 03FE                   MOV.L       @(R0,R15),R3
    00000B94 9083                   MOV.W       L680+4,R0  ; H'0098
    00000B96 2F36                   MOV.L       R3,@-R15
    00000B98 03FE                   MOV.L       @(R0,R15),R3
    00000B9A 2F36                   MOV.L       R3,@-R15
    00000B9C 62F3                   MOV         R15,R2
    00000B9E 7210                   ADD         #16,R2
    00000BA0 410B                   JSR         @R1
    00000BA2 2F26                   MOV.L       R2,@-R15
    00000BA4 D343                   MOV.L       L680+26,R3 ; _ss
    00000BA6 7FF0                   ADD         #-16,R15
    00000BA8 D13E                   MOV.L       L680+10,R1 ; __addd
    00000BAA 5031                   MOV.L       @(4,R3),R0
    00000BAC 2F06                   MOV.L       R0,@-R15
    00000BAE 6032                   MOV.L       @R3,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BB0 2F06                   MOV.L       R0,@-R15
    00000BB2 9075                   MOV.W       L680+6,R0  ; H'00A8
    00000BB4 02FE                   MOV.L       @(R0,R15),R2
    00000BB6 2F26                   MOV.L       R2,@-R15
    00000BB8 9072                   MOV.W       L680+6,R0  ; H'00A8
    00000BBA 02FE                   MOV.L       @(R0,R15),R2
    00000BBC 2F26                   MOV.L       R2,@-R15
    00000BBE 63F3                   MOV         R15,R3
    00000BC0 7310                   ADD         #16,R3
    00000BC2 410B                   JSR         @R1
    00000BC4 2F36                   MOV.L       R3,@-R15
    00000BC6 E208                   MOV         #8,R2
    00000BC8 32FC                   ADD         R15,R2
    00000BCA BA7B                   BSR         _p_function
    00000BCC 2F26                   MOV.L       R2,@-R15
    00000BCE 7F0C                   ADD         #12,R15
    00000BD0 E210                   MOV         #16,R2
    00000BD2 32FC                   ADD         R15,R2
    00000BD4 BABC                   BSR         _a_function
    00000BD6 2F26                   MOV.L       R2,@-R15
    00000BD8 D132                   MOV.L       L680+10,R1 ; __addd
    00000BDA 7F14                   ADD         #20,R15
    00000BDC E200                   MOV         #0,R2
    00000BDE 2F26                   MOV.L       R2,@-R15
    00000BE0 D231                   MOV.L       L680+14,R2 ; H'C0568000
    00000BE2 2F26                   MOV.L       R2,@-R15
    00000BE4 63F3                   MOV         R15,R3
    00000BE6 7310                   ADD         #16,R3
    00000BE8 410B                   JSR         @R1
    00000BEA 2F36                   MOV.L       R3,@-R15
    00000BEC E208                   MOV         #8,R2
    00000BEE 32FC                   ADD         R15,R2
    00000BF0 4E0B                   JSR         @R14
    00000BF2 2F26                   MOV.L       R2,@-R15
    00000BF4 7F0C                   ADD         #12,R15
    00000BF6 E008                   MOV         #8,R0
    00000BF8 30FC                   ADD         R15,R0
    00000BFA 4C0B                   JSR         @R12
    00000BFC 2F06                   MOV.L       R0,@-R15
    00000BFE 7F0C                   ADD         #12,R15
    00000C00 D02A                   MOV.L       L680+18,R0 ; __muld
    00000C02 62F3                   MOV         R15,R2
    00000C04 7210                   ADD         #16,R2
    00000C06 400B                   JSR         @R0
    00000C08 2F26                   MOV.L       R2,@-R15
    00000C0A 61F3                   MOV         R15,R1
    00000C0C D328                   MOV.L       L680+22,R3 ; __subdr
    00000C0E 7154                   ADD         #84,R1
    00000C10 430B                   JSR         @R3
    00000C12 2F16                   MOV.L       R1,@-R15
         zbzfs.c   199    
         zbzfs.c   200                            d = d + di; //d+Öð²½±Æ½üÖµ
    00000C14 E050                   MOV         #80,R0
    00000C16 02FE                   MOV.L       @(R0,R15),R2
    00000C18 2F26                   MOV.L       R2,@-R15
    00000C1A E050                   MOV         #80,R0
    00000C1C 02FE                   MOV.L       @(R0,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C1E E050                   MOV         #80,R0
    00000C20 2F26                   MOV.L       R2,@-R15
    00000C22 03FE                   MOV.L       @(R0,R15),R3
    00000C24 D21F                   MOV.L       L680+10,R2 ; __addd
    00000C26 E050                   MOV         #80,R0
    00000C28 2F36                   MOV.L       R3,@-R15
    00000C2A 03FE                   MOV.L       @(R0,R15),R3
    00000C2C 2F36                   MOV.L       R3,@-R15
    00000C2E 61F3                   MOV         R15,R1
    00000C30 715C                   ADD         #92,R1
    00000C32 420B                   JSR         @R2
    00000C34 2F16                   MOV.L       R1,@-R15
         zbzfs.c   201                            pix = zbzs_m_xy( ss+d, 0);  //Öð²½±Æ½ü×ø±êX 
    00000C36 7FF8                   ADD         #-8,R15
    00000C38 D31E                   MOV.L       L680+26,R3 ; _ss
    00000C3A 5031                   MOV.L       @(4,R3),R0
    00000C3C D119                   MOV.L       L680+10,R1 ; __addd
    00000C3E 2F06                   MOV.L       R0,@-R15
    00000C40 6032                   MOV.L       @R3,R0
    00000C42 2F06                   MOV.L       R0,@-R15
    00000C44 E060                   MOV         #96,R0
    00000C46 02FE                   MOV.L       @(R0,R15),R2
    00000C48 2F26                   MOV.L       R2,@-R15
    00000C4A E060                   MOV         #96,R0
    00000C4C 02FE                   MOV.L       @(R0,R15),R2
    00000C4E 2F26                   MOV.L       R2,@-R15
    00000C50 63F3                   MOV         R15,R3
    00000C52 7310                   ADD         #16,R3
    00000C54 410B                   JSR         @R1
    00000C56 2F36                   MOV.L       R3,@-R15
    00000C58 E400                   MOV         #0,R4
    00000C5A 63F3                   MOV         R15,R3
    00000C5C 7344                   ADD         #68,R3
    00000C5E BAED                   BSR         _zbzs_m_xy
    00000C60 2F36                   MOV.L       R3,@-R15
         zbzfs.c   202                            piy = zbzs_m_xy( ss+d, 1);  //Öð²½±Æ½ü×ø±êy
    00000C62 7F04                   ADD         #4,R15
    00000C64 D313                   MOV.L       L680+26,R3 ; _ss
    00000C66 E060                   MOV         #96,R0
    00000C68 5231                   MOV.L       @(4,R3),R2
    00000C6A 2F26                   MOV.L       R2,@-R15
    00000C6C 6232                   MOV.L       @R3,R2
    00000C6E 2F26                   MOV.L       R2,@-R15
    00000C70 01FE                   MOV.L       @(R0,R15),R1
    00000C72 E060                   MOV         #96,R0
    00000C74 D20B                   MOV.L       L680+10,R2 ; __addd
    00000C76 2F16                   MOV.L       R1,@-R15
    00000C78 01FE                   MOV.L       @(R0,R15),R1
    00000C7A 2F16                   MOV.L       R1,@-R15
    00000C7C 63F3                   MOV         R15,R3
    00000C7E 7310                   ADD         #16,R3
    00000C80 420B                   JSR         @R2
    00000C82 2F36                   MOV.L       R3,@-R15
    00000C84 E401                   MOV         #1,R4
    00000C86 63F3                   MOV         R15,R3
    00000C88 733C                   ADD         #60,R3
    00000C8A BAD7                   BSR         _zbzs_m_xy




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C8C 2F36                   MOV.L       R3,@-R15
         zbzfs.c   203                            //// DEBUG
         zbzfs.c   204                            //std::cout << "di = " << di << std::endl;
         zbzfs.c   205                            //std::cout << "da = " << a_function(p_function(ss+d), ss+d )-90 << std::endl;
         zbzfs.c   206                            //getchar();
         zbzfs.c   207                            //// END DEBUG
         zbzfs.c   208                    }while( fabs(di)>0.001 );
    00000C8E 7F04                   ADD         #4,R15
    00000C90 E050                   MOV         #80,R0
    00000C92 03FE                   MOV.L       @(R0,R15),R3
    00000C94 2F36                   MOV.L       R3,@-R15
    00000C96 A00F                   BRA         L666
    00000C98 0009                   NOP
    00000C9A              L680:                             
    00000C9A 00A0                   .DATA.W     H'00A0
    00000C9C 00B0                   .DATA.W     H'00B0
    00000C9E 0098                   .DATA.W     H'0098
    00000CA0 00A8                   .DATA.W     H'00A8
    00000CA2 0000                   .DATA.W     0
    00000CA4 <00000000>             .DATA.L     __addd
    00000CA8 C0568000               .DATA.L     H'C0568000
    00000CAC <00000000>             .DATA.L     __muld
    00000CB0 <00000000>             .DATA.L     __subdr
    00000CB4 <00000000>             .DATA.L     _ss
    00000CB8              L666:                             
    00000CB8 E050                   MOV         #80,R0
    00000CBA E208                   MOV         #8,R2
    00000CBC 03FE                   MOV.L       @(R0,R15),R3
    00000CBE 2F36                   MOV.L       R3,@-R15
    00000CC0 32FC                   ADD         R15,R2
    00000CC2 4D0B                   JSR         @R13
    00000CC4 2F26                   MOV.L       R2,@-R15
    00000CC6 7F0C                   ADD         #12,R15
    00000CC8 D13E                   MOV.L       L681+10,R1 ; H'D2F1A9FC
    00000CCA 2F16                   MOV.L       R1,@-R15
    00000CCC D13E                   MOV.L       L681+14,R1 ; H'3F50624D
    00000CCE D33F                   MOV.L       L681+18,R3 ; __gtd
    00000CD0 430B                   JSR         @R3
    00000CD2 2F16                   MOV.L       R1,@-R15
    00000CD4 8800                   CMP/EQ      #0,R0
    00000CD6 8901                   BT          L682
    00000CD8 AED0                   BRA         L643
    00000CDA 0009                   NOP
    00000CDC              L682:                             
         zbzfs.c   209    
         zbzfs.c   210                    if( sd==0 )
    00000CDC 62F2                   MOV.L       @R15,R2
    00000CDE 2228                   TST         R2,R2
    00000CE0 8B12                   BF          L644
         zbzfs.c   211                    {       return ( ss+d );   //Àï³Ì
    00000CE2 E058                   MOV         #88,R0
    00000CE4 D23A                   MOV.L       L681+22,R2 ; _ss
    00000CE6 5121                   MOV.L       @(4,R2),R1
    00000CE8 2F16                   MOV.L       R1,@-R15
    00000CEA 6122                   MOV.L       @R2,R1
    00000CEC D239                   MOV.L       L681+26,R2 ; __addd
    00000CEE 2F16                   MOV.L       R1,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CF0 03FE                   MOV.L       @(R0,R15),R3
    00000CF2 E058                   MOV         #88,R0
    00000CF4 9161                   MOV.W       L681,R1    ; H'00A0
    00000CF6 2F36                   MOV.L       R3,@-R15
    00000CF8 03FE                   MOV.L       @(R0,R15),R3
    00000CFA 2F36                   MOV.L       R3,@-R15
    00000CFC 31FC                   ADD         R15,R1
    00000CFE 6112                   MOV.L       @R1,R1
    00000D00 420B                   JSR         @R2
    00000D02 2F16                   MOV.L       R1,@-R15
    00000D04 A2DF                   BRA         L645
    00000D06 0009                   NOP
    00000D08              L644:                             
         zbzfs.c   212                    }
         zbzfs.c   213                    else
         zbzfs.c   214                    {       return (piy-py) / sin(rad( a_function(p_function(ss+d), ss+d )-90 ));   //Æ«¾à
    00000D08 D133                   MOV.L       L681+30,R1 ; __subdr
    00000D0A 7FF8                   ADD         #-8,R15
    00000D0C E040                   MOV         #64,R0
    00000D0E 00FE                   MOV.L       @(R0,R15),R0
    00000D10 2F06                   MOV.L       R0,@-R15
    00000D12 E040                   MOV         #64,R0
    00000D14 00FE                   MOV.L       @(R0,R15),R0
    00000D16 2F06                   MOV.L       R0,@-R15
    00000D18 9050                   MOV.W       L681+2,R0  ; H'00B0
    00000D1A 03FE                   MOV.L       @(R0,R15),R3
    00000D1C 904E                   MOV.W       L681+2,R0  ; H'00B0
    00000D1E 2F36                   MOV.L       R3,@-R15
    00000D20 03FE                   MOV.L       @(R0,R15),R3
    00000D22 2F36                   MOV.L       R3,@-R15
    00000D24 62F3                   MOV         R15,R2
    00000D26 7210                   ADD         #16,R2
    00000D28 410B                   JSR         @R1
    00000D2A 2F26                   MOV.L       R2,@-R15
    00000D2C D328                   MOV.L       L681+22,R3 ; _ss
    00000D2E 7FD8                   ADD         #-40,R15
    00000D30 D128                   MOV.L       L681+26,R1 ; __addd
    00000D32 5031                   MOV.L       @(4,R3),R0
    00000D34 2F06                   MOV.L       R0,@-R15
    00000D36 6032                   MOV.L       @R3,R0
    00000D38 2F06                   MOV.L       R0,@-R15
    00000D3A 9040                   MOV.W       L681+4,R0  ; H'0088
    00000D3C 02FE                   MOV.L       @(R0,R15),R2
    00000D3E 2F26                   MOV.L       R2,@-R15
    00000D40 903D                   MOV.W       L681+4,R0  ; H'0088
    00000D42 02FE                   MOV.L       @(R0,R15),R2
    00000D44 2F26                   MOV.L       R2,@-R15
    00000D46 63F3                   MOV         R15,R3
    00000D48 7310                   ADD         #16,R3
    00000D4A 410B                   JSR         @R1
    00000D4C 2F36                   MOV.L       R3,@-R15
    00000D4E 7FF0                   ADD         #-16,R15
    00000D50 D21F                   MOV.L       L681+22,R2 ; _ss
    00000D52 5021                   MOV.L       @(4,R2),R0
    00000D54 D11F                   MOV.L       L681+26,R1 ; __addd
    00000D56 2F06                   MOV.L       R0,@-R15
    00000D58 6022                   MOV.L       @R2,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D5A 2F06                   MOV.L       R0,@-R15
    00000D5C 9030                   MOV.W       L681+6,R0  ; H'0098
    00000D5E 03FE                   MOV.L       @(R0,R15),R3
    00000D60 902E                   MOV.W       L681+6,R0  ; H'0098
    00000D62 2F36                   MOV.L       R3,@-R15
    00000D64 03FE                   MOV.L       @(R0,R15),R3
    00000D66 2F36                   MOV.L       R3,@-R15
    00000D68 62F3                   MOV         R15,R2
    00000D6A 7210                   ADD         #16,R2
    00000D6C 410B                   JSR         @R1
    00000D6E 2F26                   MOV.L       R2,@-R15
    00000D70 E308                   MOV         #8,R3
    00000D72 33FC                   ADD         R15,R3
    00000D74 2F36                   MOV.L       R3,@-R15
    00000D76 B9A5                   BSR         _p_function
    00000D78 0009                   NOP
    00000D7A 7F0C                   ADD         #12,R15
    00000D7C E010                   MOV         #16,R0
    00000D7E 30FC                   ADD         R15,R0
    00000D80 B9E6                   BSR         _a_function
    00000D82 2F06                   MOV.L       R0,@-R15
    00000D84 D213                   MOV.L       L681+26,R2 ; __addd
    00000D86 7F14                   ADD         #20,R15
    00000D88 E000                   MOV         #0,R0
    00000D8A 2F06                   MOV.L       R0,@-R15
    00000D8C D013                   MOV.L       L681+34,R0 ; H'C0568000
    00000D8E 2F06                   MOV.L       R0,@-R15
    00000D90 63F3                   MOV         R15,R3
    00000D92 7310                   ADD         #16,R3
    00000D94 420B                   JSR         @R2
    00000D96 2F36                   MOV.L       R3,@-R15
    00000D98 E108                   MOV         #8,R1
    00000D9A 31FC                   ADD         R15,R1
    00000D9C 4E0B                   JSR         @R14
    00000D9E 2F16                   MOV.L       R1,@-R15
    00000DA0 7F0C                   ADD         #12,R15
    00000DA2 E008                   MOV         #8,R0
    00000DA4 30FC                   ADD         R15,R0
    00000DA6 4C0B                   JSR         @R12
    00000DA8 2F06                   MOV.L       R0,@-R15
    00000DAA 7F0C                   ADD         #12,R15
    00000DAC 9005                   MOV.W       L681,R0    ; H'00A0
    00000DAE 00FE                   MOV.L       @(R0,R15),R0
    00000DB0 D10B                   MOV.L       L681+38,R1 ; __divdr
    00000DB2 410B                   JSR         @R1
    00000DB4 2F06                   MOV.L       R0,@-R15
    00000DB6 A286                   BRA         L645
    00000DB8 0009                   NOP
    00000DBA              L681:                             
    00000DBA 00A0                   .DATA.W     H'00A0
    00000DBC 00B0                   .DATA.W     H'00B0
    00000DBE 0088                   .DATA.W     H'0088
    00000DC0 0098                   .DATA.W     H'0098
    00000DC2 0000                   .DATA.W     0
    00000DC4 D2F1A9FC               .DATA.L     H'D2F1A9FC
    00000DC8 3F50624D               .DATA.L     H'3F50624D
    00000DCC <00000000>             .DATA.L     __gtd




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DD0 <00000000>             .DATA.L     _ss
    00000DD4 <00000000>             .DATA.L     __addd
    00000DD8 <00000000>             .DATA.L     __subdr
    00000DDC C0568000               .DATA.L     H'C0568000
    00000DE0 <00000000>             .DATA.L     __divdr
    00000DE4              L642:                             

    00000DE4 907C                   MOV.W       L683,R0    ; H'00B0
    00000DE6 7FF0                   ADD         #-16,R15
    00000DE8 D33E                   MOV.L       L683+4,R3  ; _sy
    00000DEA 02FE                   MOV.L       @(R0,R15),R2
    00000DEC 9078                   MOV.W       L683,R0    ; H'00B0
    00000DEE 2F26                   MOV.L       R2,@-R15
    00000DF0 02FE                   MOV.L       @(R0,R15),R2
    00000DF2 2F26                   MOV.L       R2,@-R15
    00000DF4 5131                   MOV.L       @(4,R3),R1
    00000DF6 2F16                   MOV.L       R1,@-R15
    00000DF8 6132                   MOV.L       @R3,R1
    00000DFA 2F16                   MOV.L       R1,@-R15
    00000DFC D03A                   MOV.L       L683+8,R0  ; __subdr
    00000DFE 62F3                   MOV         R15,R2
    00000E00 7210                   ADD         #16,R2
    00000E02 400B                   JSR         @R0
    00000E04 2F26                   MOV.L       R2,@-R15
    00000E06 7FE8                   ADD         #-24,R15
    00000E08 D338                   MOV.L       L683+12,R3 ; _sa
    00000E0A E200                   MOV         #0,R2
    00000E0C 5131                   MOV.L       @(4,R3),R1
    00000E0E 2F16                   MOV.L       R1,@-R15
    00000E10 6132                   MOV.L       @R3,R1
    00000E12 2F16                   MOV.L       R1,@-R15
    00000E14 2F26                   MOV.L       R2,@-R15
    00000E16 D236                   MOV.L       L683+16,R2 ; H'C0568000
    00000E18 D136                   MOV.L       L683+20,R1 ; __addd
    00000E1A 2F26                   MOV.L       R2,@-R15
    00000E1C 63F3                   MOV         R15,R3
    00000E1E 7310                   ADD         #16,R3
    00000E20 410B                   JSR         @R1
    00000E22 2F36                   MOV.L       R3,@-R15
    00000E24 E208                   MOV         #8,R2
    00000E26 32FC                   ADD         R15,R2
    00000E28 4E0B                   JSR         @R14
    00000E2A 2F26                   MOV.L       R2,@-R15
    00000E2C 7F0C                   ADD         #12,R15
    00000E2E E008                   MOV         #8,R0
    00000E30 30FC                   ADD         R15,R0
    00000E32 4B0B                   JSR         @R11
    00000E34 2F06                   MOV.L       R0,@-R15
    00000E36 7F0C                   ADD         #12,R15
    00000E38 D02F                   MOV.L       L683+24,R0 ; __muld
    00000E3A 62F3                   MOV         R15,R2
    00000E3C 7210                   ADD         #16,R2
    00000E3E 400B                   JSR         @R0
    00000E40 2F26                   MOV.L       R2,@-R15
    00000E42 7FF0                   ADD         #-16,R15
    00000E44 904C                   MOV.W       L683,R0    ; H'00B0
    00000E46 03FE                   MOV.L       @(R0,R15),R3
    00000E48 904A                   MOV.W       L683,R0    ; H'00B0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E4A 2F36                   MOV.L       R3,@-R15
    00000E4C 03FE                   MOV.L       @(R0,R15),R3
    00000E4E 2F36                   MOV.L       R3,@-R15
    00000E50 D22A                   MOV.L       L683+28,R2 ; _sx
    00000E52 5121                   MOV.L       @(4,R2),R1
    00000E54 D024                   MOV.L       L683+8,R0  ; __subdr
    00000E56 2F16                   MOV.L       R1,@-R15
    00000E58 6122                   MOV.L       @R2,R1
    00000E5A 2F16                   MOV.L       R1,@-R15
    00000E5C 63F3                   MOV         R15,R3
    00000E5E 7310                   ADD         #16,R3
    00000E60 400B                   JSR         @R0
    00000E62 2F36                   MOV.L       R3,@-R15
    00000E64 D221                   MOV.L       L683+12,R2 ; _sa
    00000E66 E300                   MOV         #0,R3
    00000E68 7FE8                   ADD         #-24,R15
    00000E6A 5121                   MOV.L       @(4,R2),R1
    00000E6C 2F16                   MOV.L       R1,@-R15
    00000E6E 6122                   MOV.L       @R2,R1
    00000E70 2F16                   MOV.L       R1,@-R15
    00000E72 2F36                   MOV.L       R3,@-R15
    00000E74 D31E                   MOV.L       L683+16,R3 ; H'C0568000
    00000E76 2F36                   MOV.L       R3,@-R15
    00000E78 D11E                   MOV.L       L683+20,R1 ; __addd
    00000E7A 62F3                   MOV         R15,R2
    00000E7C 7210                   ADD         #16,R2
    00000E7E 410B                   JSR         @R1
    00000E80 2F26                   MOV.L       R2,@-R15
    00000E82 E308                   MOV         #8,R3
    00000E84 33FC                   ADD         R15,R3
    00000E86 4E0B                   JSR         @R14
    00000E88 2F36                   MOV.L       R3,@-R15
    00000E8A 7F0C                   ADD         #12,R15
    00000E8C E008                   MOV         #8,R0
    00000E8E 30FC                   ADD         R15,R0
    00000E90 4C0B                   JSR         @R12
    00000E92 2F06                   MOV.L       R0,@-R15
    00000E94 D018                   MOV.L       L683+24,R0 ; __muld
    00000E96 7F0C                   ADD         #12,R15
    00000E98 63F3                   MOV         R15,R3
    00000E9A 7310                   ADD         #16,R3
    00000E9C 400B                   JSR         @R0
    00000E9E 2F36                   MOV.L       R3,@-R15
    00000EA0 D211                   MOV.L       L683+8,R2  ; __subdr
    00000EA2 61F3                   MOV         R15,R1
    00000EA4 7124                   ADD         #36,R1
    00000EA6 420B                   JSR         @R2
    00000EA8 2F16                   MOV.L       R1,@-R15
    00000EAA 7FF8                   ADD         #-8,R15
    00000EAC 53F8                   MOV.L       @(32,R15),R3
    00000EAE E208                   MOV         #8,R2
    00000EB0 2F36                   MOV.L       R3,@-R15
    00000EB2 53F8                   MOV.L       @(32,R15),R3
    00000EB4 2F36                   MOV.L       R3,@-R15
    00000EB6 32FC                   ADD         R15,R2
    00000EB8 4D0B                   JSR         @R13
    00000EBA 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EBC D110                   MOV.L       L683+32,R1 ; H'D2F1A9FC
    00000EBE 7F0C                   ADD         #12,R15
    00000EC0 D311                   MOV.L       L683+40,R3 ; __ltd
    00000EC2 2F16                   MOV.L       R1,@-R15
    00000EC4 D10F                   MOV.L       L683+36,R1 ; H'3F50624D
    00000EC6 430B                   JSR         @R3
    00000EC8 2F16                   MOV.L       R1,@-R15
    00000ECA 8800                   CMP/EQ      #0,R0
    00000ECC 8920                   BT          L648
    00000ECE 9208                   MOV.W       L683+2,R2  ; H'0090
    00000ED0 D10E                   MOV.L       L683+44,R1 ; _ss
    00000ED2 32FC                   ADD         R15,R2
    00000ED4 6012                   MOV.L       @R1,R0
    00000ED6 6322                   MOV.L       @R2,R3
    00000ED8 2302                   MOV.L       R0,@R3
    00000EDA 5011                   MOV.L       @(4,R1),R0
    00000EDC A1C2                   BRA         L663
    00000EDE 0009                   NOP
    00000EE0              L683:                             
    00000EE0 00B0                   .DATA.W     H'00B0
    00000EE2 0090                   .DATA.W     H'0090
    00000EE4 <00000000>             .DATA.L     _sy
    00000EE8 <00000000>             .DATA.L     __subdr
    00000EEC <00000000>             .DATA.L     _sa
    00000EF0 C0568000               .DATA.L     H'C0568000
    00000EF4 <00000000>             .DATA.L     __addd
    00000EF8 <00000000>             .DATA.L     __muld
    00000EFC <00000000>             .DATA.L     _sx
    00000F00 D2F1A9FC               .DATA.L     H'D2F1A9FC
    00000F04 3F50624D               .DATA.L     H'3F50624D
    00000F08 <00000000>             .DATA.L     __ltd
    00000F0C <00000000>             .DATA.L     _ss
    00000F10              L648:                             
    00000F10 9081                   MOV.W       L684,R0    ; H'00B0
    00000F12 7FF0                   ADD         #-16,R15
    00000F14 D142                   MOV.L       L684+10,R1 ; __subdr
    00000F16 03FE                   MOV.L       @(R0,R15),R3
    00000F18 907D                   MOV.W       L684,R0    ; H'00B0
    00000F1A 2F36                   MOV.L       R3,@-R15
    00000F1C 03FE                   MOV.L       @(R0,R15),R3
    00000F1E 2F36                   MOV.L       R3,@-R15
    00000F20 907A                   MOV.W       L684+2,R0  ; H'0088
    00000F22 02FE                   MOV.L       @(R0,R15),R2
    00000F24 9078                   MOV.W       L684+2,R0  ; H'0088
    00000F26 2F26                   MOV.L       R2,@-R15
    00000F28 02FE                   MOV.L       @(R0,R15),R2
    00000F2A 2F26                   MOV.L       R2,@-R15
    00000F2C 63F3                   MOV         R15,R3
    00000F2E 7310                   ADD         #16,R3
    00000F30 410B                   JSR         @R1
    00000F32 2F36                   MOV.L       R3,@-R15
    00000F34 9071                   MOV.W       L684+4,R0  ; H'0090
    00000F36 E300                   MOV         #0,R3
    00000F38 D13B                   MOV.L       L684+18,R1 ; __addd
    00000F3A 7FE8                   ADD         #-24,R15
    00000F3C 02FE                   MOV.L       @(R0,R15),R2
    00000F3E 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F40 906B                   MOV.W       L684+4,R0  ; H'0090
    00000F42 02FE                   MOV.L       @(R0,R15),R2
    00000F44 2F26                   MOV.L       R2,@-R15
    00000F46 2F36                   MOV.L       R3,@-R15
    00000F48 D336                   MOV.L       L684+14,R3 ; H'C0568000
    00000F4A 2F36                   MOV.L       R3,@-R15
    00000F4C 62F3                   MOV         R15,R2
    00000F4E 7210                   ADD         #16,R2
    00000F50 410B                   JSR         @R1
    00000F52 2F26                   MOV.L       R2,@-R15
    00000F54 E308                   MOV         #8,R3
    00000F56 33FC                   ADD         R15,R3
    00000F58 4E0B                   JSR         @R14
    00000F5A 2F36                   MOV.L       R3,@-R15
    00000F5C 7F0C                   ADD         #12,R15
    00000F5E E008                   MOV         #8,R0
    00000F60 30FC                   ADD         R15,R0
    00000F62 4B0B                   JSR         @R11
    00000F64 2F06                   MOV.L       R0,@-R15
    00000F66 7F0C                   ADD         #12,R15
    00000F68 D030                   MOV.L       L684+22,R0 ; __muld
    00000F6A 63F3                   MOV         R15,R3
    00000F6C 7310                   ADD         #16,R3
    00000F6E 400B                   JSR         @R0
    00000F70 2F36                   MOV.L       R3,@-R15
    00000F72 7FF0                   ADD         #-16,R15
    00000F74 904F                   MOV.W       L684,R0    ; H'00B0
    00000F76 02FE                   MOV.L       @(R0,R15),R2
    00000F78 904D                   MOV.W       L684,R0    ; H'00B0
    00000F7A 2F26                   MOV.L       R2,@-R15
    00000F7C 02FE                   MOV.L       @(R0,R15),R2
    00000F7E 2F26                   MOV.L       R2,@-R15
    00000F80 904C                   MOV.W       L684+6,R0  ; H'0098
    00000F82 03FE                   MOV.L       @(R0,R15),R3
    00000F84 904A                   MOV.W       L684+6,R0  ; H'0098
    00000F86 2F36                   MOV.L       R3,@-R15
    00000F88 03FE                   MOV.L       @(R0,R15),R3
    00000F8A 2F36                   MOV.L       R3,@-R15
    00000F8C D124                   MOV.L       L684+10,R1 ; __subdr
    00000F8E 62F3                   MOV         R15,R2
    00000F90 7210                   ADD         #16,R2
    00000F92 410B                   JSR         @R1
    00000F94 2F26                   MOV.L       R2,@-R15
    00000F96 7FE8                   ADD         #-24,R15
    00000F98 9040                   MOV.W       L684+6,R0  ; H'0098
    00000F9A E200                   MOV         #0,R2
    00000F9C D122                   MOV.L       L684+18,R1 ; __addd
    00000F9E 03FE                   MOV.L       @(R0,R15),R3
    00000FA0 903C                   MOV.W       L684+6,R0  ; H'0098
    00000FA2 2F36                   MOV.L       R3,@-R15
    00000FA4 03FE                   MOV.L       @(R0,R15),R3
    00000FA6 2F36                   MOV.L       R3,@-R15
    00000FA8 2F26                   MOV.L       R2,@-R15
    00000FAA D21E                   MOV.L       L684+14,R2 ; H'C0568000
    00000FAC 2F26                   MOV.L       R2,@-R15
    00000FAE 63F3                   MOV         R15,R3
    00000FB0 7310                   ADD         #16,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FB2 410B                   JSR         @R1
    00000FB4 2F36                   MOV.L       R3,@-R15
    00000FB6 E208                   MOV         #8,R2
    00000FB8 32FC                   ADD         R15,R2
    00000FBA 4E0B                   JSR         @R14
    00000FBC 2F26                   MOV.L       R2,@-R15
    00000FBE 7F0C                   ADD         #12,R15
    00000FC0 E008                   MOV         #8,R0
    00000FC2 30FC                   ADD         R15,R0
    00000FC4 4C0B                   JSR         @R12
    00000FC6 2F06                   MOV.L       R0,@-R15
    00000FC8 D018                   MOV.L       L684+22,R0 ; __muld
    00000FCA 7F0C                   ADD         #12,R15
    00000FCC 62F3                   MOV         R15,R2
    00000FCE 7210                   ADD         #16,R2
    00000FD0 400B                   JSR         @R0
    00000FD2 2F26                   MOV.L       R2,@-R15
    00000FD4 D312                   MOV.L       L684+10,R3 ; __subdr
    00000FD6 61F3                   MOV         R15,R1
    00000FD8 7114                   ADD         #20,R1
    00000FDA 430B                   JSR         @R3
    00000FDC 2F16                   MOV.L       R1,@-R15
    00000FDE 7FF8                   ADD         #-8,R15
    00000FE0 52F4                   MOV.L       @(16,R15),R2
    00000FE2 E308                   MOV         #8,R3
    00000FE4 2F26                   MOV.L       R2,@-R15
    00000FE6 52F4                   MOV.L       @(16,R15),R2
    00000FE8 2F26                   MOV.L       R2,@-R15
    00000FEA 33FC                   ADD         R15,R3
    00000FEC 4D0B                   JSR         @R13
    00000FEE 2F36                   MOV.L       R3,@-R15
    00000FF0 D10F                   MOV.L       L684+26,R1 ; H'D2F1A9FC
    00000FF2 7F0C                   ADD         #12,R15
    00000FF4 D310                   MOV.L       L684+34,R3 ; __ltd
    00000FF6 2F16                   MOV.L       R1,@-R15
    00000FF8 D10E                   MOV.L       L684+30,R1 ; H'3F50624D
    00000FFA 430B                   JSR         @R3
    00000FFC 2F16                   MOV.L       R1,@-R15
    00000FFE 8800                   CMP/EQ      #0,R0
    00001000 891E                   BT          L649
    00001002 920A                   MOV.W       L684+4,R2  ; H'0090
    00001004 D10D                   MOV.L       L684+38,R1 ; _es
    00001006 32FC                   ADD         R15,R2
    00001008 6012                   MOV.L       @R1,R0
    0000100A 6222                   MOV.L       @R2,R2
    0000100C 6323                   MOV         R2,R3
    0000100E 2302                   MOV.L       R0,@R3
    00001010 5011                   MOV.L       @(4,R1),R0
    00001012 A127                   BRA         L663
    00001014 0009                   NOP
    00001016              L684:                             
    00001016 00B0                   .DATA.W     H'00B0
    00001018 0088                   .DATA.W     H'0088
    0000101A 0090                   .DATA.W     H'0090
    0000101C 0098                   .DATA.W     H'0098
    0000101E 0000                   .DATA.W     0
    00001020 <00000000>             .DATA.L     __subdr




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001024 C0568000               .DATA.L     H'C0568000
    00001028 <00000000>             .DATA.L     __addd
    0000102C <00000000>             .DATA.L     __muld
    00001030 D2F1A9FC               .DATA.L     H'D2F1A9FC
    00001034 3F50624D               .DATA.L     H'3F50624D
    00001038 <00000000>             .DATA.L     __ltd
    0000103C <00000000>             .DATA.L     _es
    00001040              L649:                             
    00001040 D366                   MOV.L       L685+2,R3  ; _ss
    00001042 61F3                   MOV         R15,R1
    00001044 D066                   MOV.L       L685+6,R0  ; _es
    00001046 7144                   ADD         #68,R1
    00001048 6232                   MOV.L       @R3,R2
    0000104A 2122                   MOV.L       R2,@R1
    0000104C 5231                   MOV.L       @(4,R3),R2
    0000104E 1121                   MOV.L       R2,@(4,R1)
    00001050 6102                   MOV.L       @R0,R1
    00001052 62F3                   MOV         R15,R2
    00001054 7234                   ADD         #52,R2
    00001056 2212                   MOV.L       R1,@R2
    00001058 5101                   MOV.L       @(4,R0),R1
    0000105A 1211                   MOV.L       R1,@(4,R2)
    0000105C              L650:                             
    0000105C D161                   MOV.L       L685+10,R1 ; __subdr
    0000105E 7FF0                   ADD         #-16,R15
    00001060 E048                   MOV         #72,R0
    00001062 03FE                   MOV.L       @(R0,R15),R3
    00001064 2F36                   MOV.L       R3,@-R15
    00001066 E048                   MOV         #72,R0
    00001068 03FE                   MOV.L       @(R0,R15),R3
    0000106A E060                   MOV         #96,R0
    0000106C 2F36                   MOV.L       R3,@-R15
    0000106E 02FE                   MOV.L       @(R0,R15),R2
    00001070 2F26                   MOV.L       R2,@-R15
    00001072 E060                   MOV         #96,R0
    00001074 02FE                   MOV.L       @(R0,R15),R2
    00001076 2F26                   MOV.L       R2,@-R15
    00001078 63F3                   MOV         R15,R3
    0000107A 7310                   ADD         #16,R3
    0000107C 410B                   JSR         @R1
    0000107E 2F36                   MOV.L       R3,@-R15
    00001080 D15A                   MOV.L       L685+18,R1 ; __muld
    00001082 E200                   MOV         #0,R2
    00001084 2F26                   MOV.L       R2,@-R15
    00001086 D258                   MOV.L       L685+14,R2 ; H'3FE00000
    00001088 2F26                   MOV.L       R2,@-R15
    0000108A 63F3                   MOV         R15,R3
    0000108C 7310                   ADD         #16,R3
    0000108E 410B                   JSR         @R1
    00001090 2F36                   MOV.L       R3,@-R15
    00001092 E050                   MOV         #80,R0
    00001094 D356                   MOV.L       L685+22,R3 ; __addd
    00001096 02FE                   MOV.L       @(R0,R15),R2
    00001098 2F26                   MOV.L       R2,@-R15
    0000109A E050                   MOV         #80,R0
    0000109C 02FE                   MOV.L       @(R0,R15),R2
    0000109E 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010A0 61F3                   MOV         R15,R1
    000010A2 714C                   ADD         #76,R1
    000010A4 430B                   JSR         @R3
    000010A6 2F16                   MOV.L       R1,@-R15
    000010A8 E040                   MOV         #64,R0
    000010AA E400                   MOV         #0,R4
    000010AC 02FE                   MOV.L       @(R0,R15),R2
    000010AE E040                   MOV         #64,R0
    000010B0 2F26                   MOV.L       R2,@-R15
    000010B2 02FE                   MOV.L       @(R0,R15),R2
    000010B4 2F26                   MOV.L       R2,@-R15
    000010B6 63F3                   MOV         R15,R3
    000010B8 7334                   ADD         #52,R3
    000010BA B8BF                   BSR         _zbzs_m_xy
    000010BC 2F36                   MOV.L       R3,@-R15
    000010BE E04C                   MOV         #76,R0
    000010C0 03FE                   MOV.L       @(R0,R15),R3
    000010C2 E401                   MOV         #1,R4
    000010C4 2F36                   MOV.L       R3,@-R15
    000010C6 E04C                   MOV         #76,R0
    000010C8 03FE                   MOV.L       @(R0,R15),R3
    000010CA 2F36                   MOV.L       R3,@-R15
    000010CC 63F3                   MOV         R15,R3
    000010CE 7338                   ADD         #56,R3
    000010D0 B8B4                   BSR         _zbzs_m_xy
    000010D2 2F36                   MOV.L       R3,@-R15
    000010D4 E058                   MOV         #88,R0
    000010D6 03FE                   MOV.L       @(R0,R15),R3
    000010D8 2F36                   MOV.L       R3,@-R15
    000010DA E058                   MOV         #88,R0
    000010DC 03FE                   MOV.L       @(R0,R15),R3
    000010DE 2F36                   MOV.L       R3,@-R15
    000010E0 62F3                   MOV         R15,R2
    000010E2 723C                   ADD         #60,R2
    000010E4 BAF6                   BSR         _zbzs_m_a
    000010E6 2F26                   MOV.L       R2,@-R15
    000010E8 9077                   MOV.W       L685,R0    ; H'00B0
    000010EA 7F14                   ADD         #20,R15
    000010EC D13D                   MOV.L       L685+10,R1 ; __subdr
    000010EE 02FE                   MOV.L       @(R0,R15),R2
    000010F0 9073                   MOV.W       L685,R0    ; H'00B0
    000010F2 2F26                   MOV.L       R2,@-R15
    000010F4 02FE                   MOV.L       @(R0,R15),R2
    000010F6 E040                   MOV         #64,R0
    000010F8 2F26                   MOV.L       R2,@-R15
    000010FA 03FE                   MOV.L       @(R0,R15),R3
    000010FC 2F36                   MOV.L       R3,@-R15
    000010FE E040                   MOV         #64,R0
    00001100 03FE                   MOV.L       @(R0,R15),R3
    00001102 2F36                   MOV.L       R3,@-R15
    00001104 62F3                   MOV         R15,R2
    00001106 7210                   ADD         #16,R2
    00001108 410B                   JSR         @R1
    0000110A 2F26                   MOV.L       R2,@-R15
    0000110C D138                   MOV.L       L685+22,R1 ; __addd
    0000110E 7FE8                   ADD         #-24,R15
    00001110 E048                   MOV         #72,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001112 E200                   MOV         #0,R2
    00001114 03FE                   MOV.L       @(R0,R15),R3
    00001116 E048                   MOV         #72,R0
    00001118 2F36                   MOV.L       R3,@-R15
    0000111A 03FE                   MOV.L       @(R0,R15),R3
    0000111C 2F36                   MOV.L       R3,@-R15
    0000111E 2F26                   MOV.L       R2,@-R15
    00001120 D234                   MOV.L       L685+26,R2 ; H'C0568000
    00001122 2F26                   MOV.L       R2,@-R15
    00001124 63F3                   MOV         R15,R3
    00001126 7310                   ADD         #16,R3
    00001128 410B                   JSR         @R1
    0000112A 2F36                   MOV.L       R3,@-R15
    0000112C E208                   MOV         #8,R2
    0000112E 32FC                   ADD         R15,R2
    00001130 4E0B                   JSR         @R14
    00001132 2F26                   MOV.L       R2,@-R15
    00001134 7F0C                   ADD         #12,R15
    00001136 E008                   MOV         #8,R0
    00001138 30FC                   ADD         R15,R0
    0000113A 4B0B                   JSR         @R11
    0000113C 2F06                   MOV.L       R0,@-R15
    0000113E 7F0C                   ADD         #12,R15
    00001140 D02A                   MOV.L       L685+18,R0 ; __muld
    00001142 62F3                   MOV         R15,R2
    00001144 7210                   ADD         #16,R2
    00001146 400B                   JSR         @R0
    00001148 2F26                   MOV.L       R2,@-R15
    0000114A 7FF0                   ADD         #-16,R15
    0000114C 9045                   MOV.W       L685,R0    ; H'00B0
    0000114E 03FE                   MOV.L       @(R0,R15),R3
    00001150 9043                   MOV.W       L685,R0    ; H'00B0
    00001152 2F36                   MOV.L       R3,@-R15
    00001154 03FE                   MOV.L       @(R0,R15),R3
    00001156 E050                   MOV         #80,R0
    00001158 D122                   MOV.L       L685+10,R1 ; __subdr
    0000115A 2F36                   MOV.L       R3,@-R15
    0000115C 02FE                   MOV.L       @(R0,R15),R2
    0000115E E050                   MOV         #80,R0
    00001160 2F26                   MOV.L       R2,@-R15
    00001162 02FE                   MOV.L       @(R0,R15),R2
    00001164 2F26                   MOV.L       R2,@-R15
    00001166 63F3                   MOV         R15,R3
    00001168 7310                   ADD         #16,R3
    0000116A 410B                   JSR         @R1
    0000116C 2F36                   MOV.L       R3,@-R15
    0000116E 7FE8                   ADD         #-24,R15
    00001170 D11F                   MOV.L       L685+22,R1 ; __addd
    00001172 E050                   MOV         #80,R0
    00001174 02FE                   MOV.L       @(R0,R15),R2
    00001176 E300                   MOV         #0,R3
    00001178 2F26                   MOV.L       R2,@-R15
    0000117A E050                   MOV         #80,R0
    0000117C 02FE                   MOV.L       @(R0,R15),R2
    0000117E 2F26                   MOV.L       R2,@-R15
    00001180 2F36                   MOV.L       R3,@-R15
    00001182 D31C                   MOV.L       L685+26,R3 ; H'C0568000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001184 2F36                   MOV.L       R3,@-R15
    00001186 62F3                   MOV         R15,R2
    00001188 7210                   ADD         #16,R2
    0000118A 410B                   JSR         @R1
    0000118C 2F26                   MOV.L       R2,@-R15
    0000118E E308                   MOV         #8,R3
    00001190 33FC                   ADD         R15,R3
    00001192 4E0B                   JSR         @R14
    00001194 2F36                   MOV.L       R3,@-R15
    00001196 7F0C                   ADD         #12,R15
    00001198 E008                   MOV         #8,R0
    0000119A 30FC                   ADD         R15,R0
    0000119C 4C0B                   JSR         @R12
    0000119E 2F06                   MOV.L       R0,@-R15
    000011A0 D012                   MOV.L       L685+18,R0 ; __muld
    000011A2 7F0C                   ADD         #12,R15
    000011A4 63F3                   MOV         R15,R3
    000011A6 7310                   ADD         #16,R3
    000011A8 400B                   JSR         @R0
    000011AA 2F36                   MOV.L       R3,@-R15
    000011AC D20D                   MOV.L       L685+10,R2 ; __subdr
    000011AE 61F3                   MOV         R15,R1
    000011B0 711C                   ADD         #28,R1
    000011B2 420B                   JSR         @R2
    000011B4 2F16                   MOV.L       R1,@-R15
    000011B6 7FF8                   ADD         #-8,R15
    000011B8 D10C                   MOV.L       L685+18,R1 ; __muld
    000011BA 53F8                   MOV.L       @(32,R15),R3
    000011BC 2F36                   MOV.L       R3,@-R15
    000011BE 53F8                   MOV.L       @(32,R15),R3
    000011C0 2F36                   MOV.L       R3,@-R15
    000011C2 52F8                   MOV.L       @(32,R15),R2
    000011C4 2F26                   MOV.L       R2,@-R15
    000011C6 52F8                   MOV.L       @(32,R15),R2
    000011C8 2F26                   MOV.L       R2,@-R15
    000011CA 63F3                   MOV         R15,R3
    000011CC 7310                   ADD         #16,R3
    000011CE 410B                   JSR         @R1
    000011D0 2F36                   MOV.L       R3,@-R15
    000011D2 E200                   MOV         #0,R2
    000011D4 2F26                   MOV.L       R2,@-R15
    000011D6 A00F                   BRA         L667
    000011D8 2F26                   MOV.L       R2,@-R15
    000011DA              L685:                             
    000011DA 00B0                   .DATA.W     H'00B0
    000011DC <00000000>             .DATA.L     _ss
    000011E0 <00000000>             .DATA.L     _es
    000011E4 <00000000>             .DATA.L     __subdr
    000011E8 3FE00000               .DATA.L     H'3FE00000
    000011EC <00000000>             .DATA.L     __muld
    000011F0 <00000000>             .DATA.L     __addd
    000011F4 C0568000               .DATA.L     H'C0568000
    000011F8              L667:                             
    000011F8 D338                   MOV.L       L686+8,R3  ; __ltd
    000011FA 430B                   JSR         @R3
    000011FC 0009                   NOP
    000011FE 8800                   CMP/EQ      #0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001200 8908                   BT          L651
    00001202 62F3                   MOV         R15,R2
    00001204 723C                   ADD         #60,R2
    00001206 61F3                   MOV         R15,R1
    00001208 6322                   MOV.L       @R2,R3
    0000120A 7134                   ADD         #52,R1
    0000120C 2132                   MOV.L       R3,@R1
    0000120E 5321                   MOV.L       @(4,R2),R3
    00001210 A008                   BRA         L652
    00001212 1131                   MOV.L       R3,@(4,R1)
    00001214              L651:                             
    00001214 63F3                   MOV         R15,R3
    00001216 733C                   ADD         #60,R3
    00001218 6232                   MOV.L       @R3,R2
    0000121A 60F3                   MOV         R15,R0
    0000121C 7044                   ADD         #68,R0
    0000121E 2022                   MOV.L       R2,@R0
    00001220 5231                   MOV.L       @(4,R3),R2
    00001222 1021                   MOV.L       R2,@(4,R0)
    00001224              L652:                             
    00001224 7FF8                   ADD         #-8,R15
    00001226 E308                   MOV         #8,R3
    00001228 51F6                   MOV.L       @(24,R15),R1
    0000122A 2F16                   MOV.L       R1,@-R15
    0000122C 51F6                   MOV.L       @(24,R15),R1
    0000122E 2F16                   MOV.L       R1,@-R15
    00001230 33FC                   ADD         R15,R3
    00001232 4D0B                   JSR         @R13
    00001234 2F36                   MOV.L       R3,@-R15
    00001236 7F0C                   ADD         #12,R15
    00001238 D229                   MOV.L       L686+12,R2 ; H'D2F1A9FC
    0000123A 2F26                   MOV.L       R2,@-R15
    0000123C D229                   MOV.L       L686+16,R2 ; H'3F50624D
    0000123E D32A                   MOV.L       L686+20,R3 ; __gtd
    00001240 430B                   JSR         @R3
    00001242 2F26                   MOV.L       R2,@-R15
    00001244 8800                   CMP/EQ      #0,R0
    00001246 8901                   BT          L687
    00001248 AF08                   BRA         L650
    0000124A 0009                   NOP
    0000124C              L687:                             
    0000124C 62F2                   MOV.L       @R15,R2
    0000124E 2228                   TST         R2,R2
    00001250 8B0A                   BF          L653
    00001252 61F3                   MOV         R15,R1
    00001254 923E                   MOV.W       L686,R2    ; H'0090
    00001256 713C                   ADD         #60,R1
    00001258 6012                   MOV.L       @R1,R0
    0000125A 32FC                   ADD         R15,R2
    0000125C 6222                   MOV.L       @R2,R2
    0000125E 6323                   MOV         R2,R3
    00001260 2302                   MOV.L       R0,@R3
    00001262 5011                   MOV.L       @(4,R1),R0
    00001264              L663:                             
    00001264 A02F                   BRA         L645
    00001266 1301                   MOV.L       R0,@(4,R3)
    00001268              L653:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001268 9035                   MOV.W       L686+2,R0  ; H'00B0
    0000126A 7FF8                   ADD         #-8,R15
    0000126C 51FC                   MOV.L       @(48,R15),R1
    0000126E 2F16                   MOV.L       R1,@-R15
    00001270 51FC                   MOV.L       @(48,R15),R1
    00001272 2F16                   MOV.L       R1,@-R15
    00001274 03FE                   MOV.L       @(R0,R15),R3
    00001276 2F36                   MOV.L       R3,@-R15
    00001278 902D                   MOV.W       L686+2,R0  ; H'00B0
    0000127A 03FE                   MOV.L       @(R0,R15),R3
    0000127C D11B                   MOV.L       L686+24,R1 ; __subdr
    0000127E 2F36                   MOV.L       R3,@-R15
    00001280 62F3                   MOV         R15,R2
    00001282 7210                   ADD         #16,R2
    00001284 410B                   JSR         @R1
    00001286 2F26                   MOV.L       R2,@-R15
    00001288 D11A                   MOV.L       L686+32,R1 ; __addd
    0000128A 7FE8                   ADD         #-24,R15
    0000128C E040                   MOV         #64,R0
    0000128E E200                   MOV         #0,R2
    00001290 03FE                   MOV.L       @(R0,R15),R3
    00001292 E040                   MOV         #64,R0
    00001294 2F36                   MOV.L       R3,@-R15
    00001296 03FE                   MOV.L       @(R0,R15),R3
    00001298 2F36                   MOV.L       R3,@-R15
    0000129A 2F26                   MOV.L       R2,@-R15
    0000129C D214                   MOV.L       L686+28,R2 ; H'C0568000
    0000129E 2F26                   MOV.L       R2,@-R15
    000012A0 63F3                   MOV         R15,R3
    000012A2 7310                   ADD         #16,R3
    000012A4 410B                   JSR         @R1
    000012A6 2F36                   MOV.L       R3,@-R15
    000012A8 E208                   MOV         #8,R2
    000012AA 32FC                   ADD         R15,R2
    000012AC 4E0B                   JSR         @R14
    000012AE 2F26                   MOV.L       R2,@-R15
    000012B0 7F0C                   ADD         #12,R15
    000012B2 E008                   MOV         #8,R0
    000012B4 30FC                   ADD         R15,R0
    000012B6 4C0B                   JSR         @R12
    000012B8 2F06                   MOV.L       R0,@-R15
    000012BA 7F0C                   ADD         #12,R15
    000012BC 900C                   MOV.W       L686+4,R0  ; H'00A0
    000012BE 00FE                   MOV.L       @(R0,R15),R0
    000012C0 D20D                   MOV.L       L686+36,R2 ; __divdr
    000012C2 420B                   JSR         @R2
    000012C4 2F06                   MOV.L       R0,@-R15
    000012C6              L645:                             
    000012C6 7F7C                   ADD         #124,R15
    000012C8 4F26                   LDS.L       @R15+,PR
    000012CA 6BF6                   MOV.L       @R15+,R11
    000012CC 6CF6                   MOV.L       @R15+,R12
    000012CE 6DF6                   MOV.L       @R15+,R13
    000012D0 000B                   RTS
    000012D2 6EF6                   MOV.L       @R15+,R14
    000012D4              L686:                             
    000012D4 0090                   .DATA.W     H'0090




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012D6 00B0                   .DATA.W     H'00B0
    000012D8 00A0                   .DATA.W     H'00A0
    000012DA 0000                   .DATA.W     0
    000012DC <00000000>             .DATA.L     __ltd
    000012E0 D2F1A9FC               .DATA.L     H'D2F1A9FC
    000012E4 3F50624D               .DATA.L     H'3F50624D
    000012E8 <00000000>             .DATA.L     __gtd
    000012EC <00000000>             .DATA.L     __subdr
    000012F0 C0568000               .DATA.L     H'C0568000
    000012F4 <00000000>             .DATA.L     __addd
    000012F8 <00000000>             .DATA.L     __divdr
         zbzfs.c   291    /////////////////
         zbzfs.c   292    double zbzs_x(double stake, double distance, double angle)
    000012FC              _zbzs_x:                         ; function: zbzs_x
                                                           ; frame size=96
                                                           ; used runtime library name:
                                                           ; __addd, __muld
    000012FC 4F22                   STS.L       PR,@-R15
         zbzfs.c   293    {       return (zbzs_m_xy(stake, 0)+fabs(distance)*cos(rad(zbzs_m_a(stake)+sign(distance)*fabs(angle))));
    000012FE E400                   MOV         #0,R4
    00001300 D29F                   MOV.L       L688+2,R2  ; _zbzs_m_xy
    00001302 7FF8                   ADD         #-8,R15
    00001304 53F5                   MOV.L       @(20,R15),R3
    00001306 2F36                   MOV.L       R3,@-R15
    00001308 53F5                   MOV.L       @(20,R15),R3
    0000130A 2F36                   MOV.L       R3,@-R15
    0000130C E308                   MOV         #8,R3
    0000130E 33FC                   ADD         R15,R3
    00001310 420B                   JSR         @R2
    00001312 2F36                   MOV.L       R3,@-R15
    00001314 D19B                   MOV.L       L688+6,R1  ; _fabs
    00001316 7FFC                   ADD         #-4,R15
    00001318 53FB                   MOV.L       @(44,R15),R3
    0000131A E208                   MOV         #8,R2
    0000131C 2F36                   MOV.L       R3,@-R15
    0000131E 53FB                   MOV.L       @(44,R15),R3
    00001320 2F36                   MOV.L       R3,@-R15
    00001322 32FC                   ADD         R15,R2
    00001324 410B                   JSR         @R1
    00001326 2F26                   MOV.L       R2,@-R15
    00001328 7FEC                   ADD         #-20,R15
    0000132A E044                   MOV         #68,R0
    0000132C 02FE                   MOV.L       @(R0,R15),R2
    0000132E E308                   MOV         #8,R3
    00001330 2F26                   MOV.L       R2,@-R15
    00001332 E044                   MOV         #68,R0
    00001334 02FE                   MOV.L       @(R0,R15),R2
    00001336 2F26                   MOV.L       R2,@-R15
    00001338 33FC                   ADD         R15,R3
    0000133A B9CB                   BSR         _zbzs_m_a
    0000133C 2F36                   MOV.L       R3,@-R15
    0000133E 7FFC                   ADD         #-4,R15
    00001340 D191                   MOV.L       L688+10,R1 ; _sign
    00001342 E05C                   MOV         #92,R0
    00001344 03FE                   MOV.L       @(R0,R15),R3
    00001346 E208                   MOV         #8,R2
    00001348 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000134A E05C                   MOV         #92,R0
    0000134C 03FE                   MOV.L       @(R0,R15),R3
    0000134E 2F36                   MOV.L       R3,@-R15
    00001350 32FC                   ADD         R15,R2
    00001352 410B                   JSR         @R1
    00001354 2F26                   MOV.L       R2,@-R15
    00001356 7F04                   ADD         #4,R15
    00001358 D18A                   MOV.L       L688+6,R1  ; _fabs
    0000135A E06C                   MOV         #108,R0
    0000135C 02FE                   MOV.L       @(R0,R15),R2
    0000135E E308                   MOV         #8,R3
    00001360 2F26                   MOV.L       R2,@-R15
    00001362 E06C                   MOV         #108,R0
    00001364 02FE                   MOV.L       @(R0,R15),R2
    00001366 2F26                   MOV.L       R2,@-R15
    00001368 33FC                   ADD         R15,R3
    0000136A 410B                   JSR         @R1
    0000136C 2F36                   MOV.L       R3,@-R15
    0000136E 7F0C                   ADD         #12,R15
    00001370 D186                   MOV.L       L688+14,R1 ; __muld
    00001372 63F3                   MOV         R15,R3
    00001374 7310                   ADD         #16,R3
    00001376 410B                   JSR         @R1
    00001378 2F36                   MOV.L       R3,@-R15
    0000137A 62F3                   MOV         R15,R2
    0000137C D084                   MOV.L       L688+18,R0 ; __addd
    0000137E 7210                   ADD         #16,R2
    00001380 400B                   JSR         @R0
    00001382 2F26                   MOV.L       R2,@-R15
    00001384 D183                   MOV.L       L688+22,R1 ; _rad
    00001386 E308                   MOV         #8,R3
    00001388 33FC                   ADD         R15,R3
    0000138A 410B                   JSR         @R1
    0000138C 2F36                   MOV.L       R3,@-R15
    0000138E 7F0C                   ADD         #12,R15
    00001390 D181                   MOV.L       L688+26,R1 ; _cos
    00001392 E308                   MOV         #8,R3
    00001394 33FC                   ADD         R15,R3
    00001396 410B                   JSR         @R1
    00001398 2F36                   MOV.L       R3,@-R15
    0000139A 7F0C                   ADD         #12,R15
    0000139C D17B                   MOV.L       L688+14,R1 ; __muld
    0000139E 63F3                   MOV         R15,R3
    000013A0 7310                   ADD         #16,R3
    000013A2 410B                   JSR         @R1
    000013A4 2F36                   MOV.L       R3,@-R15
    000013A6 50F5                   MOV.L       @(20,R15),R0
    000013A8 D279                   MOV.L       L688+18,R2 ; __addd
    000013AA 420B                   JSR         @R2
    000013AC 2F06                   MOV.L       R0,@-R15
         zbzfs.c   294    }
    000013AE 4F26                   LDS.L       @R15+,PR
    000013B0 000B                   RTS
    000013B2 0009                   NOP
         zbzfs.c   295    
         zbzfs.c   296    double zbzs_y(double stake, double distance, double angle)
    000013B4              _zbzs_y:                         ; function: zbzs_y




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=96
                                                           ; used runtime library name:
                                                           ; __addd, __muld
    000013B4 4F22                   STS.L       PR,@-R15
         zbzfs.c   297    {       return (zbzs_m_xy(stake, 1)+fabs(distance)*sin(rad(zbzs_m_a(stake)+sign(distance)*fabs(angle))));
    000013B6 E401                   MOV         #1,R4
    000013B8 D271                   MOV.L       L688+2,R2  ; _zbzs_m_xy
    000013BA 7FF8                   ADD         #-8,R15
    000013BC 53F5                   MOV.L       @(20,R15),R3
    000013BE 2F36                   MOV.L       R3,@-R15
    000013C0 53F5                   MOV.L       @(20,R15),R3
    000013C2 2F36                   MOV.L       R3,@-R15
    000013C4 E308                   MOV         #8,R3
    000013C6 33FC                   ADD         R15,R3
    000013C8 420B                   JSR         @R2
    000013CA 2F36                   MOV.L       R3,@-R15
    000013CC D16D                   MOV.L       L688+6,R1  ; _fabs
    000013CE 7FFC                   ADD         #-4,R15
    000013D0 53FB                   MOV.L       @(44,R15),R3
    000013D2 E208                   MOV         #8,R2
    000013D4 2F36                   MOV.L       R3,@-R15
    000013D6 53FB                   MOV.L       @(44,R15),R3
    000013D8 2F36                   MOV.L       R3,@-R15
    000013DA 32FC                   ADD         R15,R2
    000013DC 410B                   JSR         @R1
    000013DE 2F26                   MOV.L       R2,@-R15
    000013E0 7FEC                   ADD         #-20,R15
    000013E2 E044                   MOV         #68,R0
    000013E4 02FE                   MOV.L       @(R0,R15),R2
    000013E6 E308                   MOV         #8,R3
    000013E8 2F26                   MOV.L       R2,@-R15
    000013EA E044                   MOV         #68,R0
    000013EC 02FE                   MOV.L       @(R0,R15),R2
    000013EE 2F26                   MOV.L       R2,@-R15
    000013F0 33FC                   ADD         R15,R3
    000013F2 B96F                   BSR         _zbzs_m_a
    000013F4 2F36                   MOV.L       R3,@-R15
    000013F6 7FFC                   ADD         #-4,R15
    000013F8 D163                   MOV.L       L688+10,R1 ; _sign
    000013FA E05C                   MOV         #92,R0
    000013FC 03FE                   MOV.L       @(R0,R15),R3
    000013FE E208                   MOV         #8,R2
    00001400 2F36                   MOV.L       R3,@-R15
    00001402 E05C                   MOV         #92,R0
    00001404 03FE                   MOV.L       @(R0,R15),R3
    00001406 2F36                   MOV.L       R3,@-R15
    00001408 32FC                   ADD         R15,R2
    0000140A 410B                   JSR         @R1
    0000140C 2F26                   MOV.L       R2,@-R15
    0000140E 7F04                   ADD         #4,R15
    00001410 D15C                   MOV.L       L688+6,R1  ; _fabs
    00001412 E06C                   MOV         #108,R0
    00001414 02FE                   MOV.L       @(R0,R15),R2
    00001416 E308                   MOV         #8,R3
    00001418 2F26                   MOV.L       R2,@-R15
    0000141A E06C                   MOV         #108,R0
    0000141C 02FE                   MOV.L       @(R0,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000141E 2F26                   MOV.L       R2,@-R15
    00001420 33FC                   ADD         R15,R3
    00001422 410B                   JSR         @R1
    00001424 2F36                   MOV.L       R3,@-R15
    00001426 7F0C                   ADD         #12,R15
    00001428 D158                   MOV.L       L688+14,R1 ; __muld
    0000142A 63F3                   MOV         R15,R3
    0000142C 7310                   ADD         #16,R3
    0000142E 410B                   JSR         @R1
    00001430 2F36                   MOV.L       R3,@-R15
    00001432 62F3                   MOV         R15,R2
    00001434 D056                   MOV.L       L688+18,R0 ; __addd
    00001436 7210                   ADD         #16,R2
    00001438 400B                   JSR         @R0
    0000143A 2F26                   MOV.L       R2,@-R15
    0000143C D155                   MOV.L       L688+22,R1 ; _rad
    0000143E E308                   MOV         #8,R3
    00001440 33FC                   ADD         R15,R3
    00001442 410B                   JSR         @R1
    00001444 2F36                   MOV.L       R3,@-R15
    00001446 7F0C                   ADD         #12,R15
    00001448 D154                   MOV.L       L688+30,R1 ; _sin
    0000144A E308                   MOV         #8,R3
    0000144C 33FC                   ADD         R15,R3
    0000144E 410B                   JSR         @R1
    00001450 2F36                   MOV.L       R3,@-R15
    00001452 7F0C                   ADD         #12,R15
    00001454 D14D                   MOV.L       L688+14,R1 ; __muld
    00001456 63F3                   MOV         R15,R3
    00001458 7310                   ADD         #16,R3
    0000145A 410B                   JSR         @R1
    0000145C 2F36                   MOV.L       R3,@-R15
    0000145E 50F5                   MOV.L       @(20,R15),R0
    00001460 D24B                   MOV.L       L688+18,R2 ; __addd
    00001462 420B                   JSR         @R2
    00001464 2F06                   MOV.L       R0,@-R15
         zbzfs.c   298    }
    00001466 4F26                   LDS.L       @R15+,PR
    00001468 000B                   RTS
    0000146A 0009                   NOP
         zbzfs.c   299    
         zbzfs.c   300    double zbzs_a(double stake, double distance, double angle)
    0000146C              _zbzs_a:                         ; function: zbzs_a
                                                           ; frame size=56
                                                           ; used runtime library name:
                                                           ; __addd, __muld, __gtd, __ltd
    0000146C 4F22                   STS.L       PR,@-R15
         zbzfs.c   301    {       double a;
         zbzfs.c   302            a = zbzs_m_a(stake)+sign(distance)*fabs(angle);
    0000146E E208                   MOV         #8,R2
    00001470 7FF8                   ADD         #-8,R15
    00001472 7FF8                   ADD         #-8,R15
    00001474 53F7                   MOV.L       @(28,R15),R3
    00001476 2F36                   MOV.L       R3,@-R15
    00001478 53F7                   MOV.L       @(28,R15),R3
    0000147A 2F36                   MOV.L       R3,@-R15
    0000147C 32FC                   ADD         R15,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000147E B929                   BSR         _zbzs_m_a
    00001480 2F26                   MOV.L       R2,@-R15
    00001482 7FFC                   ADD         #-4,R15
    00001484 D140                   MOV.L       L688+10,R1 ; _sign
    00001486 E308                   MOV         #8,R3
    00001488 52FD                   MOV.L       @(52,R15),R2
    0000148A 2F26                   MOV.L       R2,@-R15
    0000148C 52FD                   MOV.L       @(52,R15),R2
    0000148E 2F26                   MOV.L       R2,@-R15
    00001490 33FC                   ADD         R15,R3
    00001492 410B                   JSR         @R1
    00001494 2F36                   MOV.L       R3,@-R15
    00001496 7F04                   ADD         #4,R15
    00001498 D13A                   MOV.L       L688+6,R1  ; _fabs
    0000149A E044                   MOV         #68,R0
    0000149C 03FE                   MOV.L       @(R0,R15),R3
    0000149E E208                   MOV         #8,R2
    000014A0 2F36                   MOV.L       R3,@-R15
    000014A2 E044                   MOV         #68,R0
    000014A4 03FE                   MOV.L       @(R0,R15),R3
    000014A6 2F36                   MOV.L       R3,@-R15
    000014A8 32FC                   ADD         R15,R2
    000014AA 410B                   JSR         @R1
    000014AC 2F26                   MOV.L       R2,@-R15
    000014AE 7F0C                   ADD         #12,R15
    000014B0 D136                   MOV.L       L688+14,R1 ; __muld
    000014B2 62F3                   MOV         R15,R2
    000014B4 7210                   ADD         #16,R2
    000014B6 410B                   JSR         @R1
    000014B8 2F26                   MOV.L       R2,@-R15
    000014BA 60F3                   MOV         R15,R0
    000014BC D334                   MOV.L       L688+18,R3 ; __addd
    000014BE 7010                   ADD         #16,R0
    000014C0 430B                   JSR         @R3
    000014C2 2F06                   MOV.L       R0,@-R15
         zbzfs.c   303            if (a>360)
    000014C4 52F1                   MOV.L       @(4,R15),R2
    000014C6 E300                   MOV         #0,R3
    000014C8 2F26                   MOV.L       R2,@-R15
    000014CA 52F1                   MOV.L       @(4,R15),R2
    000014CC 2F26                   MOV.L       R2,@-R15
    000014CE 2F36                   MOV.L       R3,@-R15
    000014D0 D333                   MOV.L       L688+34,R3 ; H'40768000
    000014D2 D234                   MOV.L       L688+38,R2 ; __gtd
    000014D4 420B                   JSR         @R2
    000014D6 2F36                   MOV.L       R3,@-R15
    000014D8 8800                   CMP/EQ      #0,R0
    000014DA 890C                   BT          L657
         zbzfs.c   304            {       a = a-360;
    000014DC 53F1                   MOV.L       @(4,R15),R3
    000014DE E200                   MOV         #0,R2
    000014E0 2F36                   MOV.L       R3,@-R15
    000014E2 53F1                   MOV.L       @(4,R15),R3
    000014E4 2F36                   MOV.L       R3,@-R15
    000014E6 2F26                   MOV.L       R2,@-R15
    000014E8 D22F                   MOV.L       L688+42,R2 ; H'C0768000
    000014EA 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014EC D328                   MOV.L       L688+18,R3 ; __addd
    000014EE 61F3                   MOV         R15,R1
    000014F0 7110                   ADD         #16,R1
    000014F2 430B                   JSR         @R3
    000014F4 2F16                   MOV.L       R1,@-R15
    000014F6              L657:                             
         zbzfs.c   305            }
         zbzfs.c   306            if (a<0)
    000014F6 E300                   MOV         #0,R3
    000014F8 52F1                   MOV.L       @(4,R15),R2
    000014FA 2F26                   MOV.L       R2,@-R15
    000014FC 52F1                   MOV.L       @(4,R15),R2
    000014FE 2F26                   MOV.L       R2,@-R15
    00001500 2F36                   MOV.L       R3,@-R15
    00001502 D22A                   MOV.L       L688+46,R2 ; __ltd
    00001504 420B                   JSR         @R2
    00001506 2F36                   MOV.L       R3,@-R15
    00001508 8800                   CMP/EQ      #0,R0
    0000150A 890C                   BT          L658
         zbzfs.c   307            {       a = a+360;
    0000150C 53F1                   MOV.L       @(4,R15),R3
    0000150E E200                   MOV         #0,R2
    00001510 2F36                   MOV.L       R3,@-R15
    00001512 53F1                   MOV.L       @(4,R15),R3
    00001514 2F36                   MOV.L       R3,@-R15
    00001516 2F26                   MOV.L       R2,@-R15
    00001518 D221                   MOV.L       L688+34,R2 ; H'40768000
    0000151A 2F26                   MOV.L       R2,@-R15
    0000151C D31C                   MOV.L       L688+18,R3 ; __addd
    0000151E 61F3                   MOV         R15,R1
    00001520 7110                   ADD         #16,R1
    00001522 430B                   JSR         @R3
    00001524 2F16                   MOV.L       R1,@-R15
    00001526              L658:                             
         zbzfs.c   308            }
         zbzfs.c   309            return a;
    00001526 60F3                   MOV         R15,R0
    00001528 53F3                   MOV.L       @(12,R15),R3
    0000152A 6102                   MOV.L       @R0,R1
    0000152C 2312                   MOV.L       R1,@R3
    0000152E 5101                   MOV.L       @(4,R0),R1
    00001530 1311                   MOV.L       R1,@(4,R3)
         zbzfs.c   310    }
    00001532 7F08                   ADD         #8,R15
    00001534 4F26                   LDS.L       @R15+,PR
    00001536 000B                   RTS
    00001538 0009                   NOP
         zbzfs.c   311    
         zbzfs.c   312    double zbfs_s(double px, double py)
    0000153A              _zbfs_s:                         ; function: zbfs_s
                                                           ; frame size=24
         zbzfs.c   313    {       return zbfs_s_d(px, py, 0);
    0000153A E400                   MOV         #0,R4
    0000153C 4F22                   STS.L       PR,@-R15
    0000153E 53F5                   MOV.L       @(20,R15),R3
    00001540 2F36                   MOV.L       R3,@-R15
    00001542 53F5                   MOV.L       @(20,R15),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001544 2F36                   MOV.L       R3,@-R15
    00001546 52F5                   MOV.L       @(20,R15),R2
    00001548 2F26                   MOV.L       R2,@-R15
    0000154A 52F5                   MOV.L       @(20,R15),R2
    0000154C 2F26                   MOV.L       R2,@-R15
    0000154E 53F5                   MOV.L       @(20,R15),R3
    00001550 B91A                   BSR         _zbfs_s_d
    00001552 2F36                   MOV.L       R3,@-R15
         zbzfs.c   314    }
    00001554 7F14                   ADD         #20,R15
    00001556 4F26                   LDS.L       @R15+,PR
    00001558 000B                   RTS
    0000155A 0009                   NOP
         zbzfs.c   315    
         zbzfs.c   316    double zbfs_d(double px, double py)
    0000155C              _zbfs_d:                         ; function: zbfs_d
                                                           ; frame size=24
    0000155C 4F22                   STS.L       PR,@-R15
         zbzfs.c   317    {       return zbfs_s_d(px, py, 1);
    0000155E E401                   MOV         #1,R4
    00001560 53F5                   MOV.L       @(20,R15),R3
    00001562 2F36                   MOV.L       R3,@-R15
    00001564 53F5                   MOV.L       @(20,R15),R3
    00001566 2F36                   MOV.L       R3,@-R15
    00001568 52F5                   MOV.L       @(20,R15),R2
    0000156A 2F26                   MOV.L       R2,@-R15
    0000156C 52F5                   MOV.L       @(20,R15),R2
    0000156E 2F26                   MOV.L       R2,@-R15
    00001570 53F5                   MOV.L       @(20,R15),R3
    00001572 B909                   BSR         _zbfs_s_d
    00001574 2F36                   MOV.L       R3,@-R15
         zbzfs.c   318    }
    00001576 7F14                   ADD         #20,R15
    00001578 4F26                   LDS.L       @R15+,PR
    0000157A 000B                   RTS
    0000157C 0009                   NOP
    0000157E              L688:                             
    0000157E 0000                   .DATA.W     0
    00001580 <00000000>             .DATA.L     _zbzs_m_xy
    00001584 <00000000>             .DATA.L     _fabs
    00001588 <00000000>             .DATA.L     _sign
    0000158C <00000000>             .DATA.L     __muld
    00001590 <00000000>             .DATA.L     __addd
    00001594 <00000000>             .DATA.L     _rad
    00001598 <00000000>             .DATA.L     _cos
    0000159C <00000000>             .DATA.L     _sin
    000015A0 40768000               .DATA.L     H'40768000
    000015A4 <00000000>             .DATA.L     __gtd
    000015A8 C0768000               .DATA.L     H'C0768000
    000015AC <00000000>             .DATA.L     __ltd
B   00000000              _ss:                             ; static: ss
    00000000 00000008               .RES.L      2
    00000008              _es:                             ; static: es
    00000008 00000008               .RES.L      2
    00000010              _sx:                             ; static: sx
    00000010 00000008               .RES.L      2
    00000018              _sy:                             ; static: sy




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000018 00000008               .RES.L      2
    00000020              _sa:                             ; static: sa
    00000020 00000008               .RES.L      2
    00000028              _v:                              ; static: v
    00000028 00000004               .RES.L      1
    0000002C              _sp:                             ; static: sp
    0000002C 00000008               .RES.L      2
    00000034              _ep:                             ; static: ep
    00000034 00000008               .RES.L      2




















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 07-Jun-2015 00:11:52  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      318



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000015B0 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               0000003C Byte(s)

 TOTAL PROGRAM SIZE: 000015EC Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           14
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          20
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            86






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\¿­Åô\AppData\Local\Temp\hmk1405.tmp 

