SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Administrator\Desktop\2015-06-6½»µã·¨×ªÏßÔªÍÆÁ´±í\2015-06-4½»µã·¨×ªÏßÔªÍÆÁ´±í\zfset.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         zfset.c     1    #include "headfile.h"
P   00000000              _ZSSET:                          ; function: ZSSET
                                                           ; frame size=132
                                                           ; used runtime library name:
                                                           ; __quick_evn_mvn, __quick_odd_mvn
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A EB02                   MOV         #2,R11
    0000000C D23B                   MOV.L       L578+6,R2  ; L504
    0000000E EA00                   MOV         #0,R10
    00000010 DD39                   MOV.L       L578+2,R13 ; _zfset
    00000012 6EA3                   MOV         R10,R14
    00000014 D33A                   MOV.L       L578+10,R3 ; __quick_evn_mvn
    00000016 2F96                   MOV.L       R9,@-R15
    00000018 2F86                   MOV.L       R8,@-R15
    0000001A 4F22                   STS.L       PR,@-R15
    0000001C 4F12                   STS.L       MACL,@-R15
    0000001E 7FA8                   ADD         #-88,R15
    00000020 68F3                   MOV         R15,R8
    00000022 7840                   ADD         #64,R8
    00000024 61F3                   MOV         R15,R1
    00000026 7140                   ADD         #64,R1
    00000028 430B                   JSR         @R3
    0000002A E018                   MOV         #24,R0
    0000002C D235                   MOV.L       L578+14,R2 ; L506
    0000002E 64F3                   MOV         R15,R4
    00000030 D335                   MOV.L       L578+18,R3 ; __quick_odd_mvn
    00000032 61F3                   MOV         R15,R1
    00000034 7434                   ADD         #52,R4
    00000036 7134                   ADD         #52,R1
    00000038 430B                   JSR         @R3
    0000003A E00C                   MOV         #12,R0
    0000003C 6183                   MOV         R8,R1
    0000003E 63D3                   MOV         R13,R3
    00000040 1F12                   MOV.L       R1,@(8,R15)
    00000042 6013                   MOV         R1,R0
    00000044 7308                   ADD         #8,R3
    00000046 6232                   MOV.L       @R3,R2
    00000048 2022                   MOV.L       R2,@R0
    0000004A 5231                   MOV.L       @(4,R3),R2
    0000004C 1021                   MOV.L       R2,@(4,R0)






    0000004E 6303                   MOV         R0,R3
    00000050 7308                   ADD         #8,R3
    00000052 62D3                   MOV         R13,R2
    00000054 1F31                   MOV.L       R3,@(4,R15)
    00000056 6133                   MOV         R3,R1
    00000058 7210                   ADD         #16,R2
    0000005A 63D3                   MOV         R13,R3
    0000005C 6022                   MOV.L       @R2,R0
    0000005E 7318                   ADD         #24,R3
    00000060 2102                   MOV.L       R0,@R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000062 5021                   MOV.L       @(4,R2),R0
    00000064 1101                   MOV.L       R0,@(4,R1)
    00000066 6283                   MOV         R8,R2
    00000068 7210                   ADD         #16,R2
    0000006A 6123                   MOV         R2,R1
    0000006C 2F22                   MOV.L       R2,@R15
    0000006E 6032                   MOV.L       @R3,R0
    00000070 2102                   MOV.L       R0,@R1
    00000072 5031                   MOV.L       @(4,R3),R0
    00000074 1101                   MOV.L       R0,@(4,R1)
    00000076 6343                   MOV         R4,R3
    00000078 730C                   ADD         #12,R3
    0000007A 1F38                   MOV.L       R3,@(32,R15)
    0000007C 1F45                   MOV.L       R4,@(20,R15)
    0000007E 62F3                   MOV         R15,R2
    00000080 7224                   ADD         #36,R2
    00000082 61F3                   MOV         R15,R1
    00000084 1F26                   MOV.L       R2,@(24,R15)
    00000086 7125                   ADD         #37,R1
    00000088 1F17                   MOV.L       R1,@(28,R15)
    0000008A              L559:                             
    0000008A 60B3                   MOV         R11,R0
    0000008C 8802                   CMP/EQ      #2,R0
    0000008E 8F2C                   BF/S        L560
    00000090 EC01                   MOV         #1,R12
    00000092 D91E                   MOV.L       L578+22,R9 ; _Bdisp_AllClr_VRAM
    00000094 490B                   JSR         @R9
    00000096 6BC3                   MOV         R12,R11
    00000098 E412                   MOV         #18,R4
    0000009A 1F44                   MOV.L       R4,@(16,R15)
    0000009C A009                   BRA         L561
    0000009E 59F5                   MOV.L       @(20,R15),R9
    000000A0              L562:                             
    000000A0 6696                   MOV.L       @R9+,R6
    000000A2 E700                   MOV         #0,R7
    000000A4 55F4                   MOV.L       @(16,R15),R5
    000000A6 D31A                   MOV.L       L578+26,R3 ; _PrintXY
    000000A8 430B                   JSR         @R3
    000000AA E40E                   MOV         #14,R4
    000000AC 52F4                   MOV.L       @(16,R15),R2
    000000AE 720D                   ADD         #13,R2
    000000B0 1F24                   MOV.L       R2,@(16,R15)
    000000B2              L561:                             
    000000B2 53F8                   MOV.L       @(32,R15),R3
    000000B4 3932                   CMP/HS      R3,R9
    000000B6 8BF3                   BF          L562
    000000B8 D916                   MOV.L       L578+30,R9 ; _PrintIcon
    000000BA E601                   MOV         #1,R6
    000000BC D516                   MOV.L       L578+34,R5 ; L513
    000000BE 490B                   JSR         @R9
    000000C0 E400                   MOV         #0,R4
    000000C2 E601                   MOV         #1,R6
    000000C4 D515                   MOV.L       L578+38,R5 ; L514
    000000C6 490B                   JSR         @R9
    000000C8 6463                   MOV         R6,R4
    000000CA E600                   MOV         #0,R6
    000000CC D514                   MOV.L       L578+42,R5 ; L515




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000CE 490B                   JSR         @R9
    000000D0 E402                   MOV         #2,R4
    000000D2 E601                   MOV         #1,R6
    000000D4 D513                   MOV.L       L578+46,R5 ; L516
    000000D6 490B                   JSR         @R9
    000000D8 E403                   MOV         #3,R4
    000000DA E601                   MOV         #1,R6
    000000DC D512                   MOV.L       L578+50,R5 ; L517
    000000DE 490B                   JSR         @R9
    000000E0 E404                   MOV         #4,R4
    000000E2 E600                   MOV         #0,R6
    000000E4 D511                   MOV.L       L578+54,R5 ; L518
    000000E6 490B                   JSR         @R9
    000000E8 E405                   MOV         #5,R4
    000000EA              L560:                             

    000000EA 60B3                   MOV         R11,R0
    000000EC 8801                   CMP/EQ      #1,R0
    000000EE 8F36                   BF/S        L563
    000000F0 E90D                   MOV         #13,R9
    000000F2 A030                   BRA         L564
    000000F4 6BA3                   MOV         R10,R11
    000000F6              L578:                             
    000000F6 0000                   .DATA.W     0
    000000F8 <00000000>             .DATA.L     _zfset
    000000FC <00000000>             .DATA.L     L504
    00000100 <00000000>             .DATA.L     __quick_evn_mvn
    00000104 <00000000>             .DATA.L     L506
    00000108 <00000000>             .DATA.L     __quick_odd_mvn
    0000010C <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000110 <00000000>             .DATA.L     _PrintXY
    00000114 <00000000>             .DATA.L     _PrintIcon
    00000118 <00000000>             .DATA.L     L513
    0000011C <00000000>             .DATA.L     L514
    00000120 <00000000>             .DATA.L     L515
    00000124 <00000000>             .DATA.L     L516
    00000128 <00000000>             .DATA.L     L517
    0000012C <00000000>             .DATA.L     L518
    00000130              L565:                             
    00000130 0B97                   MUL.L       R9,R11
    00000132 63B3                   MOV         R11,R3
    00000134 4308                   SHLL2       R3
    00000136 4300                   SHLL        R3
    00000138 338C                   ADD         R8,R3
    0000013A E703                   MOV         #3,R7
    0000013C 5231                   MOV.L       @(4,R3),R2
    0000013E 3EB0                   CMP/EQ      R11,R14
    00000140 2F26                   MOV.L       R2,@-R15
    00000142 051A                   STS         MACL,R5
    00000144 6232                   MOV.L       @R3,R2
    00000146 0629                   MOVT        R6
    00000148 2F26                   MOV.L       R2,@-R15
    0000014A 7510                   ADD         #16,R5
    0000014C D335                   MOV.L       L579+16,R3 ; _PrintFloat
    0000014E 430B                   JSR         @R3
    00000150 E426                   MOV         #38,R4
    00000152 7F08                   ADD         #8,R15
    00000154 7B01                   ADD         #1,R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000156              L564:                             
    00000156 E203                   MOV         #3,R2
    00000158 3B23                   CMP/GE      R2,R11
    0000015A 8BE9                   BF          L565
    0000015C 6BA3                   MOV         R10,R11
    0000015E              L563:                             
    0000015E 64F3                   MOV         R15,R4
    00000160 D231                   MOV.L       L579+20,R2 ; _GetKey
    00000162 420B                   JSR         @R2
    00000164 740C                   ADD         #12,R4
    00000166 50F3                   MOV.L       @(12,R15),R0
    00000168 9154                   MOV.W       L579,R1    ; H'753B
    0000016A 3010                   CMP/EQ      R1,R0
    0000016C 8916                   BT          L544
    0000016E 9152                   MOV.W       L579+2,R1  ; H'753C
    00000170 3010                   CMP/EQ      R1,R0
    00000172 892A                   BT          L545
    00000174 9150                   MOV.W       L579+4,R1  ; H'753D
    00000176 3010                   CMP/EQ      R1,R0
    00000178 8927                   BT          L546
    0000017A 914E                   MOV.W       L579+6,R1  ; H'753E
    0000017C 3010                   CMP/EQ      R1,R0
    0000017E 8927                   BT          L547
    00000180 914C                   MOV.W       L579+8,R1  ; H'7542
    00000182 3010                   CMP/EQ      R1,R0
    00000184 8929                   BT          L548
    00000186 914A                   MOV.W       L579+10,R1 ; H'7547
    00000188 3010                   CMP/EQ      R1,R0
    0000018A 8929                   BT          L549
    0000018C 9148                   MOV.W       L579+12,R1 ; H'7534
    0000018E 3010                   CMP/EQ      R1,R0
    00000190 8926                   BT          L577
    00000192 9146                   MOV.W       L579+14,R1 ; H'7532
    00000194 3010                   CMP/EQ      R1,R0
    00000196 8925                   BT          L551
    00000198 A04C                   BRA         L552
    0000019A 0009                   NOP
    0000019C              L544:                            ; case label 
    0000019C 52F2                   MOV.L       @(8,R15),R2
    0000019E 61D3                   MOV         R13,R1
    000001A0 6022                   MOV.L       @R2,R0
    000001A2 7108                   ADD         #8,R1
    000001A4 2102                   MOV.L       R0,@R1
    000001A6 5021                   MOV.L       @(4,R2),R0
    000001A8 1101                   MOV.L       R0,@(4,R1)
    000001AA 61D3                   MOV         R13,R1
    000001AC 53F1                   MOV.L       @(4,R15),R3
    000001AE 7110                   ADD         #16,R1
    000001B0 6032                   MOV.L       @R3,R0
    000001B2 2102                   MOV.L       R0,@R1
    000001B4 5031                   MOV.L       @(4,R3),R0
    000001B6 1101                   MOV.L       R0,@(4,R1)
    000001B8 63F2                   MOV.L       @R15,R3
    000001BA 61D3                   MOV         R13,R1
    000001BC 6233                   MOV         R3,R2
    000001BE 7118                   ADD         #24,R1
    000001C0 6022                   MOV.L       @R2,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001C2 2102                   MOV.L       R0,@R1
    000001C4 5021                   MOV.L       @(4,R2),R0
    000001C6 A022                   BRA         L576
    000001C8 0009                   NOP
    000001CA              L545:                            ; case label 
    000001CA              L546:                            ; case label 
    000001CA DC18                   MOV.L       L579+24,R12; _Nodata
    000001CC A001                   BRA         L575
    000001CE 0009                   NOP
    000001D0              L547:                            ; case label 
    000001D0 DC17                   MOV.L       L579+28,R12; _About
    000001D2              L575:                             
    000001D2 4C0B                   JSR         @R12
    000001D4 0009                   NOP
    000001D6 A05F                   BRA         L566
    000001D8 EB02                   MOV         #2,R11
    000001DA              L548:                            ; case label 
    000001DA 6BC3                   MOV         R12,R11
    000001DC A05C                   BRA         L566
    000001DE 7EFF                   ADD         #-1,R14
    000001E0              L549:                            ; case label 
    000001E0              L577:                             
    000001E0 A059                   BRA         L529
    000001E2 6BC3                   MOV         R12,R11
    000001E4              L551:                            ; case label 
    000001E4 53F2                   MOV.L       @(8,R15),R3
    000001E6 61D3                   MOV         R13,R1
    000001E8 6032                   MOV.L       @R3,R0
    000001EA 7108                   ADD         #8,R1
    000001EC 2102                   MOV.L       R0,@R1
    000001EE 5031                   MOV.L       @(4,R3),R0
    000001F0 1101                   MOV.L       R0,@(4,R1)
    000001F2 61D3                   MOV         R13,R1
    000001F4 52F1                   MOV.L       @(4,R15),R2
    000001F6 7110                   ADD         #16,R1
    000001F8 6022                   MOV.L       @R2,R0
    000001FA 2102                   MOV.L       R0,@R1
    000001FC 5021                   MOV.L       @(4,R2),R0
    000001FE 1101                   MOV.L       R0,@(4,R1)
    00000200 62F2                   MOV.L       @R15,R2
    00000202 61D3                   MOV         R13,R1
    00000204 6323                   MOV         R2,R3
    00000206 7118                   ADD         #24,R1
    00000208 6032                   MOV.L       @R3,R0
    0000020A 2102                   MOV.L       R0,@R1
    0000020C 5031                   MOV.L       @(4,R3),R0
    0000020E              L576:                             
    0000020E 1101                   MOV.L       R0,@(4,R1)
    00000210 A04C                   BRA         L567
    00000212 E000                   MOV         #0,R0
    00000214              L579:                             
    00000214 753B                   .DATA.W     H'753B
    00000216 753C                   .DATA.W     H'753C
    00000218 753D                   .DATA.W     H'753D
    0000021A 753E                   .DATA.W     H'753E
    0000021C 7542                   .DATA.W     H'7542
    0000021E 7547                   .DATA.W     H'7547




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000220 7534                   .DATA.W     H'7534
    00000222 7532                   .DATA.W     H'7532
    00000224 <00000000>             .DATA.L     _PrintFloat
    00000228 <00000000>             .DATA.L     _GetKey
    0000022C <00000000>             .DATA.L     _Nodata
    00000230 <00000000>             .DATA.L     _About
    00000234              L552:                            ; default label 
    00000234 D325                   MOV.L       L580+10,R3 ; _GetPressNumChar
    00000236 430B                   JSR         @R3
    00000238 54F3                   MOV.L       @(12,R15),R4
    0000023A 6403                   MOV         R0,R4
    0000023C 600E                   EXTS.B      R0,R0
    0000023E 2008                   TST         R0,R0
    00000240 892A                   BT          L566
    00000242 6BC3                   MOV         R12,R11
    00000244 53F6                   MOV.L       @(24,R15),R3
    00000246 E700                   MOV         #0,R7
    00000248 0E97                   MUL.L       R9,R14
    0000024A 2340                   MOV.B       R4,@R3
    0000024C 53F7                   MOV.L       @(28,R15),R3
    0000024E 051A                   STS         MACL,R5
    00000250 DC1F                   MOV.L       L580+14,R12; _InputString
    00000252 7510                   ADD         #16,R5
    00000254 23A0                   MOV.B       R10,@R3
    00000256 E30C                   MOV         #12,R3
    00000258 2F36                   MOV.L       R3,@-R15
    0000025A 66F3                   MOV         R15,R6
    0000025C 7628                   ADD         #40,R6
    0000025E 4C0B                   JSR         @R12
    00000260 E426                   MOV         #38,R4
    00000262 6C03                   MOV         R0,R12
    00000264 942D                   MOV.W       L580,R4    ; H'7532
    00000266 3C40                   CMP/EQ      R4,R12
    00000268 8D16                   BT/S        L566
    0000026A 7F04                   ADD         #4,R15
    0000026C D919                   MOV.L       L580+18,R9 ; _atof
    0000026E 62E3                   MOV         R14,R2
    00000270 4208                   SHLL2       R2
    00000272 4200                   SHLL        R2
    00000274 328C                   ADD         R8,R2
    00000276 64F3                   MOV         R15,R4
    00000278 7424                   ADD         #36,R4
    0000027A 490B                   JSR         @R9
    0000027C 2F26                   MOV.L       R2,@-R15
    0000027E 9421                   MOV.W       L580+2,R4  ; H'7547
    00000280 3C40                   CMP/EQ      R4,R12
    00000282 8F01                   BF/S        L570
    00000284 7F04                   ADD         #4,R15
    00000286 7E01                   ADD         #1,R14
    00000288              L570:                             
    00000288 941D                   MOV.W       L580+4,R4  ; H'7542
    0000028A 3C40                   CMP/EQ      R4,R12
    0000028C 8B00                   BF          L571
    0000028E 7EFF                   ADD         #-1,R14
    00000290              L571:                             
    00000290 941A                   MOV.W       L580+6,R4  ; H'7534
    00000292 3C40                   CMP/EQ      R4,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000294 8B00                   BF          L566
    00000296              L529:
    00000296 7E01                   ADD         #1,R14
    00000298              L566:                             
    00000298 E203                   MOV         #3,R2
    0000029A 3E23                   CMP/GE      R2,R14
    0000029C 8B00                   BF          L573
    0000029E 6EA3                   MOV         R10,R14
    000002A0              L573:                             
    000002A0 4E11                   CMP/PZ      R14
    000002A2 8B01                   BF          L581
    000002A4 AEF1                   BRA         L559
    000002A6 0009                   NOP
    000002A8              L581:                             
    000002A8 AEEF                   BRA         L559
    000002AA EE02                   MOV         #2,R14
    000002AC              L567:                             
    000002AC 7F58                   ADD         #88,R15
    000002AE 4F16                   LDS.L       @R15+,MACL
    000002B0 4F26                   LDS.L       @R15+,PR
    000002B2 68F6                   MOV.L       @R15+,R8
    000002B4 69F6                   MOV.L       @R15+,R9
    000002B6 6AF6                   MOV.L       @R15+,R10
    000002B8 6BF6                   MOV.L       @R15+,R11
    000002BA 6CF6                   MOV.L       @R15+,R12
    000002BC 6DF6                   MOV.L       @R15+,R13
    000002BE 000B                   RTS
    000002C0 6EF6                   MOV.L       @R15+,R14
    000002C2              L580:                             
    000002C2 7532                   .DATA.W     H'7532
    000002C4 7547                   .DATA.W     H'7547
    000002C6 7542                   .DATA.W     H'7542
    000002C8 7534                   .DATA.W     H'7534
    000002CA 0000                   .DATA.W     0
    000002CC <00000000>             .DATA.L     _GetPressNumChar
    000002D0 <00000000>             .DATA.L     _InputString
    000002D4 <00000000>             .DATA.L     _atof





         zfset.c     2    
         zfset.c     3    int ZSSET ()
         zfset.c     4    {
         zfset.c     5            uint refresh = 2,key;
         zfset.c     6            int  index = 0,i;
         zfset.c     7            char ch;
         zfset.c     8            double value[3] = {0.0,0.0,0.0};
         zfset.c     9            const char * context[] = {"Mk=:","Pd=:","Hd=:"};
         zfset.c    10            value[0]=zfset.zsm;
         zfset.c    11            value[1]=zfset.zsp;
         zfset.c    12            value[2]=zfset.zsh;
         zfset.c    13            while(1){
         zfset.c    14                    if (refresh == REFRESH_ALL){
         zfset.c    15                            refresh = REFRESH_PART;
         zfset.c    16                            Bdisp_AllClr_VRAM();
         zfset.c    17                            //DrawPicture (36, 0,60,13,PIC_SD_SET);  //******ä¸´æ¶å é¤ï¼åæ°è®¾ç½®å¾ç
                         +ï¼è®°å¾æ¹ç¹éµ
         zfset.c    18                            for (i=0;i<3;++i){
         zfset.c    19                                    PrintXY(14,18+i*13,(uchar*)context[i],0);  //ä¸­æé¡¯ç¤ºä½ç½®
         zfset.c    20                            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         zfset.c    21                            PrintIcon (0,"Rou",1);
         zfset.c    22                            PrintIcon (1,"Set",1);
         zfset.c    23                            PrintIcon (2,"OK",0);
         zfset.c    24                            PrintIcon (3,"Disp",1);
         zfset.c    25                            PrintIcon (4,"save",1);
         zfset.c    26                            PrintIcon (5,"?",0);
         zfset.c    27                    }
         zfset.c    28                    if (refresh == REFRESH_PART){
         zfset.c    29                            for (i=0;i<3;++i){
         zfset.c    30                                    PrintFloat(value[i],38,16+i*13,index==i,3);     
         zfset.c    31                            }
         zfset.c    32                            refresh = 0;
         zfset.c    33                    }
         zfset.c    34                    GetKey(&key);
         zfset.c    35                    switch(key){
         zfset.c    36                            case KEY_CTRL_F3:
         zfset.c    37                                    zfset.zsm=value[0];
         zfset.c    38                                    zfset.zsp=value[1];
         zfset.c    39                                    zfset.zsh=value[2];
         zfset.c    40                                    return 0;
         zfset.c    41                            case KEY_CTRL_F4        :
         zfset.c    42                            case KEY_CTRL_F5        :
         zfset.c    43                                    Nodata();       refresh=REFRESH_ALL;    break;
         zfset.c    44                            case KEY_CTRL_F6        :
         zfset.c    45                                    About();        refresh=REFRESH_ALL;    break;
         zfset.c    46                            case KEY_CTRL_UP:
         zfset.c    47                                    refresh=REFRESH_PART;   --index;        break;
         zfset.c    48                            case KEY_CTRL_DOWN:
         zfset.c    49                                    refresh=REFRESH_PART;   ++index;        break;
         zfset.c    50                            case KEY_CTRL_EXE:
         zfset.c    51                                    refresh = REFRESH_PART; index++;        break;
         zfset.c    52                            case KEY_CTRL_EXIT:
         zfset.c    53                                    zfset.zsm=value[0];
         zfset.c    54                                    zfset.zsp=value[1];
         zfset.c    55                                    zfset.zsh=value[2];
         zfset.c    56                                    return 0;
         zfset.c    57                            default:
         zfset.c    58                                    if ((ch=GetPressNumChar(key))!=0){
         zfset.c    59                                            char buf[14];
         zfset.c    60                                            int        r;
         zfset.c    61                                            refresh = REFRESH_PART;
         zfset.c    62                                            buf[0] = ch;   buf[1] = '\0';
         zfset.c    63                                            r = InputString (38,16+index*13,buf,0,12);
         zfset.c    64                                            if (r != KEY_CTRL_EXIT){
         zfset.c    65                                                    value[index] = atof(buf);
         zfset.c    66                                                    if      (r==KEY_CTRL_DOWN)      ++index;
         zfset.c    67                                                    if      (r==KEY_CTRL_UP)        --index;
         zfset.c    68                                                    if (r==KEY_CTRL_EXE )   ++index;
         zfset.c    69                                            }
         zfset.c    70                                            break;
         zfset.c    71                                    }
         zfset.c    72                    }
         zfset.c    73                    if (index >=3) index = 0;
         zfset.c    74                    if (index < 0) index = 2;
         zfset.c    75            }
         zfset.c    76    }
         zfset.c    77    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

C   00000000              L504:
    00000000 0000000000             .DATA.L     H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00000018              L506:
    00000018 <00000000>             .DATA.L     L507,L508,L509
             <00000000>   
             <00000000>   
    00000024              L513:
    00000024 526F75                 .SDATA      "Rou"
    00000027 00                     .DATA.B     H'00
    00000028              L514:
    00000028 536574                 .SDATA      "Set"
    0000002B 00                     .DATA.B     H'00
    0000002C              L515:
    0000002C 4F4B                   .SDATA      "OK"
    0000002E 00                     .DATA.B     H'00
    0000002F 00000001               .RES.B      1
    00000030              L516:
    00000030 44697370               .SDATA      "Disp"
    00000034 00                     .DATA.B     H'00
    00000035 00000001               .RES.B      1
    00000036 00000002               .RES.W      1
    00000038              L517:
    00000038 73617665               .SDATA      "save"
    0000003C 00                     .DATA.B     H'00
    0000003D 00000001               .RES.B      1
    0000003E 00000002               .RES.W      1
    00000040              L518:
    00000040 3F                     .SDATA      "?"
    00000041 00                     .DATA.B     H'00
    00000042 00000002               .RES.W      1
    00000044              L507:
    00000044 4D6B3D3A               .SDATA      "Mk=:"
    00000048 00                     .DATA.B     H'00
    00000049 00000001               .RES.B      1
    0000004A 00000002               .RES.W      1
    0000004C              L508:
    0000004C 50643D3A               .SDATA      "Pd=:"
    00000050 00                     .DATA.B     H'00
    00000051 00000001               .RES.B      1
    00000052 00000002               .RES.W      1
    00000054              L509:
    00000054 48643D3A               .SDATA      "Hd=:"
    00000058 00                     .DATA.B     H'00














SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:24  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        11




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       77



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000002D8 Byte(s)
CONSTANT SECTION (C):                               00000059 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000331 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           13
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           1
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            53






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk9514.tmp 

