SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:08  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Administrator\Desktop\2015-06-6½»µã·¨×ªÏßÔªÍÆÁ´±í\2015-06-4½»µã·¨×ªÏßÔªÍÆÁ´±í\input.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         input.c     1    #include "headfile.h"
P   00000000              _WaitKey:                        ; function: WaitKey
                                                           ; frame size=8
    00000000 4F22                   STS.L       PR,@-R15
    00000002 7FFC                   ADD         #-4,R15
    00000004 D336                   MOV.L       L572+4,R3  ; _GetKey
    00000006 430B                   JSR         @R3
    00000008 64F3                   MOV         R15,R4
    0000000A 60F2                   MOV.L       @R15,R0
    0000000C 7F04                   ADD         #4,R15
    0000000E 4F26                   LDS.L       @R15+,PR
    00000010 000B                   RTS
    00000012 0009                   NOP






    00000014              _GetPressNumChar:                ; function: GetPressNumChar
                                                           ; frame size=0
    00000014 E330                   MOV         #48,R3
    00000016 3433                   CMP/GE      R3,R4
    00000018 8F05                   BF/S        L533
    0000001A E500                   MOV         #0,R5
    0000001C E139                   MOV         #57,R1
    0000001E 3417                   CMP/GT      R1,R4
    00000020 8901                   BT          L533
    00000022 A00C                   BRA         L534
    00000024 6543                   MOV         R4,R5
    00000026              L533:                             
    00000026 9259                   MOV.W       L572,R2    ; H'0099
    00000028 3420                   CMP/EQ      R2,R4
    0000002A 8902                   BT          L536
    0000002C 9157                   MOV.W       L572+2,R1  ; H'0087
    0000002E 3410                   CMP/EQ      R1,R4
    00000030 8B01                   BF          L535
    00000032              L536:                             
    00000032 A004                   BRA         L534
    00000034 E52D                   MOV         #45,R5
    00000036              L535:                             
    00000036 6043                   MOV         R4,R0
    00000038 882E                   CMP/EQ      #46,R0
    0000003A 8B00                   BF          L534
    0000003C E52E                   MOV         #46,R5
    0000003E              L534:                             
    0000003E 000B                   RTS
    00000040 6053                   MOV         R5,R0
    00000042              _GetPressChar:                   ; function: GetPressChar
                                                           ; frame size=0
    00000042 E330                   MOV         #48,R3
    00000044 3433                   CMP/GE      R3,R4
    00000046 8F03                   BF/S        L542
    00000048 E500                   MOV         #0,R5
    0000004A E139                   MOV         #57,R1
    0000004C 3417                   CMP/GT      R1,R4
    0000004E 8B05                   BF          L541
    00000050              L542:                             
    00000050 E341                   MOV         #65,R3
    00000052 3433                   CMP/GE      R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:08  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000054 8B04                   BF          L540
    00000056 E15A                   MOV         #90,R1
    00000058 3417                   CMP/GT      R1,R4
    0000005A 8901                   BT          L540
    0000005C              L541:                             

    0000005C A00C                   BRA         L543
    0000005E 6543                   MOV         R4,R5
    00000060              L540:                             
    00000060 923C                   MOV.W       L572,R2    ; H'0099
    00000062 3420                   CMP/EQ      R2,R4
    00000064 8902                   BT          L545
    00000066 913A                   MOV.W       L572+2,R1  ; H'0087
    00000068 3410                   CMP/EQ      R1,R4
    0000006A 8B01                   BF          L544
    0000006C              L545:                             
    0000006C A004                   BRA         L543
    0000006E E52D                   MOV         #45,R5
    00000070              L544:                             
    00000070 6043                   MOV         R4,R0
    00000072 882E                   CMP/EQ      #46,R0
    00000074 8B00                   BF          L543
    00000076 E52E                   MOV         #46,R5
    00000078              L543:                             
    00000078 000B                   RTS
    0000007A 6053                   MOV         R5,R0
    0000007C              _InputString:                    ; function: InputString
                                                           ; frame size=64
    0000007C 2FE6                   MOV.L       R14,@-R15
    0000007E 2FD6                   MOV.L       R13,@-R15
    00000080 2FC6                   MOV.L       R12,@-R15
    00000082 6C63                   MOV         R6,R12
    00000084 D317                   MOV.L       L572+8,R3  ; _strlen
    00000086 2FB6                   MOV.L       R11,@-R15
    00000088 2FA6                   MOV.L       R10,@-R15
    0000008A 2F96                   MOV.L       R9,@-R15
    0000008C 2F86                   MOV.L       R8,@-R15
    0000008E 4F22                   STS.L       PR,@-R15
    00000090 7FE4                   ADD         #-28,R15
    00000092 1F43                   MOV.L       R4,@(12,R15)
    00000094 1F54                   MOV.L       R5,@(16,R15)
    00000096 1F76                   MOV.L       R7,@(24,R15)
    00000098 430B                   JSR         @R3
    0000009A 64C3                   MOV         R12,R4
    0000009C DB12                   MOV.L       L572+12,R11; _box_width
    0000009E E201                   MOV         #1,R2
    000000A0 2F26                   MOV.L       R2,@-R15
    000000A2 6D03                   MOV         R0,R13
    000000A4 57F5                   MOV.L       @(20,R15),R7
    000000A6 EE00                   MOV         #0,R14
    000000A8 66B2                   MOV.L       @R11,R6
    000000AA 770B                   ADD         #11,R7
    000000AC 51F4                   MOV.L       @(16,R15),R1
    000000AE 68E3                   MOV         R14,R8
    000000B0 55F5                   MOV.L       @(20,R15),R5
    000000B2 6363                   MOV         R6,R3
    000000B4 4600                   SHLL        R6
    000000B6 4308                   SHLL2       R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:08  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000B8 363C                   ADD         R3,R6
    000000BA 361C                   ADD         R1,R6
    000000BC D30B                   MOV.L       L572+16,R3 ; _DrawClearBox
    000000BE 7603                   ADD         #3,R6
    000000C0 430B                   JSR         @R3
    000000C2 6413                   MOV         R1,R4
    000000C4 DA0A                   MOV.L       L572+20,R10; _PrintXY
    000000C6 7F04                   ADD         #4,R15
    000000C8 60D3                   MOV         R13,R0
    000000CA 0C84                   MOV.B       R8,@(R0,R12)
    000000CC 1FE1                   MOV.L       R14,@(4,R15)
    000000CE 59F3                   MOV.L       @(12,R15),R9
    000000D0 7902                   ADD         #2,R9
    000000D2 1F95                   MOV.L       R9,@(20,R15)
    000000D4 53F4                   MOV.L       @(16,R15),R3
    000000D6 7302                   ADD         #2,R3
    000000D8 A015                   BRA         L549
    000000DA 1F32                   MOV.L       R3,@(8,R15)
    000000DC              L572:                             
    000000DC 0099                   .DATA.W     H'0099
    000000DE 0087                   .DATA.W     H'0087
    000000E0 <00000000>             .DATA.L     _GetKey
    000000E4 <00000000>             .DATA.L     _strlen
    000000E8 <00000000>             .DATA.L     _box_width
    000000EC <00000000>             .DATA.L     _DrawClearBox
    000000F0 <00000000>             .DATA.L     _PrintXY
    000000F4              L550:                             
    000000F4 D63A                   MOV.L       L573+12,R6 ; L516
    000000F6 E700                   MOV         #0,R7
    000000F8 55F2                   MOV.L       @(8,R15),R5
    000000FA 4A0B                   JSR         @R10
    000000FC 6493                   MOV         R9,R4
    000000FE 7906                   ADD         #6,R9
    00000100 53F1                   MOV.L       @(4,R15),R3
    00000102 7301                   ADD         #1,R3
    00000104 1F31                   MOV.L       R3,@(4,R15)
    00000106              L549:                             
    00000106 63B2                   MOV.L       @R11,R3
    00000108 52F1                   MOV.L       @(4,R15),R2
    0000010A 3233                   CMP/GE      R3,R2
    0000010C 8BF2                   BF          L550
    0000010E E700                   MOV         #0,R7
    00000110 55F2                   MOV.L       @(8,R15),R5
    00000112 62D3                   MOV         R13,R2
    00000114 64B2                   MOV.L       @R11,R4
    00000116 66C3                   MOV         R12,R6
    00000118 6343                   MOV         R4,R3
    0000011A 4400                   SHLL        R4
    0000011C 4308                   SHLL2       R3
    0000011E 343C                   ADD         R3,R4
    00000120 63D3                   MOV         R13,R3
    00000122 4200                   SHLL        R2
    00000124 4308                   SHLL2       R3
    00000126 323C                   ADD         R3,R2
    00000128 3428                   SUB         R2,R4
    0000012A 52F3                   MOV.L       @(12,R15),R2
    0000012C 342C                   ADD         R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:08  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000012E 4A0B                   JSR         @R10
    00000130 7402                   ADD         #2,R4
    00000132 50F6                   MOV.L       @(24,R15),R0
    00000134 2008                   TST         R0,R0
    00000136 0029                   MOVT        R0
    00000138 1F04                   MOV.L       R0,@(16,R15)
    0000013A              L553:                             
    0000013A D22A                   MOV.L       L573+16,R2 ; _GetKey
    0000013C 420B                   JSR         @R2
    0000013E 64F3                   MOV         R15,R4
    00000140 53F4                   MOV.L       @(16,R15),R3
    00000142 2338                   TST         R3,R3
    00000144 8903                   BT          L555
    00000146 BF65                   BSR         _GetPressNumChar
    00000148 64F2                   MOV.L       @R15,R4
    0000014A A002                   BRA         L571
    0000014C 0009                   NOP
    0000014E              L555:                             
    0000014E BF78                   BSR         _GetPressChar
    00000150 64F2                   MOV.L       @R15,R4
    00000152              L571:                             
    00000152 640E                   EXTS.B      R0,R4
    00000154 634E                   EXTS.B      R4,R3
    00000156 2338                   TST         R3,R3
    00000158 8910                   BT          L554
    0000015A 52FF                   MOV.L       @(60,R15),R2
    0000015C 3D23                   CMP/GE      R2,R13
    0000015E 8934                   BT          L561
    00000160 604E                   EXTS.B      R4,R0
    00000162 882E                   CMP/EQ      #46,R0
    00000164 8B06                   BF          L558
    00000166 2888                   TST         R8,R8
    00000168 8B2F                   BF          L561
    0000016A 60D3                   MOV         R13,R0
    0000016C 0C44                   MOV.B       R4,@(R0,R12)
    0000016E 7D01                   ADD         #1,R13
    00000170 A02B                   BRA         L561
    00000172 E801                   MOV         #1,R8
    00000174              L558:                             
    00000174 60D3                   MOV         R13,R0
    00000176 7D01                   ADD         #1,R13
    00000178 A027                   BRA         L561
    0000017A 0C44                   MOV.B       R4,@(R0,R12)
    0000017C              L554:                             
    0000017C 922A                   MOV.W       L573,R2    ; H'753F
    0000017E 63F2                   MOV.L       @R15,R3
    00000180 3320                   CMP/EQ      R2,R3
    00000182 8B02                   BF          L562
    00000184 6DE3                   MOV         R14,R13
    00000186 A00F                   BRA         L563
    00000188 68E3                   MOV         R14,R8
    0000018A              L562:                             
    0000018A 9124                   MOV.W       L573+2,R1  ; H'7549
    0000018C 63F2                   MOV.L       @R15,R3
    0000018E 3310                   CMP/EQ      R1,R3
    00000190 8B0A                   BF          L563
    00000192 4D15                   CMP/PL      R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:08  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000194 8B08                   BF          L563
    00000196 60D3                   MOV         R13,R0
    00000198 70FF                   ADD         #-1,R0
    0000019A 00CC                   MOV.B       @(R0,R12),R0
    0000019C 882E                   CMP/EQ      #46,R0
    0000019E 8F01                   BF/S        L566
    000001A0 60D3                   MOV         R13,R0
    000001A2 68E3                   MOV         R14,R8
    000001A4              L566:                             
    000001A4 0CE4                   MOV.B       R14,@(R0,R12)
    000001A6 7DFF                   ADD         #-1,R13
    000001A8              L563:                             
    000001A8 60F2                   MOV.L       @R15,R0
    000001AA 9115                   MOV.W       L573+4,R1  ; H'7534
    000001AC 3010                   CMP/EQ      R1,R0
    000001AE 890A                   BT          L528
    000001B0 9113                   MOV.W       L573+6,R1  ; H'7532
    000001B2 3010                   CMP/EQ      R1,R0
    000001B4 8907                   BT          L529
    000001B6 9111                   MOV.W       L573+8,R1  ; H'7542
    000001B8 3010                   CMP/EQ      R1,R0
    000001BA 8904                   BT          L530
    000001BC 910F                   MOV.W       L573+10,R1 ; H'7547
    000001BE 3010                   CMP/EQ      R1,R0
    000001C0 8901                   BT          L531
    000001C2 A002                   BRA         L561
    000001C4 0009                   NOP
    000001C6              L528:                            ; case label 
    000001C6              L529:                            ; case label 
    000001C6              L530:                            ; case label 
    000001C6              L531:                            ; case label 
    000001C6 A030                   BRA         L568
    000001C8 60F2                   MOV.L       @R15,R0
    000001CA              L561:                             

    000001CA 60D3                   MOV         R13,R0
    000001CC 0CE4                   MOV.B       R14,@(R0,R12)
    000001CE 1FE1                   MOV.L       R14,@(4,R15)
    000001D0 A013                   BRA         L569
    000001D2 59F5                   MOV.L       @(20,R15),R9
    000001D4              L573:                             
    000001D4 753F                   .DATA.W     H'753F
    000001D6 7549                   .DATA.W     H'7549
    000001D8 7534                   .DATA.W     H'7534
    000001DA 7532                   .DATA.W     H'7532
    000001DC 7542                   .DATA.W     H'7542
    000001DE 7547                   .DATA.W     H'7547
    000001E0 <00000000>             .DATA.L     L516
    000001E4 <00000000>             .DATA.L     _GetKey
    000001E8              L570:                             
    000001E8 D615                   MOV.L       L574+2,R6  ; L516
    000001EA E700                   MOV         #0,R7
    000001EC 55F2                   MOV.L       @(8,R15),R5
    000001EE 4A0B                   JSR         @R10
    000001F0 6493                   MOV         R9,R4
    000001F2 7906                   ADD         #6,R9
    000001F4 53F1                   MOV.L       @(4,R15),R3
    000001F6 7301                   ADD         #1,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:08  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001F8 1F31                   MOV.L       R3,@(4,R15)
    000001FA              L569:                             
    000001FA 63B2                   MOV.L       @R11,R3
    000001FC 52F1                   MOV.L       @(4,R15),R2
    000001FE 3233                   CMP/GE      R3,R2
    00000200 8BF2                   BF          L570
    00000202 E700                   MOV         #0,R7
    00000204 55F2                   MOV.L       @(8,R15),R5
    00000206 62D3                   MOV         R13,R2
    00000208 64B2                   MOV.L       @R11,R4
    0000020A 66C3                   MOV         R12,R6
    0000020C 6343                   MOV         R4,R3
    0000020E 4400                   SHLL        R4
    00000210 4308                   SHLL2       R3
    00000212 343C                   ADD         R3,R4
    00000214 63D3                   MOV         R13,R3
    00000216 4200                   SHLL        R2
    00000218 4308                   SHLL2       R3
    0000021A 323C                   ADD         R3,R2
    0000021C 3428                   SUB         R2,R4
    0000021E 52F3                   MOV.L       @(12,R15),R2
    00000220 342C                   ADD         R2,R4
    00000222 4A0B                   JSR         @R10
    00000224 7402                   ADD         #2,R4
    00000226 AF88                   BRA         L553
    00000228 0009                   NOP
    0000022A              L568:                             
    0000022A 7F1C                   ADD         #28,R15
    0000022C 4F26                   LDS.L       @R15+,PR
    0000022E 68F6                   MOV.L       @R15+,R8
    00000230 69F6                   MOV.L       @R15+,R9
    00000232 6AF6                   MOV.L       @R15+,R10
    00000234 6BF6                   MOV.L       @R15+,R11
    00000236 6CF6                   MOV.L       @R15+,R12
    00000238 6DF6                   MOV.L       @R15+,R13
    0000023A 000B                   RTS
    0000023C 6EF6                   MOV.L       @R15+,R14
    0000023E              L574:                             
    0000023E 0000                   .DATA.W     0
    00000240 <00000000>             .DATA.L     L516




         input.c     2    
         input.c     3    extern const int box_width;
         input.c     4    
         input.c     5    unsigned int WaitKey ()
         input.c     6    {
         input.c     7            unsigned int key;
         input.c     8            GetKey(&key);
         input.c     9            return key;
         input.c    10    }
         input.c    11    
         input.c    12    char GetPressNumChar(int key)
         input.c    13    {
         input.c    14            char ch = 0;
         input.c    15            if (key>=KEY_CHAR_0 && key<=KEY_CHAR_9)
         input.c    16                    ch = key;
         input.c    17            else if(key==KEY_CHAR_MINUS || key== KEY_CHAR_PMINUS)
         input.c    18                    ch = '-';




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:08  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         input.c    19            else if (key == KEY_CHAR_DP)
         input.c    20                    ch = '.';
         input.c    21            return ch;
         input.c    22    }
         input.c    23    char GetPressChar(int key)
         input.c    24    {
         input.c    25            char ch = 0;
         input.c    26            if (    key>=KEY_CHAR_0 && key<=KEY_CHAR_9 || 
         input.c    27                            key>=KEY_CHAR_A && key<=KEY_CHAR_Z)
         input.c    28                    ch = key;
         input.c    29            else if(key==KEY_CHAR_MINUS || key== KEY_CHAR_PMINUS)
         input.c    30                    ch = '-';
         input.c    31            else if (key == KEY_CHAR_DP)
         input.c    32                    ch = '.';
         input.c    33            return ch;
         input.c    34    }
         input.c    35    int InputString(int x,int y,char *c,int type,int len)// type:0.num 1.char
         input.c    36    {
         input.c    37            unsigned int key;
         input.c    38            char ch;
         input.c    39            int i = strlen(c),f = 0,j;
         input.c    40            DrawClearBox (x,y,x+box_width*6+3,y+8+3,1);
         input.c    41            c[i] = ch = 0;
         input.c    42            for(j=0;j<box_width;++j)PrintXY(x+2+j*6,y+2,(uchar*)" ",0);
         input.c    43            PrintXY(6*box_width+x+2-i*6,y+2,(uchar*)c,0);
         input.c    44            while (1)
         input.c    45            {
         input.c    46                    GetKey (&key);
         input.c    47                    if (ch= (!type)?GetPressNumChar(key):GetPressChar(key))
         input.c    48                    {
         input.c    49                            if (i<len)
         input.c    50                            {
         input.c    51                                    if(ch=='.')
         input.c    52                                    {
         input.c    53                                            if (!f) c[i++] = ch,f=1;
         input.c    54                                    }
         input.c    55                                    else
         input.c    56                                    {
         input.c    57                                            c[i++] = ch;
         input.c    58                                    }
         input.c    59                            }
         input.c    60                    }
         input.c    61                    else
         input.c    62                    {
         input.c    63                            if (key==KEY_CTRL_AC)
         input.c    64                                    i = 0,f=0;
         input.c    65                            else if (key==KEY_CTRL_DEL)
         input.c    66                            {
         input.c    67                                    if (i>0)
         input.c    68                                    {
         input.c    69                                            if      (c[i-1]=='.')   f=0;
         input.c    70                                            c[i--] = 0;     
         input.c    71                                    }
         input.c    72                                    
         input.c    73                            }
         input.c    74                            switch (key)
         input.c    75                            {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:08  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         input.c    76                                    default:break;
         input.c    77                                    case KEY_CTRL_EXE:
         input.c    78                                    case KEY_CTRL_EXIT:
         input.c    79                                    case KEY_CTRL_UP:
         input.c    80                                    case KEY_CTRL_DOWN:
         input.c    81                                            return key;
         input.c    82                            }
         input.c    83                    }
         input.c    84                    c[i] = ch = 0;
         input.c    85                    for(j=0;j<box_width;++j)PrintXY(x+2+j*6,y+2,(uchar*)" ",0);
         input.c    86                    PrintXY(6*box_width+x+2-i*6,y+2,(uchar*)c,0);
         input.c    87            }
         input.c    88    }
C   00000000              L516:
    00000000 20                     .SDATA      " "
    00000001 00                     .DATA.B     H'00













































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:08  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        11




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       88



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000244 Byte(s)
CONSTANT SECTION (C):                               00000002 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000246 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            5
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           4
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            41






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk55AE.tmp 

