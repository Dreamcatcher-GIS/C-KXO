SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Administrator\Desktop\2015-06-1∆Ω√Ê“∆»ÎΩªµ„∑®\ZDM_parameter.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      ZDM_parame     1    #include "headfile.h"












      ZDM_parame     2    #include "Binrunmain.h"
      ZDM_parame     3    #include "zbzfs.h"

      ZDM_parame     4    #include "MyFont.h"


      ZDM_parame     5    #include "cvs.h"
      ZDM_parame     6    #include <stdarg.h>
      ZDM_parame     7              
      ZDM_parame     8    double zdm_to_gc( double stake);
      ZDM_parame     9    
      ZDM_parame    10    int PrintTables3(short x,short y,char * str,short sel,short lbl)
P   00000000              _PrintTables3:                   ; function: PrintTables3
                                                           ; frame size=44
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 6073                   MOV         R7,R0
      ZDM_parame    11    {
      ZDM_parame    12            int len;
      ZDM_parame    13            const int width = 28;
      ZDM_parame    14            len = strlen(str);
    00000004 D350                   MOV.L       L988+6,R3  ; _strlen
    00000006 2FD6                   MOV.L       R13,@-R15
    00000008 2FC6                   MOV.L       R12,@-R15
    0000000A 6C63                   MOV         R6,R12
    0000000C 2FB6                   MOV.L       R11,@-R15
    0000000E EB1C                   MOV         #28,R11
    00000010 2FA6                   MOV.L       R10,@-R15
    00000012 2F96                   MOV.L       R9,@-R15
    00000014 2F86                   MOV.L       R8,@-R15
    00000016 6943                   MOV         R4,R9
    00000018 4F22                   STS.L       PR,@-R15
    0000001A 4F12                   STS.L       MACL,@-R15
    0000001C 7FF8                   ADD         #-8,R15
    0000001E 2F51                   MOV.W       R5,@R15
    00000020 81F2                   MOV.W       R0,@(4,R15)
    00000022 430B                   JSR         @R3
    00000024 64C3                   MOV         R12,R4
    00000026 6A03                   MOV         R0,R10
      ZDM_parame    15            x *= width;
      ZDM_parame    16            y *= 8;
    00000028 63F1                   MOV.W       @R15,R3
    0000002A 62B3                   MOV         R11,R2
    0000002C 292F                   MULS        R2,R9
    0000002E 4308                   SHLL2       R3
    00000030 091A                   STS         MACL,R9
    00000032 4300                   SHLL        R3
    00000034 2F31                   MOV.W       R3,@R15
      ZDM_parame    17            x += 16;
    00000036 7910                   ADD         #16,R9
    00000038 85F2                   MOV.W       @(4,R15),R0
    0000003A 6E3F                   EXTS.W      R3,R14
    0000003C 2008                   TST         R0,R0
    0000003E 8D1C                   BT/S        L836
    00000040 6D9F                   EXTS.W      R9,R13
      ZDM_parame    18            if (sel)
      ZDM_parame    19            {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      ZDM_parame    20                    Bdisp_AreaReverseVRAM(x,y,x+width-1,y+7);
    00000042 67E3                   MOV         R14,R7
    00000044 D141                   MOV.L       L988+10,R1 ; _Bdisp_AreaReverseVRAM
    00000046 66D3                   MOV         R13,R6
    00000048 7707                   ADD         #7,R7
    0000004A 761B                   ADD         #27,R6
    0000004C 65E3                   MOV         R14,R5
    0000004E 410B                   JSR         @R1
    00000050 64D3                   MOV         R13,R4
      ZDM_parame    21                    PrintMini(x+1+(lbl ? (width-5*len)/2:0),y+1,str,MINI_REV);
    00000052 E712                   MOV         #18,R7
    00000054 66C3                   MOV         R12,R6
    00000056 65E3                   MOV         R14,R5
    00000058 E02E                   MOV         #46,R0
    0000005A 03FD                   MOV.W       @(R0,R15),R3
    0000005C 2338                   TST         R3,R3
    0000005E 8D0A                   BT/S        L837
    00000060 7501                   ADD         #1,R5
    00000062 63A3                   MOV         R10,R3
    00000064 4A08                   SHLL2       R10
    00000066 3A3C                   ADD         R3,R10
    00000068 3BA8                   SUB         R10,R11
    0000006A 64B3                   MOV         R11,R4
    0000006C E300                   MOV         #0,R3
    0000006E 3347                   CMP/GT      R4,R3
    00000070 343E                   ADDC        R3,R4
    00000072 A025                   BRA         L980
    00000074 4421                   SHAR        R4
    00000076              L837:                             
    00000076 A023                   BRA         L980
    00000078 E400                   MOV         #0,R4
    0000007A              L836:                             
      ZDM_parame    22            }
      ZDM_parame    23            else
      ZDM_parame    24            {
      ZDM_parame    25    
      ZDM_parame    26                    Bdisp_DrawLineVRAM(x+width-1,y,x+width-1,y+7);
    0000007A 69E3                   MOV         R14,R9
    0000007C D134                   MOV.L       L988+14,R1 ; _Bdisp_DrawLineVRAM
    0000007E 68D3                   MOV         R13,R8
    00000080 7907                   ADD         #7,R9
    00000082 6793                   MOV         R9,R7
    00000084 781B                   ADD         #27,R8
    00000086 6683                   MOV         R8,R6
    00000088 65E3                   MOV         R14,R5
    0000008A 410B                   JSR         @R1
    0000008C 6483                   MOV         R8,R4
      ZDM_parame    27                    Bdisp_DrawLineVRAM(x,y+7,x+width-1,y+7);
    0000008E 6793                   MOV         R9,R7
    00000090 D32F                   MOV.L       L988+14,R3 ; _Bdisp_DrawLineVRAM
    00000092 6683                   MOV         R8,R6
    00000094 6593                   MOV         R9,R5
    00000096 430B                   JSR         @R3
    00000098 64D3                   MOV         R13,R4
      ZDM_parame    28                    PrintMini(x+1+(lbl ? (width-5*len)/2:0),y+1,str,MINI_OVER);
    0000009A E710                   MOV         #16,R7
    0000009C 66C3                   MOV         R12,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000009E 65E3                   MOV         R14,R5
    000000A0 E02E                   MOV         #46,R0
    000000A2 03FD                   MOV.W       @(R0,R15),R3
    000000A4 2338                   TST         R3,R3
    000000A6 8D0A                   BT/S        L840
    000000A8 7501                   ADD         #1,R5
    000000AA 63A3                   MOV         R10,R3
    000000AC 4A08                   SHLL2       R10
    000000AE 3A3C                   ADD         R3,R10
    000000B0 3BA8                   SUB         R10,R11
    000000B2 64B3                   MOV         R11,R4
    000000B4 E300                   MOV         #0,R3
    000000B6 3347                   CMP/GT      R4,R3
    000000B8 343E                   ADDC        R3,R4
    000000BA A001                   BRA         L980
    000000BC 4421                   SHAR        R4
    000000BE              L840:                             
    000000BE E400                   MOV         #0,R4
    000000C0              L980:                             
    000000C0 D324                   MOV.L       L988+18,R3 ; _PrintMini
    000000C2 34DC                   ADD         R13,R4
    000000C4 7401                   ADD         #1,R4
    000000C6 7F08                   ADD         #8,R15
    000000C8 4F16                   LDS.L       @R15+,MACL
    000000CA 4F26                   LDS.L       @R15+,PR
    000000CC 68F6                   MOV.L       @R15+,R8
    000000CE 69F6                   MOV.L       @R15+,R9
    000000D0 6AF6                   MOV.L       @R15+,R10
    000000D2 6BF6                   MOV.L       @R15+,R11
    000000D4 6CF6                   MOV.L       @R15+,R12
    000000D6 6DF6                   MOV.L       @R15+,R13
    000000D8 432B                   JMP         @R3
    000000DA 6EF6                   MOV.L       @R15+,R14
      ZDM_parame    29            }
      ZDM_parame    30    }
      ZDM_parame    31    
      ZDM_parame    32    int PrintTableFormats3 (short x,short y,short sel,short lbl,char * format,...)
    000000DC              _PrintTableFormats3:             ; function: PrintTableFormats3
                                                           ; frame size=156
    000000DC 2FE6                   MOV.L       R14,@-R15
    000000DE 4F22                   STS.L       PR,@-R15
    000000E0 902F                   MOV.W       L988,R0    ; H'FF70
    000000E2 3F0C                   ADD         R0,R15
    000000E4 6043                   MOV         R4,R0
    000000E6 81F2                   MOV.W       R0,@(4,R15)
    000000E8 6053                   MOV         R5,R0
      ZDM_parame    33    {
      ZDM_parame    34            char buffer[128];
      ZDM_parame    35            va_list parglist;
      ZDM_parame    36            va_start(parglist, format);
    000000EA E503                   MOV         #3,R5
    000000EC 81F4                   MOV.W       R0,@(8,R15)
    000000EE 6063                   MOV         R6,R0
    000000F0 81F6                   MOV.W       R0,@(12,R15)
    000000F2 2F71                   MOV.W       R7,@R15
    000000F4 9026                   MOV.W       L988+2,R0  ; H'0098
    000000F6 30FC                   ADD         R15,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000F8 7004                   ADD         #4,R0
    000000FA 2508                   TST         R0,R5
    000000FC 8903                   BT          L842
    000000FE 9521                   MOV.W       L988+2,R5  ; H'0098
    00000100 35FC                   ADD         R15,R5
    00000102 A003                   BRA         L843
    00000104 7508                   ADD         #8,R5
    00000106              L842:                             
    00000106 951D                   MOV.W       L988+2,R5  ; H'0098
    00000108 35FC                   ADD         R15,R5
    0000010A 7504                   ADD         #4,R5
    0000010C              L843:                             
      ZDM_parame    37            vsprintf(buffer,format, parglist);
    0000010C 901A                   MOV.W       L988+2,R0  ; H'0098
    0000010E 6EF3                   MOV         R15,R14
    00000110 D311                   MOV.L       L988+22,R3 ; _vsprintf
    00000112 6653                   MOV         R5,R6
    00000114 05FE                   MOV.L       @(R0,R15),R5
    00000116 7E10                   ADD         #16,R14
    00000118 430B                   JSR         @R3
    0000011A 64E3                   MOV         R14,R4
      ZDM_parame    38            va_end(pArgList);
      ZDM_parame    39            buffer[6] = 0;
    0000011C E000                   MOV         #0,R0
      ZDM_parame    40            PrintTables(x,y,buffer,sel,lbl);
    0000011E 66E3                   MOV         R14,R6
    00000120 80E6                   MOV.B       R0,@(6,R14)
    00000122 63F1                   MOV.W       @R15,R3
    00000124 2F36                   MOV.L       R3,@-R15
    00000126 85F8                   MOV.W       @(16,R15),R0
    00000128 D30C                   MOV.L       L988+26,R3 ; _PrintTables
    0000012A 6703                   MOV         R0,R7
    0000012C 85F6                   MOV.W       @(12,R15),R0
    0000012E 6503                   MOV         R0,R5
    00000130 85F4                   MOV.W       @(8,R15),R0
    00000132 430B                   JSR         @R3
    00000134 6403                   MOV         R0,R4
      ZDM_parame    41            return 0;
    00000136 E000                   MOV         #0,R0
      ZDM_parame    42    }
    00000138 9105                   MOV.W       L988+4,R1  ; H'0094
    0000013A 3F1C                   ADD         R1,R15
    0000013C 4F26                   LDS.L       @R15+,PR
    0000013E 000B                   RTS
    00000140 6EF6                   MOV.L       @R15+,R14
    00000142              L988:                             
    00000142 FF70                   .DATA.W     H'FF70
    00000144 0098                   .DATA.W     H'0098
    00000146 0094                   .DATA.W     H'0094
    00000148 <00000000>             .DATA.L     _strlen
    0000014C <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00000150 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000154 <00000000>             .DATA.L     _PrintMini
    00000158 <00000000>             .DATA.L     _vsprintf
    0000015C <00000000>             .DATA.L     _PrintTables
      ZDM_parame    43    int PrintTableIndexs3 (int y,int index)
    00000160              _PrintTableIndexs3:              ; function: PrintTableIndexs3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=28
    00000160 2FE6                   MOV.L       R14,@-R15
    00000162 2FD6                   MOV.L       R13,@-R15
    00000164 4F22                   STS.L       PR,@-R15
    00000166 6D53                   MOV         R5,R13
    00000168 7FF8                   ADD         #-8,R15
      ZDM_parame    44    {
      ZDM_parame    45            char buffer[8];
      ZDM_parame    46            if (index<0 || index>999) return 0;
    0000016A 4D11                   CMP/PZ      R13
    0000016C 8F03                   BF/S        L846
    0000016E 6E43                   MOV         R4,R14
    00000170 927C                   MOV.W       L989,R2    ; H'03E7
    00000172 3D27                   CMP/GT      R2,R13
    00000174 8B01                   BF          L845
    00000176              L846:                             
    00000176 A018                   BRA         L847
    00000178 E000                   MOV         #0,R0
    0000017A              L845:                             
      ZDM_parame    47            sprintf(buffer,"%d",index);
    0000017A 2FD6                   MOV.L       R13,@-R15
    0000017C D23D                   MOV.L       L989+8,R2  ; L564
    0000017E 2F26                   MOV.L       R2,@-R15
    00000180 D33D                   MOV.L       L989+12,R3 ; _sprintf
    00000182 64F3                   MOV         R15,R4
    00000184 430B                   JSR         @R3
    00000186 7408                   ADD         #8,R4
      ZDM_parame    48            y *= 8;
      ZDM_parame    49            Bdisp_AreaReverseVRAM(0,y,15,y+7);
    00000188 D23C                   MOV.L       L989+16,R2 ; _Bdisp_AreaReverseVRAM
    0000018A 7F08                   ADD         #8,R15
    0000018C 4E08                   SHLL2       R14
    0000018E 4E00                   SHLL        R14
    00000190 67E3                   MOV         R14,R7
    00000192 7707                   ADD         #7,R7
    00000194 E60F                   MOV         #15,R6
    00000196 65E3                   MOV         R14,R5
    00000198 420B                   JSR         @R2
    0000019A E400                   MOV         #0,R4
      ZDM_parame    50            PrintMini(1,y+2,buffer,MINI_REV);
    0000019C D338                   MOV.L       L989+20,R3 ; _PrintMini
    0000019E E712                   MOV         #18,R7
    000001A0 66F3                   MOV         R15,R6
    000001A2 65E3                   MOV         R14,R5
    000001A4 7502                   ADD         #2,R5
    000001A6 430B                   JSR         @R3
    000001A8 E401                   MOV         #1,R4
      ZDM_parame    51    }
    000001AA              L847:                             
    000001AA 7F08                   ADD         #8,R15
    000001AC 4F26                   LDS.L       @R15+,PR
    000001AE 6DF6                   MOV.L       @R15+,R13
    000001B0 000B                   RTS
    000001B2 6EF6                   MOV.L       @R15+,R14
      ZDM_parame    52    int WhetherCover3()
    000001B4              _WhetherCover3:                  ; function: WhetherCover3
                                                           ; frame size=24




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001B4 2FE6                   MOV.L       R14,@-R15
    000001B6 2FD6                   MOV.L       R13,@-R15
    000001B8 2FC6                   MOV.L       R12,@-R15
    000001BA 2FB6                   MOV.L       R11,@-R15
    000001BC 2FA6                   MOV.L       R10,@-R15
    000001BE 4F22                   STS.L       PR,@-R15
      ZDM_parame    53    {
      ZDM_parame    54            int enter;
      ZDM_parame    55            PopUpWin(5);
    000001C0 D330                   MOV.L       L989+24,R3 ; _PopUpWin
    000001C2 430B                   JSR         @R3
    000001C4 E405                   MOV         #5,R4
      ZDM_parame    56            DispStr(48,12,"∏≤∏«?"); //fugai
    000001C6 E50C                   MOV         #12,R5
    000001C8 D230                   MOV.L       L989+32,R2 ; _DispStr
    000001CA D62F                   MOV.L       L989+28,R6 ; L568
    000001CC 420B                   JSR         @R2
    000001CE E430                   MOV         #48,R4
      ZDM_parame    57            locate(7,5);Print("Yes : [F1]");
    000001D0 D32F                   MOV.L       L989+36,R3 ; _locate
    000001D2 E505                   MOV         #5,R5
    000001D4 430B                   JSR         @R3
    000001D6 E407                   MOV         #7,R4
    000001D8 D42E                   MOV.L       L989+40,R4 ; L569
    000001DA D22F                   MOV.L       L989+44,R2 ; _Print
    000001DC 420B                   JSR         @R2
    000001DE 0009                   NOP
      ZDM_parame    58            locate(7,6);Print("No  : [F6]");
    000001E0 D32B                   MOV.L       L989+36,R3 ; _locate
    000001E2 E506                   MOV         #6,R5
    000001E4 430B                   JSR         @R3
    000001E6 E407                   MOV         #7,R4
    000001E8 D42C                   MOV.L       L989+48,R4 ; L570
    000001EA D22B                   MOV.L       L989+44,R2 ; _Print
    000001EC 420B                   JSR         @R2
    000001EE 0009                   NOP
    000001F0 DA2B                   MOV.L       L989+52,R10; _GetKey
    000001F2 EB00                   MOV         #0,R11
    000001F4 9C3B                   MOV.W       L989+2,R12 ; H'753E
    000001F6 ED01                   MOV         #1,R13
    000001F8 DE2A                   MOV.L       L989+56,R14; _key
      ZDM_parame    59            do{
      ZDM_parame    60                    GetKey(&key);
    000001FA D42A                   MOV.L       L989+56,R4 ; _key
    000001FC 4A0B                   JSR         @R10
    000001FE 0009                   NOP
      ZDM_parame    61                    if (key==KEY_CTRL_F6 || key==KEY_CTRL_EXIT){enter =0 ;break;}
    00000200 63E2                   MOV.L       @R14,R3
    00000202 33C0                   CMP/EQ      R12,R3
    00000204 8903                   BT          L850
    00000206 9133                   MOV.W       L989+4,R1  ; H'7532
    00000208 62E2                   MOV.L       @R14,R2
    0000020A 3210                   CMP/EQ      R1,R2
    0000020C 8B01                   BF          L849
    0000020E              L850:                             
    0000020E A001                   BRA         L851
    00000210 64B3                   MOV         R11,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000212              L849:                             
      ZDM_parame    62                    else if (KEY_CTRL_F1) {enter = 1;break;}
    00000212 64D3                   MOV         R13,R4
    00000214              L851:                             
      ZDM_parame    63            }while(1);
      ZDM_parame    64            return enter;
      ZDM_parame    65    }
    00000214 4F26                   LDS.L       @R15+,PR
    00000216 6043                   MOV         R4,R0
    00000218 6AF6                   MOV.L       @R15+,R10
    0000021A 6BF6                   MOV.L       @R15+,R11
    0000021C 6CF6                   MOV.L       @R15+,R12
    0000021E 6DF6                   MOV.L       @R15+,R13
    00000220 000B                   RTS
    00000222 6EF6                   MOV.L       @R15+,R14
      ZDM_parame    66    int WheterSavaAS3()
    00000224              _WheterSavaAS3:                  ; function: WheterSavaAS3
                                                           ; frame size=48
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __slow_strcpy
    00000224 2FE6                   MOV.L       R14,@-R15
    00000226 2FD6                   MOV.L       R13,@-R15
    00000228 2FC6                   MOV.L       R12,@-R15
    0000022A 2FB6                   MOV.L       R11,@-R15
    0000022C 2FA6                   MOV.L       R10,@-R15
    0000022E 2F96                   MOV.L       R9,@-R15
    00000230 4F22                   STS.L       PR,@-R15
    00000232 7FF0                   ADD         #-16,R15
      ZDM_parame    67    {
      ZDM_parame    68            char str[13]="";
    00000234 D21C                   MOV.L       L989+60,R2 ; L577
    00000236 6EF3                   MOV         R15,R14
    00000238 D31C                   MOV.L       L989+64,R3 ; __slow_mvn
    0000023A 61F3                   MOV         R15,R1
    0000023C 430B                   JSR         @R3
    0000023E E00D                   MOV         #13,R0
      ZDM_parame    69            int suc,enter,i;
      ZDM_parame    70            for (i=0;i<13 && setup_data.zdmroute_name[i] != '.';++i)
    00000240 DC1B                   MOV.L       L989+68,R12; _setup_data
    00000242 E600                   MOV         #0,R6
    00000244 E50D                   MOV         #13,R5
    00000246 A007                   BRA         L855
    00000248 6463                   MOV         R6,R4
    0000024A              L856:                             
      ZDM_parame    71                    str[i] = setup_data.zdmroute_name[i];
    0000024A 6043                   MOV         R4,R0
    0000024C 63C3                   MOV         R12,R3
    0000024E 7311                   ADD         #17,R3
    00000250 334C                   ADD         R4,R3
    00000252 7401                   ADD         #1,R4
    00000254 6330                   MOV.B       @R3,R3
    00000256 0E34                   MOV.B       R3,@(R0,R14)
    00000258              L855:                             
    00000258 3453                   CMP/GE      R5,R4
    0000025A 8903                   BT          L857
    0000025C D015                   MOV.L       L989+72,R0 ; H'00000011+_setup_data
    0000025E 004C                   MOV.B       @(R0,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000260 882E                   CMP/EQ      #46,R0
    00000262 8BF2                   BF          L856
    00000264              L857:                             
      ZDM_parame    72            str[i>=13 ? 12 : i] = 0;
    00000264 3453                   CMP/GE      R5,R4
    00000266 8B27                   BF          L858
    00000268 A027                   BRA         L859
    0000026A E00C                   MOV         #12,R0
    0000026C              L989:                             
    0000026C 03E7                   .DATA.W     H'03E7
    0000026E 753E                   .DATA.W     H'753E
    00000270 7532                   .DATA.W     H'7532
    00000272 0000                   .DATA.W     0
    00000274 <00000000>             .DATA.L     L564
    00000278 <00000000>             .DATA.L     _sprintf
    0000027C <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00000280 <00000000>             .DATA.L     _PrintMini
    00000284 <00000000>             .DATA.L     _PopUpWin
    00000288 <00000000>             .DATA.L     L568
    0000028C <00000000>             .DATA.L     _DispStr
    00000290 <00000000>             .DATA.L     _locate
    00000294 <00000000>             .DATA.L     L569
    00000298 <00000000>             .DATA.L     _Print
    0000029C <00000000>             .DATA.L     L570
    000002A0 <00000000>             .DATA.L     _GetKey
    000002A4 <00000000>             .DATA.L     _key
    000002A8 <00000000>             .DATA.L     L577
    000002AC <00000000>             .DATA.L     __slow_mvn
    000002B0 <00000000>             .DATA.L     _setup_data
    000002B4 <00000011>             .DATA.L     H'00000011+_setup_data
    000002B8              L858:                             
    000002B8 6043                   MOV         R4,R0
    000002BA              L859:                             
    000002BA 0E64                   MOV.B       R6,@(R0,R14)
      ZDM_parame    73            PopUpWin(4);
    000002BC D21F                   MOV.L       L990+4,R2  ; _PopUpWin
    000002BE 420B                   JSR         @R2
    000002C0 E404                   MOV         #4,R4
      ZDM_parame    74            DispStr(24,8,"\xce\xc4\xbc\xfe\xc3\xfb(*.zdm)");//file_name
    000002C2 E508                   MOV         #8,R5
    000002C4 D31F                   MOV.L       L990+12,R3 ; _DispStr
    000002C6 D61E                   MOV.L       L990+8,R6  ; L581
    000002C8 430B                   JSR         @R3
    000002CA E418                   MOV         #24,R4
    000002CC D91E                   MOV.L       L990+16,R9 ; _InputString
    000002CE 6AE3                   MOV         R14,R10
    000002D0 9B32                   MOV.W       L990,R11   ; H'7534
    000002D2 6DB3                   MOV         R11,R13
    000002D4 7DFE                   ADD         #-2,R13
      ZDM_parame    75            do
    000002D6              L860:                             
      ZDM_parame    76            {
      ZDM_parame    77                    suc = InputString(24,24,str,1,8);
    000002D6 E208                   MOV         #8,R2
    000002D8 2F26                   MOV.L       R2,@-R15
    000002DA E701                   MOV         #1,R7
    000002DC 66E3                   MOV         R14,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002DE E518                   MOV         #24,R5
    000002E0 490B                   JSR         @R9
    000002E2 6453                   MOV         R5,R4
    000002E4 6403                   MOV         R0,R4
      ZDM_parame    78                    if (suc==KEY_CTRL_EXIT) break;
    000002E6 34D0                   CMP/EQ      R13,R4
    000002E8 8D1D                   BT/S        L865
    000002EA 7F04                   ADD         #4,R15
      ZDM_parame    79                    if (! str[0]) continue;
    000002EC 63A0                   MOV.B       @R10,R3
    000002EE 2338                   TST         R3,R3
      ZDM_parame    80            }while(suc!=KEY_CTRL_EXE);
    000002F0 34B0                   CMP/EQ      R11,R4
    000002F2 8BF0                   BF          L860
      ZDM_parame    81            if(suc!=KEY_CTRL_EXIT)
    000002F4 34D0                   CMP/EQ      R13,R4
    000002F6 8916                   BT          L865
      ZDM_parame    82            {
      ZDM_parame    83                    enter = 1;
      ZDM_parame    84                    strcat(str,".zdm");
    000002F8 D514                   MOV.L       L990+20,R5 ; L584
    000002FA ED01                   MOV         #1,R13
    000002FC D214                   MOV.L       L990+24,R2 ; _strcat
    000002FE 420B                   JSR         @R2
    00000300 64E3                   MOV         R14,R4
      ZDM_parame    85                    if (TestSRDFile3(str))
    00000302 D314                   MOV.L       L990+28,R3 ; _TestSRDFile3
    00000304 430B                   JSR         @R3
    00000306 64E3                   MOV         R14,R4
    00000308 2008                   TST         R0,R0
    0000030A 8902                   BT          L866
      ZDM_parame    86                    {
      ZDM_parame    87                            enter = WhetherCover3();
    0000030C BF52                   BSR         _WhetherCover3
    0000030E 0009                   NOP
    00000310 6D03                   MOV         R0,R13
    00000312              L866:                             
      ZDM_parame    88                    }
      ZDM_parame    89                    if (enter)
    00000312 2DD8                   TST         R13,R13
    00000314 8907                   BT          L865
      ZDM_parame    90                    {
      ZDM_parame    91                            SaveSRDFile3(str);
    00000316 D310                   MOV.L       L990+32,R3 ; _SaveSRDFile3
    00000318 430B                   JSR         @R3
    0000031A 64E3                   MOV         R14,R4
      ZDM_parame    92                            strcpy(setup_data.zdmroute_name,str);
    0000031C D20F                   MOV.L       L990+36,R2 ; __slow_strcpy
    0000031E 61E3                   MOV         R14,R1
    00000320 60C3                   MOV         R12,R0
    00000322 420B                   JSR         @R2
    00000324 7011                   ADD         #17,R0
    00000326              L865:                             
      ZDM_parame    93                    }
      ZDM_parame    94            }
      ZDM_parame    95    }
    00000326 7F10                   ADD         #16,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000328 4F26                   LDS.L       @R15+,PR
    0000032A 69F6                   MOV.L       @R15+,R9
    0000032C 6AF6                   MOV.L       @R15+,R10
    0000032E 6BF6                   MOV.L       @R15+,R11
    00000330 6CF6                   MOV.L       @R15+,R12
    00000332 6DF6                   MOV.L       @R15+,R13
    00000334 000B                   RTS
    00000336 6EF6                   MOV.L       @R15+,R14
    00000338              L990:                             
    00000338 7534                   .DATA.W     H'7534
    0000033A 0000                   .DATA.W     0
    0000033C <00000000>             .DATA.L     _PopUpWin
    00000340 <00000000>             .DATA.L     L581
    00000344 <00000000>             .DATA.L     _DispStr
    00000348 <00000000>             .DATA.L     _InputString
    0000034C <00000000>             .DATA.L     L584
    00000350 <00000000>             .DATA.L     _strcat
    00000354 <00000000>             .DATA.L     _TestSRDFile3
    00000358 <00000000>             .DATA.L     _SaveSRDFile3
    0000035C <00000000>             .DATA.L     __slow_strcpy
      ZDM_parame    96    
      ZDM_parame    97    int Selectfile3()
    00000360              _Selectfile3:                    ; function: Selectfile3
                                                           ; frame size=68
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __slow_strcpy
    00000360 2FE6                   MOV.L       R14,@-R15
    00000362 2FD6                   MOV.L       R13,@-R15
    00000364 2FC6                   MOV.L       R12,@-R15
    00000366 2FB6                   MOV.L       R11,@-R15
    00000368 2FA6                   MOV.L       R10,@-R15
      ZDM_parame    98    {
      ZDM_parame    99            index = 0;
    0000036A EB00                   MOV         #0,R11
    0000036C DD44                   MOV.L       L991+10,R13; _index
    0000036E 2F96                   MOV.L       R9,@-R15
    00000370 2F86                   MOV.L       R8,@-R15
      ZDM_parame   100            need_redraw = REDRAW_PART;
    00000372 E901                   MOV         #1,R9
    00000374 D343                   MOV.L       L991+14,R3 ; _need_redraw
    00000376 4F22                   STS.L       PR,@-R15
      ZDM_parame   101            SetMyFont(&stHz12x12,&stAsc6x12);
    00000378 D543                   MOV.L       L991+18,R5 ; _stAsc6x12
    0000037A 7FE8                   ADD         #-24,R15
    0000037C D443                   MOV.L       L991+22,R4 ; _stHz12x12
    0000037E 2DB2                   MOV.L       R11,@R13
    00000380 D243                   MOV.L       L991+26,R2 ; _SetMyFont
    00000382 420B                   JSR         @R2
    00000384 2392                   MOV.L       R9,@R3
    00000386 6EF3                   MOV         R15,R14
    00000388 D842                   MOV.L       L991+30,R8 ; _locate
    0000038A 7E08                   ADD         #8,R14
    0000038C DA42                   MOV.L       L991+34,R10; _setup_data
    0000038E 63E3                   MOV         R14,R3
    00000390 DC42                   MOV.L       L991+38,R12; _key
    00000392 1F31                   MOV.L       R3,@(4,R15)
      ZDM_parame   102            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      ZDM_parame   103            while(1)
    00000394              L869:                             
      ZDM_parame   104            {
      ZDM_parame   105                    if (need_redraw == REDRAW_PART)
    00000394 D13B                   MOV.L       L991+14,R1 ; _need_redraw
    00000396 6012                   MOV.L       @R1,R0
    00000398 8801                   CMP/EQ      #1,R0
    0000039A 8B35                   BF          L870
      ZDM_parame   106                    {
      ZDM_parame   107                            PopUpWin(6);
    0000039C D240                   MOV.L       L991+42,R2 ; _PopUpWin
    0000039E 420B                   JSR         @R2
    000003A0 E406                   MOV         #6,R4
      ZDM_parame   108                            DrawPicture(32,9,       16,     10,     G_ICON_SAVE);   DispStr(48,8,"±£¥ÊŒ™ ");
    000003A2 E70A                   MOV         #10,R7
    000003A4 D240                   MOV.L       L991+50,R2 ; _DrawPicture
    000003A6 E610                   MOV         #16,R6
    000003A8 D33E                   MOV.L       L991+46,R3 ; _G_ICON_SAVE
    000003AA E509                   MOV         #9,R5
    000003AC 2F36                   MOV.L       R3,@-R15
    000003AE 420B                   JSR         @R2
    000003B0 E420                   MOV         #32,R4
    000003B2 E508                   MOV         #8,R5
    000003B4 D33E                   MOV.L       L991+58,R3 ; _DispStr
    000003B6 D63D                   MOV.L       L991+54,R6 ; L593
    000003B8 430B                   JSR         @R3
    000003BA E430                   MOV         #48,R4
      ZDM_parame   109                            DrawPicture(32,25,      16,     10,     G_ICON_OPEN);   DispStr(48,24,"¥Úø™ ");
    000003BC D23D                   MOV.L       L991+62,R2 ; _G_ICON_OPEN
    000003BE E70A                   MOV         #10,R7
    000003C0 D339                   MOV.L       L991+50,R3 ; _DrawPicture
    000003C2 E610                   MOV         #16,R6
    000003C4 2F26                   MOV.L       R2,@-R15
    000003C6 E519                   MOV         #25,R5
    000003C8 430B                   JSR         @R3
    000003CA E420                   MOV         #32,R4
    000003CC D63A                   MOV.L       L991+66,R6 ; L594
    000003CE E518                   MOV         #24,R5
    000003D0 D237                   MOV.L       L991+58,R2 ; _DispStr
    000003D2 420B                   JSR         @R2
    000003D4 E430                   MOV         #48,R4
      ZDM_parame   110                            DrawPicture(32,41,      16,     10,     G_ICON_OTHER);  DispStr(48,40,"–¬Ω® ");
    000003D6 E70A                   MOV         #10,R7
    000003D8 D233                   MOV.L       L991+50,R2 ; _DrawPicture
    000003DA E610                   MOV         #16,R6
    000003DC D337                   MOV.L       L991+70,R3 ; _G_ICON_OTHER
    000003DE E529                   MOV         #41,R5
    000003E0 2F36                   MOV.L       R3,@-R15
    000003E2 420B                   JSR         @R2
    000003E4 E420                   MOV         #32,R4
    000003E6 7F0C                   ADD         #12,R15
    000003E8 D635                   MOV.L       L991+74,R6 ; L595
    000003EA E528                   MOV         #40,R5
    000003EC D330                   MOV.L       L991+58,R3 ; _DispStr
    000003EE 430B                   JSR         @R3
    000003F0 E430                   MOV         #48,R4
      ZDM_parame   111                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      ZDM_parame   112                            Bdisp_AreaReverseVRAM(14,8+16*index,112,20+index*16);
    000003F2 E670                   MOV         #112,R6
    000003F4 D333                   MOV.L       L991+78,R3 ; _Bdisp_AreaReverseVRAM
    000003F6 67D2                   MOV.L       @R13,R7
    000003F8 4708                   SHLL2       R7
    000003FA 4708                   SHLL2       R7
    000003FC 2F72                   MOV.L       R7,@R15
    000003FE 7714                   ADD         #20,R7
    00000400 65F2                   MOV.L       @R15,R5
    00000402 7508                   ADD         #8,R5
    00000404 430B                   JSR         @R3
    00000406 E40E                   MOV         #14,R4
    00000408              L870:                             
      ZDM_parame   113                    }
      ZDM_parame   114                    GetKey(&key);
    00000408 D424                   MOV.L       L991+38,R4 ; _key
    0000040A D22F                   MOV.L       L991+82,R2 ; _GetKey
    0000040C 420B                   JSR         @R2
    0000040E 0009                   NOP
      ZDM_parame   115                    if (key==KEY_CTRL_UP)   {if(--index<0) index = 2;need_redraw = REDRAW_PART;}
    00000410 9331                   MOV.W       L991,R3    ; H'7542
    00000412 62C2                   MOV.L       @R12,R2
    00000414 3230                   CMP/EQ      R3,R2
    00000416 8B08                   BF          L871
    00000418 60D2                   MOV.L       @R13,R0
    0000041A 70FF                   ADD         #-1,R0
    0000041C 4011                   CMP/PZ      R0
    0000041E 8D02                   BT/S        L872
    00000420 2D02                   MOV.L       R0,@R13
    00000422 E102                   MOV         #2,R1
    00000424 2D12                   MOV.L       R1,@R13
    00000426              L872:                             
    00000426 D317                   MOV.L       L991+14,R3 ; _need_redraw
    00000428 2392                   MOV.L       R9,@R3
    0000042A              L871:                             
      ZDM_parame   116                    if (key==KEY_CTRL_DOWN) {if(++index>2) index = 0;need_redraw = REDRAW_PART;}
    0000042A 9225                   MOV.W       L991+2,R2  ; H'7547
    0000042C 61C2                   MOV.L       @R12,R1
    0000042E 3120                   CMP/EQ      R2,R1
    00000430 8B08                   BF          L873
    00000432 E302                   MOV         #2,R3
    00000434 60D2                   MOV.L       @R13,R0
    00000436 7001                   ADD         #1,R0
    00000438 3037                   CMP/GT      R3,R0
    0000043A 8F01                   BF/S        L874
    0000043C 2D02                   MOV.L       R0,@R13
    0000043E 2DB2                   MOV.L       R11,@R13
    00000440              L874:                             
    00000440 D310                   MOV.L       L991+14,R3 ; _need_redraw
    00000442 2392                   MOV.L       R9,@R3
    00000444              L873:                             
    00000444 64C2                   MOV.L       @R12,R4
    00000446 9218                   MOV.W       L991+4,R2  ; H'7532
    00000448 3420                   CMP/EQ      R2,R4
    0000044A 8B01                   BF          L992
    0000044C A190                   BRA         __$EXIT$618
    0000044E 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000450              L992:                             
      ZDM_parame   117                    if (key==KEY_CTRL_EXIT) break;
      ZDM_parame   118                    if (key==KEY_CTRL_EXE)
    00000450 9314                   MOV.W       L991+6,R3  ; H'7534
    00000452 3430                   CMP/EQ      R3,R4
    00000454 8B9E                   BF          L869
      ZDM_parame   119                    {
      ZDM_parame   120                            char str[13]="";
    00000456 61F3                   MOV         R15,R1
    00000458 D21C                   MOV.L       L991+86,R2 ; L600
    0000045A 7108                   ADD         #8,R1
    0000045C D31C                   MOV.L       L991+90,R3 ; __slow_mvn
    0000045E 430B                   JSR         @R3
    00000460 E00D                   MOV         #13,R0
      ZDM_parame   121                            int suc,enter,i;
      ZDM_parame   122                            switch(index)
    00000462 60D2                   MOV.L       @R13,R0
    00000464 8800                   CMP/EQ      #0,R0
    00000466 893A                   BT          L754
    00000468 8801                   CMP/EQ      #1,R0
    0000046A 8B01                   BF          L993
    0000046C A0D2                   BRA         L755
    0000046E 0009                   NOP
    00000470              L993:                             
    00000470 8802                   CMP/EQ      #2,R0
    00000472 A02F                   BRA         L981
    00000474 0009                   NOP
    00000476              L991:                             
    00000476 7542                   .DATA.W     H'7542
    00000478 7547                   .DATA.W     H'7547
    0000047A 7532                   .DATA.W     H'7532
    0000047C 7534                   .DATA.W     H'7534
    0000047E 0000                   .DATA.W     0
    00000480 <00000000>             .DATA.L     _index
    00000484 <00000000>             .DATA.L     _need_redraw
    00000488 <00000000>             .DATA.L     _stAsc6x12
    0000048C <00000000>             .DATA.L     _stHz12x12
    00000490 <00000000>             .DATA.L     _SetMyFont
    00000494 <00000000>             .DATA.L     _locate
    00000498 <00000000>             .DATA.L     _setup_data
    0000049C <00000000>             .DATA.L     _key
    000004A0 <00000000>             .DATA.L     _PopUpWin
    000004A4 <00000000>             .DATA.L     _G_ICON_SAVE
    000004A8 <00000000>             .DATA.L     _DrawPicture
    000004AC <00000000>             .DATA.L     L593
    000004B0 <00000000>             .DATA.L     _DispStr
    000004B4 <00000000>             .DATA.L     _G_ICON_OPEN
    000004B8 <00000000>             .DATA.L     L594
    000004BC <00000000>             .DATA.L     _G_ICON_OTHER
    000004C0 <00000000>             .DATA.L     L595
    000004C4 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    000004C8 <00000000>             .DATA.L     _GetKey
    000004CC <00000000>             .DATA.L     L600
    000004D0 <00000000>             .DATA.L     __slow_mvn
    000004D4              L981:                             
    000004D4 8B01                   BF          L994
    000004D6 A0C9                   BRA         L757




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004D8 0009                   NOP
    000004DA              L994:                             
    000004DA A11D                   BRA         L878
    000004DC 0009                   NOP
    000004DE              L754:                            ; case label 
      ZDM_parame   123                            {
      ZDM_parame   124                                    case 0:
      ZDM_parame   125                                            
      ZDM_parame   126                                            for (i=0;i<13 && setup_data.zdmroute_name[i] != '.';++i)
    000004DE A007                   BRA         L879
    000004E0 64B3                   MOV         R11,R4
    000004E2              L880:                             
      ZDM_parame   127                                                    str[i] = setup_data.zdmroute_name[i];
    000004E2 6043                   MOV         R4,R0
    000004E4 63A3                   MOV         R10,R3
    000004E6 7311                   ADD         #17,R3
    000004E8 334C                   ADD         R4,R3
    000004EA 7401                   ADD         #1,R4
    000004EC 6330                   MOV.B       @R3,R3
    000004EE 0E34                   MOV.B       R3,@(R0,R14)
    000004F0              L879:                             
    000004F0 E20D                   MOV         #13,R2
    000004F2 3423                   CMP/GE      R2,R4
    000004F4 8903                   BT          L881
    000004F6 D037                   MOV.L       L995+6,R0  ; H'00000011+_setup_data
    000004F8 004C                   MOV.B       @(R0,R4),R0
    000004FA 882E                   CMP/EQ      #46,R0
    000004FC 8BF1                   BF          L880
    000004FE              L881:                             
      ZDM_parame   128                                            str[i>=13 ? 12 : i] = 0;
    000004FE E30D                   MOV         #13,R3
    00000500 3433                   CMP/GE      R3,R4
    00000502 8B01                   BF          L882
    00000504 A001                   BRA         L883
    00000506 E20C                   MOV         #12,R2
    00000508              L882:                             
    00000508 6243                   MOV         R4,R2
    0000050A              L883:                             
    0000050A 32EC                   ADD         R14,R2
    0000050C 22B0                   MOV.B       R11,@R2
      ZDM_parame   129                                            PopUpWin(4);
    0000050E D232                   MOV.L       L995+10,R2 ; _PopUpWin
    00000510 420B                   JSR         @R2
    00000512 E404                   MOV         #4,R4
      ZDM_parame   130                                            DispStr(24,8,"\xce\xc4\xbc\xfe\xc3\xfb(*.zdm)");//file_name
    00000514 D631                   MOV.L       L995+14,R6 ; L581
    00000516 E508                   MOV         #8,R5
    00000518 D331                   MOV.L       L995+18,R3 ; _DispStr
    0000051A 430B                   JSR         @R3
    0000051C E418                   MOV         #24,R4
      ZDM_parame   131                                            do
    0000051E              L884:                             
      ZDM_parame   132                                            {
      ZDM_parame   133                                                    suc = InputString(24,24,str,1,8);
    0000051E E208                   MOV         #8,R2
    00000520 D330                   MOV.L       L995+22,R3 ; _InputString
    00000522 E701                   MOV         #1,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000524 2F26                   MOV.L       R2,@-R15
    00000526 66E3                   MOV         R14,R6
    00000528 E518                   MOV         #24,R5
    0000052A 430B                   JSR         @R3
    0000052C 6453                   MOV         R5,R4
    0000052E 6403                   MOV         R0,R4
      ZDM_parame   134                                                    if (suc==KEY_CTRL_EXIT) break;
    00000530 924D                   MOV.W       L995,R2    ; H'7532
    00000532 3420                   CMP/EQ      R2,R4
    00000534 8F02                   BF/S        L996
    00000536 7F04                   ADD         #4,R15
    00000538 A0EE                   BRA         L878
    0000053A 0009                   NOP
    0000053C              L996:                             
      ZDM_parame   135                                                    if (! str[0]) continue;
    0000053C 53F1                   MOV.L       @(4,R15),R3
    0000053E 6230                   MOV.B       @R3,R2
      ZDM_parame   136                                            }while(suc!=KEY_CTRL_EXE);
    00000540 9146                   MOV.W       L995+2,R1  ; H'7534
    00000542 2228                   TST         R2,R2
    00000544 3410                   CMP/EQ      R1,R4
    00000546 8BEA                   BF          L884
      ZDM_parame   137                                            if(suc!=KEY_CTRL_EXIT)
    00000548 9241                   MOV.W       L995,R2    ; H'7532
    0000054A 3420                   CMP/EQ      R2,R4
    0000054C 8B01                   BF          L997
    0000054E A0E3                   BRA         L878
    00000550 0009                   NOP
    00000552              L997:                             
      ZDM_parame   138                                            {
      ZDM_parame   139                                                    enter = 1;
    00000552 2F92                   MOV.L       R9,@R15
      ZDM_parame   140                                                    strcat(str,".zdm");
    00000554 D524                   MOV.L       L995+26,R5 ; L584
    00000556 D325                   MOV.L       L995+30,R3 ; _strcat
    00000558 430B                   JSR         @R3
    0000055A 64E3                   MOV         R14,R4
      ZDM_parame   141                                                    if (TestSRDFile3(str))
    0000055C D224                   MOV.L       L995+34,R2 ; _TestSRDFile3
    0000055E 420B                   JSR         @R2
    00000560 64E3                   MOV         R14,R4
    00000562 2008                   TST         R0,R0
    00000564 8924                   BT          L890
      ZDM_parame   142                                                    {
      ZDM_parame   143                                                            PopUpWin(5);
    00000566 D21C                   MOV.L       L995+10,R2 ; _PopUpWin
    00000568 420B                   JSR         @R2
    0000056A E405                   MOV         #5,R4
      ZDM_parame   144                                                            DispStr(48,12,"∏≤∏«?"); //fugai
    0000056C D621                   MOV.L       L995+38,R6 ; L568
    0000056E E50C                   MOV         #12,R5
    00000570 D31B                   MOV.L       L995+18,R3 ; _DispStr
    00000572 430B                   JSR         @R3
    00000574 E430                   MOV         #48,R4
      ZDM_parame   145                                                            locate(7,5);Print("Yes : [F1]");
    00000576 E505                   MOV         #5,R5
    00000578 480B                   JSR         @R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000057A E407                   MOV         #7,R4
    0000057C D41E                   MOV.L       L995+42,R4 ; L569
    0000057E D21F                   MOV.L       L995+46,R2 ; _Print
    00000580 420B                   JSR         @R2
    00000582 0009                   NOP
      ZDM_parame   146                                                            locate(7,6);Print("No  : [F6]");
    00000584 E506                   MOV         #6,R5
    00000586 480B                   JSR         @R8
    00000588 E407                   MOV         #7,R4
    0000058A D41D                   MOV.L       L995+50,R4 ; L570
    0000058C D31B                   MOV.L       L995+46,R3 ; _Print
    0000058E 430B                   JSR         @R3
    00000590 0009                   NOP
      ZDM_parame   147                                                            do{
      ZDM_parame   148                                                                    GetKey(&key);
    00000592 D41C                   MOV.L       L995+54,R4 ; _key
    00000594 D21C                   MOV.L       L995+58,R2 ; _GetKey
    00000596 420B                   JSR         @R2
    00000598 0009                   NOP
      ZDM_parame   149                                                                    if (key==KEY_CTRL_F6 || key==KEY_CTRL_EXIT
                         +){enter =0 ;break;}
    0000059A 931A                   MOV.W       L995+4,R3  ; H'753E
    0000059C 62C2                   MOV.L       @R12,R2
    0000059E 3230                   CMP/EQ      R3,R2
    000005A0 8903                   BT          L893
    000005A2 9014                   MOV.W       L995,R0    ; H'7532
    000005A4 61C2                   MOV.L       @R12,R1
    000005A6 3100                   CMP/EQ      R0,R1
    000005A8 8B01                   BF          L892
    000005AA              L893:                             
    000005AA A001                   BRA         L890
    000005AC 2FB2                   MOV.L       R11,@R15
    000005AE              L892:                             
      ZDM_parame   150                                                                    else if (KEY_CTRL_F1) {enter = 1;break;}
    000005AE 2F92                   MOV.L       R9,@R15
    000005B0              L890:                             
      ZDM_parame   151                                                            }while(1);
      ZDM_parame   152                                                    }
      ZDM_parame   153                                                    if (enter)
    000005B0 63F2                   MOV.L       @R15,R3
    000005B2 2338                   TST         R3,R3
    000005B4 8B01                   BF          L998
    000005B6 A0AF                   BRA         L878
    000005B8 0009                   NOP
    000005BA              L998:                             
      ZDM_parame   154                                                    {
      ZDM_parame   155                                                            SaveSRDFile3(str);
    000005BA D314                   MOV.L       L995+62,R3 ; _SaveSRDFile3
    000005BC 430B                   JSR         @R3
    000005BE 64E3                   MOV         R14,R4
      ZDM_parame   156                                                            strcpy(setup_data.zdmroute_name,str);
    000005C0 D213                   MOV.L       L995+66,R2 ; __slow_strcpy
    000005C2 61E3                   MOV         R14,R1
    000005C4 60A3                   MOV         R10,R0
    000005C6 420B                   JSR         @R2
    000005C8 7011                   ADD         #17,R0
      ZDM_parame   157                                                    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      ZDM_parame   158                                            }     
      ZDM_parame   159                                            break;
    000005CA A0A5                   BRA         L878
    000005CC 0009                   NOP
    000005CE              L995:                             
    000005CE 7532                   .DATA.W     H'7532
    000005D0 7534                   .DATA.W     H'7534
    000005D2 753E                   .DATA.W     H'753E
    000005D4 <00000011>             .DATA.L     H'00000011+_setup_data
    000005D8 <00000000>             .DATA.L     _PopUpWin
    000005DC <00000000>             .DATA.L     L581
    000005E0 <00000000>             .DATA.L     _DispStr
    000005E4 <00000000>             .DATA.L     _InputString
    000005E8 <00000000>             .DATA.L     L584
    000005EC <00000000>             .DATA.L     _strcat
    000005F0 <00000000>             .DATA.L     _TestSRDFile3
    000005F4 <00000000>             .DATA.L     L568
    000005F8 <00000000>             .DATA.L     L569
    000005FC <00000000>             .DATA.L     _Print
    00000600 <00000000>             .DATA.L     L570
    00000604 <00000000>             .DATA.L     _key
    00000608 <00000000>             .DATA.L     _GetKey
    0000060C <00000000>             .DATA.L     _SaveSRDFile3
    00000610 <00000000>             .DATA.L     __slow_strcpy
    00000614              L755:                            ; case label 
      ZDM_parame   160                                    case 1:
      ZDM_parame   161                                            suc = SelectFiles3 (str);
    00000614 D142                   MOV.L       L999+2,R1  ; _SelectFiles3
    00000616 410B                   JSR         @R1
    00000618 64E3                   MOV         R14,R4
      ZDM_parame   162                                            if (suc==-1)
    0000061A 88FF                   CMP/EQ      #-1,R0
    0000061C 8F0E                   BF/S        L898
    0000061E 2F02                   MOV.L       R0,@R15
      ZDM_parame   163                                            {
      ZDM_parame   164                                                    PopUpWin(1);
    00000620 D240                   MOV.L       L999+6,R2  ; _PopUpWin
    00000622 420B                   JSR         @R2
    00000624 E401                   MOV         #1,R4
      ZDM_parame   165                                                    locate(7,4);Print("No File!");
    00000626 E504                   MOV         #4,R5
    00000628 480B                   JSR         @R8
    0000062A E407                   MOV         #7,R4
    0000062C D43E                   MOV.L       L999+10,R4 ; L614
    0000062E D33F                   MOV.L       L999+14,R3 ; _Print
    00000630 430B                   JSR         @R3
    00000632 0009                   NOP
      ZDM_parame   166                                                    GetKey(&key);
    00000634 D43E                   MOV.L       L999+18,R4 ; _key
    00000636 D23F                   MOV.L       L999+22,R2 ; _GetKey
    00000638 420B                   JSR         @R2
    0000063A 0009                   NOP
    0000063C              L898:                             
      ZDM_parame   167                                            }
      ZDM_parame   168                                            if(suc==1)
    0000063C 60F2                   MOV.L       @R15,R0
    0000063E 8801                   CMP/EQ      #1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000640 8B14                   BF          L757
      ZDM_parame   169                                            {
      ZDM_parame   170                                                    LoadSRDFile3 (str);
    00000642 D23D                   MOV.L       L999+26,R2 ; _LoadSRDFile3
    00000644 420B                   JSR         @R2
    00000646 64E3                   MOV         R14,R4
      ZDM_parame   171                                                    strcpy(setup_data.zdmroute_name,str);
    00000648 D33C                   MOV.L       L999+30,R3 ; __slow_strcpy
    0000064A 61E3                   MOV         R14,R1
    0000064C 60A3                   MOV         R10,R0
    0000064E 430B                   JSR         @R3
    00000650 7011                   ADD         #17,R0
      ZDM_parame   172                                                    if(LoadSRDFile3 (setup_data.zdmroute_name)==1)
    00000652 64A3                   MOV         R10,R4
    00000654 D238                   MOV.L       L999+26,R2 ; _LoadSRDFile3
    00000656 420B                   JSR         @R2
    00000658 7411                   ADD         #17,R4
    0000065A 8801                   CMP/EQ      #1,R0
    0000065C 8901                   BT          L1000
    0000065E A087                   BRA         __$EXIT$618
    00000660 0009                   NOP
    00000662              L1000:                            
      ZDM_parame   173                                                    SaveIniSRDFile3();
    00000662 D237                   MOV.L       L999+34,R2 ; _SaveIniSRDFile3
    00000664 420B                   JSR         @R2
    00000666 0009                   NOP
      ZDM_parame   174                                                    goto EXIT;
    00000668 A082                   BRA         __$EXIT$618
    0000066A 0009                   NOP
    0000066C              L757:                            ; case label 
      ZDM_parame   175                                            }
      ZDM_parame   176                                            
      ZDM_parame   177                                    case 2:
      ZDM_parame   178                                            PopUpWin(5);
    0000066C D22D                   MOV.L       L999+6,R2  ; _PopUpWin
    0000066E 420B                   JSR         @R2
    00000670 E405                   MOV         #5,R4
      ZDM_parame   179                                        DispStr(48,12,"–¬Ω®?"); 
    00000672 E50C                   MOV         #12,R5
    00000674 D334                   MOV.L       L999+42,R3 ; _DispStr
    00000676 D633                   MOV.L       L999+38,R6 ; L619
    00000678 430B                   JSR         @R3
    0000067A E430                   MOV         #48,R4
      ZDM_parame   180                                        locate(7,5);Print("Yes : [F1]");
    0000067C E505                   MOV         #5,R5
    0000067E 480B                   JSR         @R8
    00000680 E407                   MOV         #7,R4
    00000682 D432                   MOV.L       L999+46,R4 ; L569
    00000684 D229                   MOV.L       L999+14,R2 ; _Print
    00000686 420B                   JSR         @R2
    00000688 0009                   NOP
      ZDM_parame   181                                            locate(7,6);Print("No  : [F6]");
    0000068A E506                   MOV         #6,R5
    0000068C 480B                   JSR         @R8
    0000068E E407                   MOV         #7,R4
    00000690 D42F                   MOV.L       L999+50,R4 ; L570
    00000692 D326                   MOV.L       L999+14,R3 ; _Print




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000694 430B                   JSR         @R3
    00000696 0009                   NOP
      ZDM_parame   182                                            GetKey(&key);
    00000698 D425                   MOV.L       L999+18,R4 ; _key
    0000069A D226                   MOV.L       L999+22,R2 ; _GetKey
    0000069C 420B                   JSR         @R2
    0000069E 0009                   NOP
      ZDM_parame   183                                            if (key==KEY_CTRL_F1){
    000006A0 933D                   MOV.W       L999,R3    ; H'7539
    000006A2 62C2                   MOV.L       @R12,R2
    000006A4 3230                   CMP/EQ      R3,R2
    000006A6 8B37                   BF          L878
      ZDM_parame   184                                                    PopUpWin(5);
    000006A8 D21E                   MOV.L       L999+6,R2  ; _PopUpWin
    000006AA 420B                   JSR         @R2
    000006AC E405                   MOV         #5,R4
      ZDM_parame   185                                            DispStr(40,12,"±£¥Ê ˝æ›?"); 
    000006AE E50C                   MOV         #12,R5
    000006B0 D325                   MOV.L       L999+42,R3 ; _DispStr
    000006B2 D628                   MOV.L       L999+54,R6 ; L621
    000006B4 430B                   JSR         @R3
    000006B6 E428                   MOV         #40,R4
      ZDM_parame   186                                            locate(7,5);Print("Yes : [F1]");
    000006B8 E505                   MOV         #5,R5
    000006BA 480B                   JSR         @R8
    000006BC E407                   MOV         #7,R4
    000006BE D423                   MOV.L       L999+46,R4 ; L569
    000006C0 D21A                   MOV.L       L999+14,R2 ; _Print
    000006C2 420B                   JSR         @R2
    000006C4 0009                   NOP
      ZDM_parame   187                                                locate(7,6);Print("No  : [F6]");
    000006C6 E506                   MOV         #6,R5
    000006C8 480B                   JSR         @R8
    000006CA E407                   MOV         #7,R4
    000006CC D420                   MOV.L       L999+50,R4 ; L570
    000006CE D317                   MOV.L       L999+14,R3 ; _Print
    000006D0 430B                   JSR         @R3
    000006D2 0009                   NOP
      ZDM_parame   188                                                GetKey(&key);
    000006D4 D416                   MOV.L       L999+18,R4 ; _key
    000006D6 D217                   MOV.L       L999+22,R2 ; _GetKey
    000006D8 420B                   JSR         @R2
    000006DA 0009                   NOP
      ZDM_parame   189                                                    if(key==KEY_CTRL_F1)
    000006DC 931F                   MOV.W       L999,R3    ; H'7539
    000006DE 62C2                   MOV.L       @R12,R2
    000006E0 3230                   CMP/EQ      R3,R2
    000006E2 8B0D                   BF          L902
      ZDM_parame   190                                                    {
      ZDM_parame   191                                                            if(setup_data.zdmroute_name[0]==0)
    000006E4 60A3                   MOV         R10,R0
    000006E6 7011                   ADD         #17,R0
    000006E8 6200                   MOV.B       @R0,R2
    000006EA 2228                   TST         R2,R2
    000006EC 8B04                   BF          L903
      ZDM_parame   192                                                {
      ZDM_parame   193                                                        WheterSavaAS();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006EE D21A                   MOV.L       L999+58,R2 ; _WheterSavaAS
    000006F0 420B                   JSR         @R2
    000006F2 0009                   NOP
    000006F4 A004                   BRA         L902
    000006F6 0009                   NOP
    000006F8              L903:                             
      ZDM_parame   194                                                }
      ZDM_parame   195                                                else
      ZDM_parame   196                                                {
      ZDM_parame   197                                                        SaveSRDFile3(setup_data.zdmroute_name);
    000006F8 D218                   MOV.L       L999+62,R2 ; _SaveSRDFile3
    000006FA 64A3                   MOV         R10,R4
    000006FC 420B                   JSR         @R2
    000006FE 7411                   ADD         #17,R4
    00000700              L902:                             
      ZDM_parame   198                                                }
      ZDM_parame   199                                                    }                                               
      ZDM_parame   200                                                    setup_data.zdmroute_name[0]=0;
      ZDM_parame   201                                            zdmroute_initial(&zdmroute);
    00000700 D417                   MOV.L       L999+66,R4 ; _zdmroute
    00000702 63A3                   MOV         R10,R3
    00000704 D217                   MOV.L       L999+70,R2 ; _zdmroute_initial
    00000706 7311                   ADD         #17,R3
    00000708 420B                   JSR         @R2
    0000070A 23B0                   MOV.B       R11,@R3
      ZDM_parame   202                                zdmroute_push_back(&zdmroute);
    0000070C D414                   MOV.L       L999+66,R4 ; _zdmroute
    0000070E D316                   MOV.L       L999+74,R3 ; _zdmroute_push_back
    00000710 430B                   JSR         @R3
    00000712 0009                   NOP
      ZDM_parame   203                                                    goto EXIT;
    00000714 A02C                   BRA         __$EXIT$618
    00000716 0009                   NOP
    00000718              L878:                             
      ZDM_parame   204                                    }   
      ZDM_parame   205                                        break;
      ZDM_parame   206                                            
      ZDM_parame   207                                    default:break;
      ZDM_parame   208                            }
      ZDM_parame   209                            need_redraw = REDRAW_PART;
    00000718 D314                   MOV.L       L999+78,R3 ; _need_redraw
    0000071A AE3B                   BRA         L869
    0000071C 2392                   MOV.L       R9,@R3
    0000071E              L999:                             
    0000071E 7539                   .DATA.W     H'7539
    00000720 <00000000>             .DATA.L     _SelectFiles3
    00000724 <00000000>             .DATA.L     _PopUpWin
    00000728 <00000000>             .DATA.L     L614
    0000072C <00000000>             .DATA.L     _Print
    00000730 <00000000>             .DATA.L     _key
    00000734 <00000000>             .DATA.L     _GetKey
    00000738 <00000000>             .DATA.L     _LoadSRDFile3
    0000073C <00000000>             .DATA.L     __slow_strcpy
    00000740 <00000000>             .DATA.L     _SaveIniSRDFile3
    00000744 <00000000>             .DATA.L     L619
    00000748 <00000000>             .DATA.L     _DispStr
    0000074C <00000000>             .DATA.L     L569




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000750 <00000000>             .DATA.L     L570
    00000754 <00000000>             .DATA.L     L621
    00000758 <00000000>             .DATA.L     _WheterSavaAS
    0000075C <00000000>             .DATA.L     _SaveSRDFile3
    00000760 <00000000>             .DATA.L     _zdmroute
    00000764 <00000000>             .DATA.L     _zdmroute_initial
    00000768 <00000000>             .DATA.L     _zdmroute_push_back
    0000076C <00000000>             .DATA.L     _need_redraw
    00000770              __$EXIT$618:                     ; label: EXIT
      ZDM_parame   210                    }
      ZDM_parame   211            }
      ZDM_parame   212            EXIT:
      ZDM_parame   213            return 0;
    00000770 E000                   MOV         #0,R0
      ZDM_parame   214    }
    00000772 7F18                   ADD         #24,R15
    00000774 4F26                   LDS.L       @R15+,PR
    00000776 68F6                   MOV.L       @R15+,R8
    00000778 69F6                   MOV.L       @R15+,R9
    0000077A 6AF6                   MOV.L       @R15+,R10
    0000077C 6BF6                   MOV.L       @R15+,R11
    0000077E 6CF6                   MOV.L       @R15+,R12
    00000780 6DF6                   MOV.L       @R15+,R13
    00000782 000B                   RTS
    00000784 6EF6                   MOV.L       @R15+,R14
      ZDM_parame   215    
      ZDM_parame   216    
      ZDM_parame   217    int ZDM_parameter()
    00000786              _ZDM_parameter:                  ; function: ZDM_parameter
                                                           ; frame size=220
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __quick_evn_mvn, __quick_odd_mvn
    00000786 2FE6                   MOV.L       R14,@-R15
    00000788 2FD6                   MOV.L       R13,@-R15
    0000078A ED00                   MOV         #0,R13
      ZDM_parame   218    {
      ZDM_parame   219            
      ZDM_parame   220            char * table_label[]= {"DH","BBZH","BBGC","BJ"};
    0000078C 9155                   MOV.W       L1001+2,R1 ; H'0084
    0000078E 2FC6                   MOV.L       R12,@-R15
    00000790 2FB6                   MOV.L       R11,@-R15
    00000792 2FA6                   MOV.L       R10,@-R15
    00000794 2F96                   MOV.L       R9,@-R15
    00000796 2F86                   MOV.L       R8,@-R15
    00000798 4F22                   STS.L       PR,@-R15
    0000079A 4F12                   STS.L       MACL,@-R15
    0000079C 904C                   MOV.W       L1001,R0   ; H'FF6C
    0000079E 3F0C                   ADD         R0,R15
    000007A0 DC27                   MOV.L       L1001+8,R12; _zdmroute
    000007A2 31FC                   ADD         R15,R1
    000007A4 D227                   MOV.L       L1001+12,R2; L629
    000007A6 D328                   MOV.L       L1001+16,R3; __quick_evn_mvn
    000007A8 430B                   JSR         @R3
    000007AA E010                   MOV         #16,R0
      ZDM_parame   221            char * icons[]          = {"","","","",""};
    000007AC D227                   MOV.L       L1001+20,R2; L635
    000007AE 61F3                   MOV         R15,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007B0 D327                   MOV.L       L1001+24,R3; __quick_odd_mvn
    000007B2 7170                   ADD         #112,R1
    000007B4 430B                   JSR         @R3
    000007B6 E014                   MOV         #20,R0
      ZDM_parame   222            char * ch_text[]        = {"\xb5\xe3\xc3\xfb",
      ZDM_parame   223                                    "±‰∆¬◊Æ∫≈",
      ZDM_parame   224                                                            "±‰∆¬∏ﬂ≥Ã",
      ZDM_parame   225                                                            "∞Îæ∂ "};
    000007B8 D226                   MOV.L       L1001+28,R2; L638
    000007BA 61F3                   MOV         R15,R1
    000007BC D322                   MOV.L       L1001+16,R3; __quick_evn_mvn
    000007BE 7160                   ADD         #96,R1
    000007C0 430B                   JSR         @R3
    000007C2 E010                   MOV         #16,R0
      ZDM_parame   226            int x = 0,y = 0,i,j,t;
      ZDM_parame   227            int left = 0,top = 0;
    000007C4 2FD2                   MOV.L       R13,@R15
      ZDM_parame   228            int refresh = REDRAW_ALL;
    000007C6 E802                   MOV         #2,R8
      ZDM_parame   229            int enter,suc;
      ZDM_parame   230            char str[13]="";
    000007C8 D223                   MOV.L       L1001+32,R2; L654
    000007CA 6BD3                   MOV         R13,R11
    000007CC D323                   MOV.L       L1001+36,R3; __slow_mvn
    000007CE 6ED3                   MOV         R13,R14
    000007D0 1FD1                   MOV.L       R13,@(4,R15)
    000007D2 61F3                   MOV         R15,R1
    000007D4 7150                   ADD         #80,R1
    000007D6 430B                   JSR         @R3
    000007D8 E00D                   MOV         #13,R0
    000007DA 61F3                   MOV         R15,R1
    000007DC 7140                   ADD         #64,R1
    000007DE 63F3                   MOV         R15,R3
    000007E0 1F1D                   MOV.L       R1,@(52,R15)
    000007E2 7341                   ADD         #65,R3
    000007E4 1F37                   MOV.L       R3,@(28,R15)
    000007E6 61F3                   MOV         R15,R1
    000007E8 7140                   ADD         #64,R1
    000007EA 63F3                   MOV         R15,R3
    000007EC 1F1E                   MOV.L       R1,@(56,R15)
    000007EE 7341                   ADD         #65,R3
    000007F0 1F3F                   MOV.L       R3,@(60,R15)
      ZDM_parame   231            char c;
      ZDM_parame   232            
      ZDM_parame   233       
      ZDM_parame   234            while(1){
    000007F2              L907:                             
      ZDM_parame   235                    if (refresh==REDRAW_ALL){
    000007F2 6083                   MOV         R8,R0
    000007F4 D91A                   MOV.L       L1001+40,R9; _DispStr
    000007F6 8802                   CMP/EQ      #2,R0
    000007F8 8B75                   BF          L908
      ZDM_parame   236                            Bdisp_AllClr_VRAM();
    000007FA DA1A                   MOV.L       L1001+44,R10; _Bdisp_AllClr_VRAM
    000007FC 4A0B                   JSR         @R10
    000007FE 0009                   NOP
      ZDM_parame   237                            for (i=0;i<4;++i)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000800 A010                   BRA         L909
    00000802 6AD3                   MOV         R13,R10
    00000804              L910:                             
      ZDM_parame   238                            PrintTables(i,0,table_label[left+i],1,1);
    00000804 D818                   MOV.L       L1001+48,R8; _PrintTables
    00000806 E301                   MOV         #1,R3
    00000808 9218                   MOV.W       L1001+4,R2 ; H'0088
    0000080A E500                   MOV         #0,R5
    0000080C 2F36                   MOV.L       R3,@-R15
    0000080E 6733                   MOV         R3,R7
    00000810 56F1                   MOV.L       @(4,R15),R6
    00000812 32FC                   ADD         R15,R2
    00000814 36AC                   ADD         R10,R6
    00000816 4608                   SHLL2       R6
    00000818 362C                   ADD         R2,R6
    0000081A 6662                   MOV.L       @R6,R6
    0000081C 480B                   JSR         @R8
    0000081E 64A3                   MOV         R10,R4
    00000820 7F04                   ADD         #4,R15
    00000822 7A01                   ADD         #1,R10
    00000824              L909:                             
    00000824 E304                   MOV         #4,R3
    00000826 3A33                   CMP/GE      R3,R10
    00000828 8BEC                   BF          L910
      ZDM_parame   239                            t = zdmroute.size<= 1 ? 2 : 5; //»Áπ˚Ωªµ„∏ˆ ˝–°”⁄µ»”⁄1 ƒ«√¥T=2 ∑Ò‘Úµ»”⁄5
    0000082A E101                   MOV         #1,R1
    0000082C 52C1                   MOV.L       @(4,R12),R2
    0000082E 3217                   CMP/GT      R1,R2
    00000830 8D1C                   BT/S        L911
      ZDM_parame   240                            if      (t>=2){
    00000832 E202                   MOV         #2,R2
    00000834 A01B                   BRA         L912
    00000836 E802                   MOV         #2,R8
    00000838              L1001:                            
    00000838 FF6C                   .DATA.W     H'FF6C
    0000083A 0084                   .DATA.W     H'0084
    0000083C 0088                   .DATA.W     H'0088
    0000083E 0000                   .DATA.W     0
    00000840 <00000000>             .DATA.L     _zdmroute
    00000844 <00000000>             .DATA.L     L629
    00000848 <00000000>             .DATA.L     __quick_evn_mvn
    0000084C <00000000>             .DATA.L     L635
    00000850 <00000000>             .DATA.L     __quick_odd_mvn
    00000854 <00000000>             .DATA.L     L638
    00000858 <00000000>             .DATA.L     L654
    0000085C <00000000>             .DATA.L     __slow_mvn
    00000860 <00000000>             .DATA.L     _DispStr
    00000864 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000868 <00000000>             .DATA.L     _PrintTables
    0000086C              L911:                             
    0000086C E805                   MOV         #5,R8
    0000086E              L912:                             
    0000086E 3823                   CMP/GE      R2,R8
    00000870 8B0D                   BF          L913
      ZDM_parame   241                            SetMyFont(&stHz8x8,&stAsc6x12);
    00000872 D579                   MOV.L       L1002,R5   ; _stAsc6x12
    00000874 D479                   MOV.L       L1002+4,R4 ; _stHz8x8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000876 D17A                   MOV.L       L1002+8,R1 ; _SetMyFont
    00000878 410B                   JSR         @R1
    0000087A 0009                   NOP
      ZDM_parame   242                            DispStr(2,56,"\xCE\xC4\xBC\xFE");
    0000087C D679                   MOV.L       L1002+12,R6; L659
    0000087E E538                   MOV         #56,R5
    00000880 490B                   JSR         @R9
    00000882 E402                   MOV         #2,R4
      ZDM_parame   243                        DispStr(23,56,"ÃÌº”");
    00000884 DA78                   MOV.L       L1002+16,R10; L660
    00000886 E538                   MOV         #56,R5
    00000888 66A3                   MOV         R10,R6
    0000088A 490B                   JSR         @R9
    0000088C E417                   MOV         #23,R4
    0000088E              L913:                             
      ZDM_parame   244                            }
      ZDM_parame   245                            if      (t>2){
    0000088E E302                   MOV         #2,R3
    00000890 3837                   CMP/GT      R3,R8
    00000892 8B11                   BF          L914
      ZDM_parame   246                            SetMyFont(&stHz8x8,&stAsc6x12);
    00000894 D570                   MOV.L       L1002,R5   ; _stAsc6x12
    00000896 D471                   MOV.L       L1002+4,R4 ; _stHz8x8
    00000898 D171                   MOV.L       L1002+8,R1 ; _SetMyFont
    0000089A 410B                   JSR         @R1
    0000089C 0009                   NOP
      ZDM_parame   247                            DispStr(45,56,"≤Â»Î ");
    0000089E E538                   MOV         #56,R5
    000008A0 D672                   MOV.L       L1002+20,R6; L662
    000008A2 490B                   JSR         @R9
    000008A4 E42D                   MOV         #45,R4
      ZDM_parame   248                        DispStr(65,56,"…æ–– ");
    000008A6 E538                   MOV         #56,R5
    000008A8 D671                   MOV.L       L1002+24,R6; L663
    000008AA 490B                   JSR         @R9
    000008AC E441                   MOV         #65,R4
      ZDM_parame   249                            DispStr(86,56,"«Âø’ ");
    000008AE E538                   MOV         #56,R5
    000008B0 DA70                   MOV.L       L1002+28,R10; L664
    000008B2 66A3                   MOV         R10,R6
    000008B4 490B                   JSR         @R9
    000008B6 E456                   MOV         #86,R4
    000008B8              L914:                             
      ZDM_parame   250                            }
      ZDM_parame   251                            for (i=0;i< t;++i) // i<2 ªÚ  i<5
    000008B8 4815                   CMP/PL      R8
    000008BA 8F0D                   BF/S        L915
    000008BC 6AD3                   MOV         R13,R10
    000008BE              L916:                             
      ZDM_parame   252                            PrintIcon(i,icons[i],0);  //¥Ú”°œ¬±Í 
    000008BE E600                   MOV         #0,R6
    000008C0 D26D                   MOV.L       L1002+32,R2; _PrintIcon
    000008C2 65A3                   MOV         R10,R5
    000008C4 4508                   SHLL2       R5
    000008C6 63F3                   MOV         R15,R3
    000008C8 7370                   ADD         #112,R3
    000008CA 353C                   ADD         R3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008CC 6552                   MOV.L       @R5,R5
    000008CE 420B                   JSR         @R2
    000008D0 64A3                   MOV         R10,R4
    000008D2 7A01                   ADD         #1,R10
    000008D4 3A83                   CMP/GE      R8,R10
    000008D6 8BF2                   BF          L916
    000008D8              L915:                             
      ZDM_parame   253                            PrintIcon(5,"?",0);  //πÃ∂®¥Ú”°œ¬±Í
    000008D8 DA68                   MOV.L       L1002+36,R10; L665
    000008DA E600                   MOV         #0,R6
    000008DC D266                   MOV.L       L1002+32,R2; _PrintIcon
    000008DE 65A3                   MOV         R10,R5
    000008E0 420B                   JSR         @R2
    000008E2 E405                   MOV         #5,R4
////
    000008E4 E801                   MOV         #1,R8
    000008E6              L908:                             
    000008E6 D55C                   MOV.L       L1002,R5   ; _stAsc6x12
    000008E8 D465                   MOV.L       L1002+40,R4; _stHz12x12
    000008EA D35D                   MOV.L       L1002+8,R3 ; _SetMyFont
    000008EC 430B                   JSR         @R3
    000008EE 0009                   NOP
    000008F0 E22C                   MOV         #44,R2
    000008F2 63B3                   MOV         R11,R3
    000008F4 0E27                   MUL.L       R2,R14
    000008F6 6083                   MOV         R8,R0
    000008F8 021A                   STS         MACL,R2
    000008FA 73FF                   ADD         #-1,R3
    000008FC 1F23                   MOV.L       R2,@(12,R15)
    000008FE 4308                   SHLL2       R3
    00000900 4300                   SHLL        R3
    00000902 8801                   CMP/EQ      #1,R0
    00000904 1F36                   MOV.L       R3,@(24,R15)
    00000906 8901                   BT          L1003
    00000908 A0D5                   BRA         L917
    0000090A 0009                   NOP
    0000090C              L1003:                            
    0000090C 5AF1                   MOV.L       @(4,R15),R10
    0000090E 60B3                   MOV         R11,R0
    00000910 61F2                   MOV.L       @R15,R1
    00000912 3018                   SUB         R1,R0
    00000914 1F04                   MOV.L       R0,@(16,R15)
    00000916 2118                   TST         R1,R1
    00000918 53F1                   MOV.L       @(4,R15),R3
    0000091A 0029                   MOVT        R0
    0000091C 7304                   ADD         #4,R3
    0000091E 1F38                   MOV.L       R3,@(32,R15)
    00000920 1F0A                   MOV.L       R0,@(40,R15)
    00000922 50F4                   MOV.L       @(16,R15),R0
    00000924 2008                   TST         R0,R0
    00000926 0029                   MOVT        R0
    00000928 A071                   BRA         L920
    0000092A 1F09                   MOV.L       R0,@(36,R15)
    0000092C              L921:                             
    0000092C 62C2                   MOV.L       @R12,R2
    0000092E E32C                   MOV         #44,R3
    00000930 0A37                   MUL.L       R3,R10
    00000932 031A                   STS         MACL,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000934 332C                   ADD         R2,R3
    00000936 6133                   MOV         R3,R1
    00000938 710C                   ADD         #12,R1
    0000093A 1F1B                   MOV.L       R1,@(44,R15)
    0000093C 53FA                   MOV.L       @(40,R15),R3
    0000093E 2338                   TST         R3,R3
    00000940 8901                   BT          L922
    00000942 A001                   BRA         L923
    00000944 E801                   MOV         #1,R8
    00000946              L922:                             
    00000946 E800                   MOV         #0,R8
    00000948              L923:                             
    00000948 2AA8                   TST         R10,R10
    0000094A 0029                   MOVT        R0
    0000094C 1F0C                   MOV.L       R0,@(48,R15)
    0000094E 60A3                   MOV         R10,R0
    00000950 53F1                   MOV.L       @(4,R15),R3
    00000952 3038                   SUB         R3,R0
    00000954 7001                   ADD         #1,R0
    00000956 E304                   MOV         #4,R3
    00000958 3833                   CMP/GE      R3,R8
    0000095A 8D38                   BT/S        L925
    0000095C 81FA                   MOV.W       R0,@(20,R15)
    0000095E              L926:                             
    0000095E 51FC                   MOV.L       @(48,R15),R1
    00000960 2118                   TST         R1,R1
    00000962 8915                   BT          L927
    00000964 62F2                   MOV.L       @R15,R2
    00000966 E302                   MOV         #2,R3
    00000968 328C                   ADD         R8,R2
    0000096A 3237                   CMP/GT      R3,R2
    0000096C 8B10                   BF          L927
      ZDM_parame   263                                               PrintTables3(j,i+1-top,"",y==i && x-left==j,0);///////////////
    0000096E E100                   MOV         #0,R1
    00000970 3EA0                   CMP/EQ      R10,R14
    00000972 8F05                   BF/S        L928
    00000974 2F16                   MOV.L       R1,@-R15
    00000976 53F5                   MOV.L       @(20,R15),R3
    00000978 3380                   CMP/EQ      R8,R3
    0000097A 8B01                   BF          L928
    0000097C A001                   BRA         L929
    0000097E E701                   MOV         #1,R7
    00000980              L928:                             
    00000980 E700                   MOV         #0,R7
    00000982              L929:                             
    00000982 D640                   MOV.L       L1002+44,R6; L636
    00000984 85FC                   MOV.W       @(24,R15),R0
    00000986 6503                   MOV         R0,R5
    00000988 BB3A                   BSR         _PrintTables3
    0000098A 6483                   MOV         R8,R4
    0000098C A01B                   BRA         L930
    0000098E 7F04                   ADD         #4,R15
    00000990              L927:                             
      ZDM_parame   264                                            else/////////
      ZDM_parame   265                                                    PrintTableFormats3(j,i+1-top,y==i && x-left==j,0,"%lf",sd[
                         +j+left-1]);
    00000990 63F2                   MOV.L       @R15,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000992 338C                   ADD         R8,R3
    00000994 52FB                   MOV.L       @(44,R15),R2
    00000996 73FF                   ADD         #-1,R3
    00000998 D03B                   MOV.L       L1002+48,R0; L670
    0000099A 4308                   SHLL2       R3
    0000099C 4300                   SHLL        R3
    0000099E 332C                   ADD         R2,R3
    000009A0 5131                   MOV.L       @(4,R3),R1
    000009A2 3EA0                   CMP/EQ      R10,R14
    000009A4 2F16                   MOV.L       R1,@-R15
    000009A6 6132                   MOV.L       @R3,R1
    000009A8 2F16                   MOV.L       R1,@-R15
    000009AA 2F06                   MOV.L       R0,@-R15
    000009AC 8F05                   BF/S        L931
    000009AE E700                   MOV         #0,R7
    000009B0 53F7                   MOV.L       @(28,R15),R3
    000009B2 3380                   CMP/EQ      R8,R3
    000009B4 8B01                   BF          L931
    000009B6 A001                   BRA         L932
    000009B8 E601                   MOV         #1,R6
    000009BA              L931:                             
    000009BA E600                   MOV         #0,R6
    000009BC              L932:                             
    000009BC E020                   MOV         #32,R0
    000009BE 05FD                   MOV.W       @(R0,R15),R5
    000009C0 BB8C                   BSR         _PrintTableFormats3
    000009C2 6483                   MOV         R8,R4
    000009C4 7F0C                   ADD         #12,R15
    000009C6              L930:                             
    000009C6 7801                   ADD         #1,R8
    000009C8 E204                   MOV         #4,R2
    000009CA 3823                   CMP/GE      R2,R8
    000009CC 8BC7                   BF          L926
    000009CE              L925:                             
      ZDM_parame   266                                    }
      ZDM_parame   267                                    if (left==0)
    000009CE 61F2                   MOV.L       @R15,R1
    000009D0 2118                   TST         R1,R1
    000009D2 8B15                   BF          L933
      ZDM_parame   268                                            PrintTableFormats3(0,i+1-top,y==i && x-left==0,0,"%s",zdmroute.set
                         +[i].name);
    000009D4 D82D                   MOV.L       L1002+52,R8; L671
    000009D6 E32C                   MOV         #44,R3
    000009D8 62C2                   MOV.L       @R12,R2
    000009DA 3EA0                   CMP/EQ      R10,R14
    000009DC 0A37                   MUL.L       R3,R10
    000009DE 031A                   STS         MACL,R3
    000009E0 332C                   ADD         R2,R3
    000009E2 2F36                   MOV.L       R3,@-R15
    000009E4 2F86                   MOV.L       R8,@-R15
    000009E6 8F05                   BF/S        L934
    000009E8 E700                   MOV         #0,R7
    000009EA 53FB                   MOV.L       @(44,R15),R3
    000009EC 2338                   TST         R3,R3
    000009EE 8901                   BT          L934
    000009F0 A001                   BRA         L935
    000009F2 E601                   MOV         #1,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009F4              L934:                             
    000009F4 E600                   MOV         #0,R6
    000009F6              L935:                             
    000009F6 85FE                   MOV.W       @(28,R15),R0
    000009F8 6503                   MOV         R0,R5
    000009FA BB6F                   BSR         _PrintTableFormats3
    000009FC E400                   MOV         #0,R4
    000009FE 7F08                   ADD         #8,R15
    00000A00              L933:                             
      ZDM_parame   269                                    PrintTableIndexs3(i-top+1,i);
    00000A00 53F1                   MOV.L       @(4,R15),R3
    00000A02 64A3                   MOV         R10,R4
    00000A04 65A3                   MOV         R10,R5
    00000A06 3438                   SUB         R3,R4
    00000A08 BBAA                   BSR         _PrintTableIndexs3
    00000A0A 7401                   ADD         #1,R4
    00000A0C 7A01                   ADD         #1,R10
    00000A0E              L920:                             
    00000A0E 53F8                   MOV.L       @(32,R15),R3
    00000A10 3A33                   CMP/GE      R3,R10
    00000A12 8903                   BT          L936
    00000A14 D21E                   MOV.L       L1002+56,R2; H'00000004+_zdmroute
    00000A16 6122                   MOV.L       @R2,R1
    00000A18 3A13                   CMP/GE      R1,R10
    00000A1A 8B87                   BF          L921
    00000A1C              L936:                             
    00000A1C 6AB3                   MOV         R11,R10
    00000A1E 4A08                   SHLL2       R10
    00000A20 63F3                   MOV         R15,R3
    00000A22 7360                   ADD         #96,R3
    00000A24 4B15                   CMP/PL      R11
    00000A26 8F39                   BF/S        L937
    00000A28 3A3C                   ADD         R3,R10
      ZDM_parame   270                            }
      ZDM_parame   271                            if(x>0){
      ZDM_parame   272                                    //if (!(y==0 && x>2)){
      ZDM_parame   273                                            sd =  & (zdmroute.set[y].zdm_bbzh); //»°µÿ÷∑µƒ÷µ
      ZDM_parame   274                                            DispStr(0,42,ch_text[x]);
    00000A2A E52A                   MOV         #42,R5
    00000A2C 52F3                   MOV.L       @(12,R15),R2
    00000A2E 68C2                   MOV.L       @R12,R8
    00000A30 66A2                   MOV.L       @R10,R6
    00000A32 382C                   ADD         R2,R8
    00000A34 780C                   ADD         #12,R8
    00000A36 490B                   JSR         @R9
    00000A38 E400                   MOV         #0,R4
      ZDM_parame   275                                            PrintFloat(sd[x-1],49,42,0,setup_data.point); //¥Ú”° 
    00000A3A E600                   MOV         #0,R6
    00000A3C DA15                   MOV.L       L1002+60,R10; _PrintFloat
    00000A3E E52A                   MOV         #42,R5
    00000A40 53F6                   MOV.L       @(24,R15),R3
    00000A42 383C                   ADD         R3,R8
    00000A44 5281                   MOV.L       @(4,R8),R2
    00000A46 2F26                   MOV.L       R2,@-R15
    00000A48 6282                   MOV.L       @R8,R2
    00000A4A 2F26                   MOV.L       R2,@-R15
    00000A4C D112                   MOV.L       L1002+64,R1; _setup_data




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A4E 6712                   MOV.L       @R1,R7
    00000A50 4A0B                   JSR         @R10
    00000A52 E431                   MOV         #49,R4
    00000A54 A02E                   BRA         L938
    00000A56 7F08                   ADD         #8,R15
    00000A58              L1002:                            
    00000A58 <00000000>             .DATA.L     _stAsc6x12
    00000A5C <00000000>             .DATA.L     _stHz8x8
    00000A60 <00000000>             .DATA.L     _SetMyFont
    00000A64 <00000000>             .DATA.L     L659
    00000A68 <00000000>             .DATA.L     L660
    00000A6C <00000000>             .DATA.L     L662
    00000A70 <00000000>             .DATA.L     L663
    00000A74 <00000000>             .DATA.L     L664
    00000A78 <00000000>             .DATA.L     _PrintIcon
    00000A7C <00000000>             .DATA.L     L665
    00000A80 <00000000>             .DATA.L     _stHz12x12
    00000A84 <00000000>             .DATA.L     L636
    00000A88 <00000000>             .DATA.L     L670
    00000A8C <00000000>             .DATA.L     L671
    00000A90 <00000004>             .DATA.L     H'00000004+_zdmroute
    00000A94 <00000000>             .DATA.L     _PrintFloat
    00000A98 <00000000>             .DATA.L     _setup_data
    00000A9C              L937:                             
      ZDM_parame   276                                    //}
      ZDM_parame   277                            }else{
      ZDM_parame   278                                    DispStr(0,42,ch_text[x]);
    00000A9C 66A2                   MOV.L       @R10,R6
    00000A9E E52A                   MOV         #42,R5
    00000AA0 490B                   JSR         @R9
    00000AA2 E400                   MOV         #0,R4
      ZDM_parame   279                                    PrintXY(51,44,zdmroute.set[y].name,0);
    00000AA4 DA36                   MOV.L       L1004+22,R10; _PrintXY
    00000AA6 E700                   MOV         #0,R7
    00000AA8 53F3                   MOV.L       @(12,R15),R3
    00000AAA E52C                   MOV         #44,R5
    00000AAC 66C2                   MOV.L       @R12,R6
    00000AAE 363C                   ADD         R3,R6
    00000AB0 4A0B                   JSR         @R10
    00000AB2 E433                   MOV         #51,R4
    00000AB4              L938:                             
      ZDM_parame   280                            }
      ZDM_parame   281                            refresh = 0;
    00000AB4 68D3                   MOV         R13,R8
    00000AB6              L917:                             
      ZDM_parame   282                    }
      ZDM_parame   283                    GetKey(&key);
    00000AB6 DA33                   MOV.L       L1004+26,R10; _GetKey
    00000AB8 D433                   MOV.L       L1004+30,R4; _key
    00000ABA 4A0B                   JSR         @R10
    00000ABC 0009                   NOP
      ZDM_parame   284                    switch (key){
    00000ABE D332                   MOV.L       L1004+30,R3; _key
    00000AC0 9153                   MOV.W       L1004,R1   ; H'7542
    00000AC2 6032                   MOV.L       @R3,R0
    00000AC4 3010                   CMP/EQ      R1,R0
    00000AC6 8923                   BT          L783




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AC8 9150                   MOV.W       L1004+2,R1 ; H'7547
    00000ACA 3010                   CMP/EQ      R1,R0
    00000ACC 8922                   BT          L784
    00000ACE 914E                   MOV.W       L1004+4,R1 ; H'7544
    00000AD0 3010                   CMP/EQ      R1,R0
    00000AD2 8921                   BT          L785
    00000AD4 914C                   MOV.W       L1004+6,R1 ; H'7545
    00000AD6 3010                   CMP/EQ      R1,R0
    00000AD8 8920                   BT          L786
    00000ADA 914A                   MOV.W       L1004+8,R1 ; H'7532
    00000ADC 3010                   CMP/EQ      R1,R0
    00000ADE 891F                   BT          L787
    00000AE0 9148                   MOV.W       L1004+10,R1; H'7539
    00000AE2 3010                   CMP/EQ      R1,R0
    00000AE4 896F                   BT          L789
    00000AE6 9146                   MOV.W       L1004+12,R1; H'753A
    00000AE8 3010                   CMP/EQ      R1,R0
    00000AEA 8970                   BT          L790
    00000AEC 9144                   MOV.W       L1004+14,R1; H'753B
    00000AEE 3010                   CMP/EQ      R1,R0
    00000AF0 8974                   BT          L791
    00000AF2 9142                   MOV.W       L1004+16,R1; H'753C
    00000AF4 3010                   CMP/EQ      R1,R0
    00000AF6 8977                   BT          L792
    00000AF8 9140                   MOV.W       L1004+18,R1; H'753D
    00000AFA 3010                   CMP/EQ      R1,R0
    00000AFC 8B01                   BF          L1005
    00000AFE A093                   BRA         L795
    00000B00 0009                   NOP
    00000B02              L1005:                            
    00000B02 913C                   MOV.W       L1004+20,R1; H'753E
    00000B04 3010                   CMP/EQ      R1,R0
    00000B06 8B01                   BF          L1006
    00000B08 A0D0                   BRA         L797
    00000B0A 0009                   NOP
    00000B0C              L1006:                            
    00000B0C A114                   BRA         L801
    00000B0E 0009                   NOP
    00000B10              L783:                            ; case label 
    00000B10 A191                   BRA         L986
    00000B12 0009                   NOP
    00000B14              L784:                            ; case label 
    00000B14 A191                   BRA         L987
    00000B16 0009                   NOP
    00000B18              L785:                            ; case label 
    00000B18 A192                   BRA         L721
      ZDM_parame   285                    case KEY_CTRL_UP:
      ZDM_parame   286                            y--;refresh = REDRAW_ALL;break;
      ZDM_parame   287                    case KEY_CTRL_DOWN:
      ZDM_parame   288                            y++;refresh = REDRAW_ALL;break;
      ZDM_parame   289                    case KEY_CTRL_LEFT:
      ZDM_parame   290                            x--;refresh = REDRAW_ALL;break;
    00000B1A 7BFF                   ADD         #-1,R11
    00000B1C              L786:                            ; case label 
    00000B1C A190                   BRA         L721
      ZDM_parame   291                    case KEY_CTRL_RIGHT:
      ZDM_parame   292                            x++;refresh = REDRAW_ALL;break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B1E 7B01                   ADD         #1,R11
    00000B20              L787:                            ; case label 
      ZDM_parame   293                    case KEY_CTRL_EXIT:
      ZDM_parame   294                        PopUpWin(5);
    00000B20 D11A                   MOV.L       L1004+34,R1; _PopUpWin
    00000B22 410B                   JSR         @R1
    00000B24 E405                   MOV         #5,R4
      ZDM_parame   295                            DispStr(48,12,"±£¥Ê?"); 
    00000B26 E50C                   MOV         #12,R5
    00000B28 D619                   MOV.L       L1004+38,R6; L675
    00000B2A 490B                   JSR         @R9
    00000B2C E430                   MOV         #48,R4
      ZDM_parame   296                            locate(7,5);Print("Yes : [F1]");
    00000B2E E505                   MOV         #5,R5
    00000B30 D318                   MOV.L       L1004+42,R3; _locate
    00000B32 430B                   JSR         @R3
    00000B34 E407                   MOV         #7,R4
    00000B36 D418                   MOV.L       L1004+46,R4; L569
    00000B38 D218                   MOV.L       L1004+50,R2; _Print
    00000B3A 420B                   JSR         @R2
    00000B3C 0009                   NOP
      ZDM_parame   297                            locate(7,6);Print("No  : [F6]");
    00000B3E E506                   MOV         #6,R5
    00000B40 D314                   MOV.L       L1004+42,R3; _locate
    00000B42 430B                   JSR         @R3
    00000B44 E407                   MOV         #7,R4
    00000B46 DE16                   MOV.L       L1004+54,R14; L570
    00000B48 D214                   MOV.L       L1004+50,R2; _Print
    00000B4A 420B                   JSR         @R2
    00000B4C 64E3                   MOV         R14,R4
      ZDM_parame   298                            do{
      ZDM_parame   299                                    GetKey(&key);
    00000B4E D40E                   MOV.L       L1004+30,R4; _key
    00000B50 4A0B                   JSR         @R10
    00000B52 0009                   NOP
      ZDM_parame   300                                    if (key==KEY_CTRL_F6 || key==KEY_CTRL_EXIT){enter =0 ;break;}
    00000B54 9413                   MOV.W       L1004+20,R4; H'753E
    00000B56 D20C                   MOV.L       L1004+30,R2; _key
    00000B58 6322                   MOV.L       @R2,R3
    00000B5A 3340                   CMP/EQ      R4,R3
    00000B5C 8903                   BT          L942
    00000B5E 9008                   MOV.W       L1004+8,R0 ; H'7532
    00000B60 6122                   MOV.L       @R2,R1
    00000B62 3100                   CMP/EQ      R0,R1
    00000B64 8B1E                   BF          L941
    00000B66              L942:                             
    00000B66 A01E                   BRA         L943
    00000B68 64D3                   MOV         R13,R4
    00000B6A              L1004:                            
    00000B6A 7542                   .DATA.W     H'7542
    00000B6C 7547                   .DATA.W     H'7547
    00000B6E 7544                   .DATA.W     H'7544
    00000B70 7545                   .DATA.W     H'7545
    00000B72 7532                   .DATA.W     H'7532
    00000B74 7539                   .DATA.W     H'7539
    00000B76 753A                   .DATA.W     H'753A
    00000B78 753B                   .DATA.W     H'753B




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B7A 753C                   .DATA.W     H'753C
    00000B7C 753D                   .DATA.W     H'753D
    00000B7E 753E                   .DATA.W     H'753E
    00000B80 <00000000>             .DATA.L     _PrintXY
    00000B84 <00000000>             .DATA.L     _GetKey
    00000B88 <00000000>             .DATA.L     _key
    00000B8C <00000000>             .DATA.L     _PopUpWin
    00000B90 <00000000>             .DATA.L     L675
    00000B94 <00000000>             .DATA.L     _locate
    00000B98 <00000000>             .DATA.L     L569
    00000B9C <00000000>             .DATA.L     _Print
    00000BA0 <00000000>             .DATA.L     L570
    00000BA4              L941:                             
      ZDM_parame   301                                    else if (KEY_CTRL_F1) {enter = 1;break;}
    00000BA4 E401                   MOV         #1,R4
    00000BA6              L943:                             
      ZDM_parame   302                            }while(1);
      ZDM_parame   303                            if(enter)
    00000BA6 2448                   TST         R4,R4
    00000BA8 890B                   BT          L946
      ZDM_parame   304                            {
      ZDM_parame   305                                    if(setup_data.zdmroute_name[0]==0)
    00000BAA D232                   MOV.L       L1007+4,R2 ; H'00000011+_setup_data
    00000BAC 6320                   MOV.B       @R2,R3
    00000BAE 2338                   TST         R3,R3
    00000BB0 8B03                   BF          L947
      ZDM_parame   306                                    {
      ZDM_parame   307                                            WheterSavaAS3();
    00000BB2 BB37                   BSR         _WheterSavaAS3
    00000BB4 0009                   NOP
    00000BB6 A004                   BRA         L946
    00000BB8 0009                   NOP
    00000BBA              L947:                             
      ZDM_parame   308                                    }
      ZDM_parame   309                                    else
      ZDM_parame   310                                    {
      ZDM_parame   311                                            SaveSRDFile3(setup_data.zdmroute_name);
    00000BBA DE2F                   MOV.L       L1007+8,R14; _SaveSRDFile3
    00000BBC D42D                   MOV.L       L1007+4,R4 ; H'00000011+_setup_data
    00000BBE 4E0B                   JSR         @R14
    00000BC0 0009                   NOP
    00000BC2              L946:                             
      ZDM_parame   312                                    }
      ZDM_parame   313                            }
      ZDM_parame   314                            return 0 ;
    00000BC2 A168                   BRA         L949
    00000BC4 E000                   MOV         #0,R0
    00000BC6              L789:                            ; case label 
      ZDM_parame   315                    case KEY_CTRL_F1:                                       /* Set */
      ZDM_parame   316                            refresh = REDRAW_ALL;
      ZDM_parame   317                            Selectfile3();
    00000BC6 BBCB                   BSR         _Selectfile3
    00000BC8 E802                   MOV         #2,R8
      ZDM_parame   318                            break;
    00000BCA A13A                   BRA         L939
    00000BCC 0009                   NOP
    00000BCE              L790:                            ; case label 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      ZDM_parame   319                    case KEY_CTRL_F2:                                       /* Add */
      ZDM_parame   320                            zdmroute_push_back (&zdmroute);
    00000BCE D42B                   MOV.L       L1007+12,R4; _zdmroute
    00000BD0 D12B                   MOV.L       L1007+16,R1; _zdmroute_push_back
    00000BD2 410B                   JSR         @R1
    00000BD4 0009                   NOP
      ZDM_parame   321                            y = zdmroute.size - 1;
    00000BD6 5EC1                   MOV.L       @(4,R12),R14
    00000BD8 A12D                   BRA         L986
    00000BDA 0009                   NOP
    00000BDC              L791:                            ; case label 
      ZDM_parame   322                            refresh = REDRAW_ALL;
      ZDM_parame   323                            break;
      ZDM_parame   324                    case KEY_CTRL_F3:                                       /* ins */
      ZDM_parame   325                            //if (y==0) break;
      ZDM_parame   326                            zdmroute_insert (&zdmroute,y);
    00000BDC DA29                   MOV.L       L1007+20,R10; _zdmroute_insert
    00000BDE D427                   MOV.L       L1007+12,R4; _zdmroute
    00000BE0 4A0B                   JSR         @R10
    00000BE2 65E3                   MOV         R14,R5
    00000BE4 A129                   BRA         L987
    00000BE6 0009                   NOP
    00000BE8              L792:                            ; case label 
      ZDM_parame   327                            y++;
      ZDM_parame   328                            refresh = REDRAW_ALL;
      ZDM_parame   329                            break;
      ZDM_parame   330                    case KEY_CTRL_F4:                                       /* Del a point */
      ZDM_parame   331                            //if (y==0) break;
      ZDM_parame   332                            refresh = REDRAW_ALL;
      ZDM_parame   333                            PopUpWin(4);DispStr(25,10,"…æ ≥˝ “ª ––?");
    00000BE8 D227                   MOV.L       L1007+24,R2; _PopUpWin
    00000BEA E802                   MOV         #2,R8
    00000BEC 420B                   JSR         @R2
    00000BEE E404                   MOV         #4,R4
    00000BF0 D626                   MOV.L       L1007+28,R6; L682
    00000BF2 E50A                   MOV         #10,R5
    00000BF4 490B                   JSR         @R9
    00000BF6 E419                   MOV         #25,R4
      ZDM_parame   334                            locate(3,5);Print("[F1]Yes   [F6]No");
    00000BF8 D325                   MOV.L       L1007+32,R3; _locate
    00000BFA E505                   MOV         #5,R5
    00000BFC 430B                   JSR         @R3
    00000BFE E403                   MOV         #3,R4
    00000C00 D424                   MOV.L       L1007+36,R4; L683
    00000C02 D225                   MOV.L       L1007+40,R2; _Print
    00000C04 420B                   JSR         @R2
    00000C06 0009                   NOP
      ZDM_parame   335                            GetKey(&key);
    00000C08 D424                   MOV.L       L1007+44,R4; _key
    00000C0A 4A0B                   JSR         @R10
    00000C0C 0009                   NOP
      ZDM_parame   336                            if (key==KEY_CTRL_F1){
    00000C0E 932F                   MOV.W       L1007,R3   ; H'7539
    00000C10 D122                   MOV.L       L1007+44,R1; _key
    00000C12 6212                   MOV.L       @R1,R2
    00000C14 3230                   CMP/EQ      R3,R2
    00000C16 8901                   BT          L1008




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C18 A113                   BRA         L939
    00000C1A 0009                   NOP
    00000C1C              L1008:                            
      ZDM_parame   337                                    zdmroute_del(&zdmroute,y);y--;
    00000C1C DA20                   MOV.L       L1007+48,R10; _zdmroute_del
    00000C1E D417                   MOV.L       L1007+12,R4; _zdmroute
    00000C20 4A0B                   JSR         @R10
    00000C22 65E3                   MOV         R14,R5
      ZDM_parame   338                            }
      ZDM_parame   339                            break;
    00000C24 A10D                   BRA         L939
    00000C26 7EFF                   ADD         #-1,R14
    00000C28              L795:                            ; case label 
      ZDM_parame   340                            
      ZDM_parame   341                     case KEY_CTRL_F5:                                      /* Del All */
      ZDM_parame   342                            refresh = REDRAW_ALL;
      ZDM_parame   343                            PopUpWin(4);DispStr(25,10,"«Â ø’ À˘ ”– ?");
    00000C28 D217                   MOV.L       L1007+24,R2; _PopUpWin
    00000C2A E802                   MOV         #2,R8
    00000C2C 420B                   JSR         @R2
    00000C2E E404                   MOV         #4,R4
    00000C30 D61C                   MOV.L       L1007+52,R6; L685
    00000C32 E50A                   MOV         #10,R5
    00000C34 490B                   JSR         @R9
    00000C36 E419                   MOV         #25,R4
      ZDM_parame   344                            locate(3,5);Print("[F1]Yes   [F6]No");
    00000C38 D315                   MOV.L       L1007+32,R3; _locate
    00000C3A E505                   MOV         #5,R5
    00000C3C 430B                   JSR         @R3
    00000C3E E403                   MOV         #3,R4
    00000C40 D414                   MOV.L       L1007+36,R4; L683
    00000C42 D215                   MOV.L       L1007+40,R2; _Print
    00000C44 420B                   JSR         @R2
    00000C46 0009                   NOP
      ZDM_parame   345                            GetKey(&key);
    00000C48 D414                   MOV.L       L1007+44,R4; _key
    00000C4A 4A0B                   JSR         @R10
    00000C4C 0009                   NOP
      ZDM_parame   346                            if (key==KEY_CTRL_F1){
    00000C4E 930F                   MOV.W       L1007,R3   ; H'7539
    00000C50 D112                   MOV.L       L1007+44,R1; _key
    00000C52 6212                   MOV.L       @R1,R2
    00000C54 3230                   CMP/EQ      R3,R2
    00000C56 8901                   BT          L1009
    00000C58 A0F3                   BRA         L939
    00000C5A 0009                   NOP
    00000C5C              L1009:                            
      ZDM_parame   347                                    zdmroute_initial(&zdmroute);
    00000C5C DA12                   MOV.L       L1007+56,R10; _zdmroute_initial
    00000C5E D407                   MOV.L       L1007+12,R4; _zdmroute
    00000C60 4A0B                   JSR         @R10
    00000C62 0009                   NOP
      ZDM_parame   348                        zdmroute_push_back(&zdmroute);
    00000C64 D405                   MOV.L       L1007+12,R4; _zdmroute
    00000C66 D306                   MOV.L       L1007+16,R3; _zdmroute_push_back
    00000C68 430B                   JSR         @R3
    00000C6A 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      ZDM_parame   349                            }
      ZDM_parame   350                            break;
    00000C6C A0E9                   BRA         L939
    00000C6E 0009                   NOP
    00000C70              L1007:                            
    00000C70 7539                   .DATA.W     H'7539
    00000C72 0000                   .DATA.W     0
    00000C74 <00000011>             .DATA.L     H'00000011+_setup_data
    00000C78 <00000000>             .DATA.L     _SaveSRDFile3
    00000C7C <00000000>             .DATA.L     _zdmroute
    00000C80 <00000000>             .DATA.L     _zdmroute_push_back
    00000C84 <00000000>             .DATA.L     _zdmroute_insert
    00000C88 <00000000>             .DATA.L     _PopUpWin
    00000C8C <00000000>             .DATA.L     L682
    00000C90 <00000000>             .DATA.L     _locate
    00000C94 <00000000>             .DATA.L     L683
    00000C98 <00000000>             .DATA.L     _Print
    00000C9C <00000000>             .DATA.L     _key
    00000CA0 <00000000>             .DATA.L     _zdmroute_del
    00000CA4 <00000000>             .DATA.L     L685
    00000CA8 <00000000>             .DATA.L     _zdmroute_initial
    00000CAC              L797:                            ; case label 
      ZDM_parame   351    
      ZDM_parame   352             case KEY_CTRL_F6:
      ZDM_parame   353                        refresh = REDRAW_ALL;
      ZDM_parame   354                            PopUpWin(4);
    00000CAC D140                   MOV.L       L1010+12,R1; _PopUpWin
    00000CAE E802                   MOV         #2,R8
    00000CB0 410B                   JSR         @R1
    00000CB2 E404                   MOV         #4,R4
      ZDM_parame   355                            PrintfXY (15,10,0,"%.3f",zdmroute.set[1].zdm_bbgc);  
    00000CB4 63C2                   MOV.L       @R12,R3
    00000CB6 E600                   MOV         #0,R6
    00000CB8 D13E                   MOV.L       L1010+16,R1; L687
    00000CBA E50A                   MOV         #10,R5
    00000CBC 732C                   ADD         #44,R3
    00000CBE 5236                   MOV.L       @(24,R3),R2
    00000CC0 2F26                   MOV.L       R2,@-R15
    00000CC2 5235                   MOV.L       @(20,R3),R2
    00000CC4 D33C                   MOV.L       L1010+20,R3; _PrintfXY
    00000CC6 2F26                   MOV.L       R2,@-R15
    00000CC8 2F16                   MOV.L       R1,@-R15
    00000CCA 430B                   JSR         @R3
    00000CCC E40F                   MOV         #15,R4
      ZDM_parame   356                            GetKey(&key);
    00000CCE D43B                   MOV.L       L1010+24,R4; _key
    00000CD0 4A0B                   JSR         @R10
    00000CD2 0009                   NOP
      ZDM_parame   357                            PrintfXY (15,20,0,"%.3f",zdmroute.set[2].zdm_bbgc);  
    00000CD4 62C2                   MOV.L       @R12,R2
    00000CD6 E600                   MOV         #0,R6
    00000CD8 D136                   MOV.L       L1010+16,R1; L687
    00000CDA E514                   MOV         #20,R5
    00000CDC 7258                   ADD         #88,R2
    00000CDE 5326                   MOV.L       @(24,R2),R3
    00000CE0 2F36                   MOV.L       R3,@-R15
    00000CE2 5325                   MOV.L       @(20,R2),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CE4 2F36                   MOV.L       R3,@-R15
    00000CE6 2F16                   MOV.L       R1,@-R15
    00000CE8 D333                   MOV.L       L1010+20,R3; _PrintfXY
    00000CEA 430B                   JSR         @R3
    00000CEC E40F                   MOV         #15,R4
      ZDM_parame   358                            GetKey(&key);
    00000CEE D433                   MOV.L       L1010+24,R4; _key
    00000CF0 4A0B                   JSR         @R10
    00000CF2 0009                   NOP
      ZDM_parame   359                            PrintfXY (15,30,0,"%.3f",zdmroute.set[3].zdm_bbgc);  
    00000CF4 9356                   MOV.W       L1010,R3   ; H'0084
    00000CF6 E600                   MOV         #0,R6
    00000CF8 62C2                   MOV.L       @R12,R2
    00000CFA E51E                   MOV         #30,R5
    00000CFC D02D                   MOV.L       L1010+16,R0; L687
    00000CFE 323C                   ADD         R3,R2
    00000D00 5126                   MOV.L       @(24,R2),R1
    00000D02 2F16                   MOV.L       R1,@-R15
    00000D04 5125                   MOV.L       @(20,R2),R1
    00000D06 2F16                   MOV.L       R1,@-R15
    00000D08 2F06                   MOV.L       R0,@-R15
    00000D0A D22B                   MOV.L       L1010+20,R2; _PrintfXY
    00000D0C 420B                   JSR         @R2
    00000D0E E40F                   MOV         #15,R4
      ZDM_parame   360                            GetKey(&key);
    00000D10 D42A                   MOV.L       L1010+24,R4; _key
    00000D12 4A0B                   JSR         @R10
    00000D14 7F24                   ADD         #36,R15
      ZDM_parame   361                            //PrintfXY (70,30,0,"%.3f",route.set[0].xy_zr);  
      ZDM_parame   362                            DispStr(15,10,"œﬂ¬∑√˚≥∆");
    00000D16 E50A                   MOV         #10,R5
    00000D18 D629                   MOV.L       L1010+28,R6; L688
    00000D1A 490B                   JSR         @R9
    00000D1C E40F                   MOV         #15,R4
      ZDM_parame   363                            if(setup_data.zdmroute_name[0]==0)
    00000D1E D329                   MOV.L       L1010+32,R3; H'00000011+_setup_data
    00000D20 6230                   MOV.B       @R3,R2
    00000D22 2228                   TST         R2,R2
    00000D24 8B03                   BF          L952
      ZDM_parame   364                            {
      ZDM_parame   365                             DispStr(25,27,"«Î±£¥Êœﬂ¬∑Œƒº˛ ");
    00000D26 E51B                   MOV         #27,R5
    00000D28 D627                   MOV.L       L1010+36,R6; L690
    00000D2A 490B                   JSR         @R9
    00000D2C E419                   MOV         #25,R4
    00000D2E              L952:                             
      ZDM_parame   366                            }
      ZDM_parame   367                             //else
      ZDM_parame   368                            //{
      ZDM_parame   369                 //DispStr(25,27,setup_data.zdmroute_name);
      ZDM_parame   370                            //}
      ZDM_parame   371                            GetKey(&key);
    00000D2E D423                   MOV.L       L1010+24,R4; _key
    00000D30 4A0B                   JSR         @R10
    00000D32 0009                   NOP
      ZDM_parame   372                    break;  
    00000D34 A085                   BRA         L939




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D36 0009                   NOP
    00000D38              L801:                            ; default label 
      ZDM_parame   373                    default:                                                        /*other things*/
      ZDM_parame   374                            if (x>0 && (c=GetPressNumChar(key))!=0){
    00000D38 D924                   MOV.L       L1010+40,R9; _InputString
    00000D3A 4B15                   CMP/PL      R11
    00000D3C 9A33                   MOV.W       L1010+2,R10; H'7532
    00000D3E 8B4B                   BF          L953
    00000D40 D123                   MOV.L       L1010+44,R1; _GetPressNumChar
    00000D42 410B                   JSR         @R1
    00000D44 6432                   MOV.L       @R3,R4
    00000D46 80F8                   MOV.B       R0,@(8,R15)
    00000D48 600E                   EXTS.B      R0,R0
    00000D4A 2008                   TST         R0,R0
    00000D4C 8944                   BT          L953
      ZDM_parame   375                                    char buffer[14];
      ZDM_parame   376                                    int r;
      ZDM_parame   377                                    //if (y==0 && x > 2)break;
      ZDM_parame   378                                    buffer[0] = c;
      ZDM_parame   379                                    buffer[1] = '\0';
      ZDM_parame   380                                    buffer[1] = '\0';
      ZDM_parame   381                                    r = InputString(49,42,buffer,0,12);
    00000D4E E700                   MOV         #0,R7
    00000D50 52FD                   MOV.L       @(52,R15),R2
    00000D52 E52A                   MOV         #42,R5
    00000D54 84F8                   MOV.B       @(8,R15),R0
    00000D56 2200                   MOV.B       R0,@R2
    00000D58 53F7                   MOV.L       @(28,R15),R3
    00000D5A 23D0                   MOV.B       R13,@R3
    00000D5C 53F7                   MOV.L       @(28,R15),R3
    00000D5E 23D0                   MOV.B       R13,@R3
    00000D60 E30C                   MOV         #12,R3
    00000D62 2F36                   MOV.L       R3,@-R15
    00000D64 66F3                   MOV         R15,R6
    00000D66 7644                   ADD         #68,R6
    00000D68 490B                   JSR         @R9
    00000D6A E431                   MOV         #49,R4
    00000D6C 6903                   MOV         R0,R9
      ZDM_parame   382                                    if (r!=KEY_CTRL_EXIT){
    00000D6E 39A0                   CMP/EQ      R10,R9
    00000D70 8D66                   BT/S        L721
    00000D72 7F04                   ADD         #4,R15
      ZDM_parame   383                                            double * sd;
      ZDM_parame   384                                            sd =  (double*)&(zdmroute.set[y].zdm_bbzh);
    00000D74 53F3                   MOV.L       @(12,R15),R3
      ZDM_parame   385                                            sd[x-1] = atof(buffer);
    00000D76 64F3                   MOV         R15,R4
    00000D78 6AC2                   MOV.L       @R12,R10
    00000D7A 7440                   ADD         #64,R4
    00000D7C D815                   MOV.L       L1010+48,R8; _atof
    00000D7E 3A3C                   ADD         R3,R10
    00000D80 53F6                   MOV.L       @(24,R15),R3
    00000D82 7A0C                   ADD         #12,R10
    00000D84 3A3C                   ADD         R3,R10
    00000D86 480B                   JSR         @R8
    00000D88 2FA6                   MOV.L       R10,@-R15
      ZDM_parame   386                                            switch(r){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D8A 6093                   MOV         R9,R0
    00000D8C 910C                   MOV.W       L1010+4,R1 ; H'7542
    00000D8E 3010                   CMP/EQ      R1,R0
    00000D90 8D51                   BT/S        L986
    00000D92 7F04                   ADD         #4,R15
    00000D94 9109                   MOV.W       L1010+6,R1 ; H'7547
    00000D96 3010                   CMP/EQ      R1,R0
    00000D98 894F                   BT          L987
    00000D9A 9107                   MOV.W       L1010+8,R1 ; H'7534
    00000D9C 3010                   CMP/EQ      R1,R0
    00000D9E 8B4F                   BF          L721
    00000DA0              L804:                            ; case label 
    00000DA0 A04E                   BRA         L721
      ZDM_parame   387                                            case KEY_CTRL_UP:       y--;break;
      ZDM_parame   388                                            case KEY_CTRL_DOWN:     y++;break;
      ZDM_parame   389                                            case KEY_CTRL_EXE:      x++;break;
    00000DA2 7B01                   ADD         #1,R11
    00000DA4              L1010:                            
    00000DA4 0084                   .DATA.W     H'0084
    00000DA6 7532                   .DATA.W     H'7532
    00000DA8 7542                   .DATA.W     H'7542
    00000DAA 7547                   .DATA.W     H'7547
    00000DAC 7534                   .DATA.W     H'7534
    00000DAE 0000                   .DATA.W     0
    00000DB0 <00000000>             .DATA.L     _PopUpWin
    00000DB4 <00000000>             .DATA.L     L687
    00000DB8 <00000000>             .DATA.L     _PrintfXY
    00000DBC <00000000>             .DATA.L     _key
    00000DC0 <00000000>             .DATA.L     L688
    00000DC4 <00000011>             .DATA.L     H'00000011+_setup_data
    00000DC8 <00000000>             .DATA.L     L690
    00000DCC <00000000>             .DATA.L     _InputString
    00000DD0 <00000000>             .DATA.L     _GetPressNumChar
    00000DD4 <00000000>             .DATA.L     _atof
    00000DD8              L953:                             
      ZDM_parame   390                                            }
      ZDM_parame   391                                    }
      ZDM_parame   392                                    refresh = REDRAW_ALL;
      ZDM_parame   393                            }
      ZDM_parame   394                            else if (x==0 && (c=GetPressChar(key))!=0){
    00000DD8 2BB8                   TST         R11,R11
    00000DDA 8B32                   BF          L939
    00000DDC D33A                   MOV.L       L1011+8,R3 ; _key
    00000DDE D23B                   MOV.L       L1011+12,R2; _GetPressChar
    00000DE0 420B                   JSR         @R2
    00000DE2 6432                   MOV.L       @R3,R4
    00000DE4 80F8                   MOV.B       R0,@(8,R15)
    00000DE6 600E                   EXTS.B      R0,R0
    00000DE8 2008                   TST         R0,R0
    00000DEA 892A                   BT          L939
      ZDM_parame   395                                    char buffer[14];
      ZDM_parame   396                                    int r;
      ZDM_parame   397                                    buffer[0] = c;
    00000DEC 52FE                   MOV.L       @(56,R15),R2
      ZDM_parame   398                                    buffer[1] = '\0';
      ZDM_parame   399                                    r = InputString(49,42,buffer,1,12);
    00000DEE E701                   MOV         #1,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DF0 84F8                   MOV.B       @(8,R15),R0
    00000DF2 E52A                   MOV         #42,R5
    00000DF4 2200                   MOV.B       R0,@R2
    00000DF6 53FF                   MOV.L       @(60,R15),R3
    00000DF8 23D0                   MOV.B       R13,@R3
    00000DFA E30C                   MOV         #12,R3
    00000DFC 2F36                   MOV.L       R3,@-R15
    00000DFE 66F3                   MOV         R15,R6
    00000E00 7644                   ADD         #68,R6
    00000E02 490B                   JSR         @R9
    00000E04 E431                   MOV         #49,R4
    00000E06 6903                   MOV         R0,R9
      ZDM_parame   400                                    if (r!=KEY_CTRL_EXIT){
    00000E08 39A0                   CMP/EQ      R10,R9
    00000E0A 8D19                   BT/S        L721
    00000E0C 7F04                   ADD         #4,R15
      ZDM_parame   401                                            strncpy(zdmroute.set[y].name,buffer,12);
    00000E0E E60C                   MOV         #12,R6
    00000E10 53F3                   MOV.L       @(12,R15),R3
    00000E12 65F3                   MOV         R15,R5
    00000E14 64C2                   MOV.L       @R12,R4
    00000E16 7540                   ADD         #64,R5
    00000E18 DA2D                   MOV.L       L1011+16,R10; _strncpy
    00000E1A 4A0B                   JSR         @R10
    00000E1C 343C                   ADD         R3,R4
      ZDM_parame   402                                            switch(r){
    00000E1E 6093                   MOV         R9,R0
    00000E20 914E                   MOV.W       L1011,R1   ; H'7542
    00000E22 3010                   CMP/EQ      R1,R0
    00000E24 8907                   BT          L805
    00000E26 914C                   MOV.W       L1011+2,R1 ; H'7547
    00000E28 3010                   CMP/EQ      R1,R0
    00000E2A 8906                   BT          L806
    00000E2C 914A                   MOV.W       L1011+4,R1 ; H'7534
    00000E2E 3010                   CMP/EQ      R1,R0
    00000E30 8905                   BT          L807
    00000E32 A005                   BRA         L721
    00000E34 0009                   NOP
    00000E36              L805:                            ; case label 
      ZDM_parame   403                                            case KEY_CTRL_UP:       y--;break;
    00000E36              L986:                             
    00000E36 A003                   BRA         L721
    00000E38 7EFF                   ADD         #-1,R14
    00000E3A              L806:                            ; case label 
      ZDM_parame   404                                            case KEY_CTRL_DOWN:     y++;break;
    00000E3A              L987:                             
    00000E3A A001                   BRA         L721
    00000E3C 7E01                   ADD         #1,R14
    00000E3E              L807:                            ; case label 
      ZDM_parame   405                                            case KEY_CTRL_EXE:      x++;break;
    00000E3E 7B01                   ADD         #1,R11
    00000E40              L721:
      ZDM_parame   406                                            }
      ZDM_parame   407                                    }
      ZDM_parame   408                                    refresh = REDRAW_ALL;
    00000E40 E802                   MOV         #2,R8
      ZDM_parame   409                            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      ZDM_parame   410                            break;
    00000E42              L939:                             
      ZDM_parame   411                    }
      ZDM_parame   412                    if (x<0) x = 3,y--;
    00000E42 4B11                   CMP/PZ      R11
    00000E44 8D02                   BT/S        L960
    00000E46 E403                   MOV         #3,R4
    00000E48 6B43                   MOV         R4,R11
    00000E4A 7EFF                   ADD         #-1,R14
    00000E4C              L960:                             
      ZDM_parame   413                    if (x>3) x = 0,y++;
    00000E4C 3B47                   CMP/GT      R4,R11
    00000E4E 8B01                   BF          L961
    00000E50 6BD3                   MOV         R13,R11
    00000E52 7E01                   ADD         #1,R14
    00000E54              L961:                             
      ZDM_parame   414                    if (y<0) y = 0;
    00000E54 4E11                   CMP/PZ      R14
    00000E56 8D01                   BT/S        L962
      ZDM_parame   415                    if (y>=zdmroute.size) y = zdmroute.size - 1;
    00000E58 52C1                   MOV.L       @(4,R12),R2
    00000E5A 6ED3                   MOV         R13,R14
    00000E5C              L962:                             
    00000E5C 3E23                   CMP/GE      R2,R14
    00000E5E 8B01                   BF          L963
    00000E60 5EC1                   MOV.L       @(4,R12),R14
    00000E62 7EFF                   ADD         #-1,R14
    00000E64              L963:                             
      ZDM_parame   416                    if (y>top + 3) top = y - 3;
    00000E64 52F1                   MOV.L       @(4,R15),R2
    00000E66 7203                   ADD         #3,R2
    00000E68 3E27                   CMP/GT      R2,R14
    00000E6A 8B02                   BF          L964
    00000E6C 62E3                   MOV         R14,R2
    00000E6E 72FD                   ADD         #-3,R2
    00000E70 1F21                   MOV.L       R2,@(4,R15)
    00000E72              L964:                             
      ZDM_parame   417                    if (y<top) top = y;
    00000E72 53F1                   MOV.L       @(4,R15),R3
    00000E74 3E33                   CMP/GE      R3,R14
    00000E76 8900                   BT          L965
    00000E78 1FE1                   MOV.L       R14,@(4,R15)
    00000E7A              L965:                             
      ZDM_parame   418                    if (x>left +3) left = x - 3;
    00000E7A 63F2                   MOV.L       @R15,R3
    00000E7C 7303                   ADD         #3,R3
    00000E7E 3B37                   CMP/GT      R3,R11
    00000E80 8B02                   BF          L966
    00000E82 62B3                   MOV         R11,R2
    00000E84 72FD                   ADD         #-3,R2
    00000E86 2F22                   MOV.L       R2,@R15
    00000E88              L966:                             
      ZDM_parame   419                    if (x<left) left = x;
    00000E88 63F2                   MOV.L       @R15,R3
    00000E8A 3B33                   CMP/GE      R3,R11
    00000E8C 8B01                   BF          L1012
    00000E8E ACB0                   BRA         L907




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E90 0009                   NOP
    00000E92              L1012:                            
    00000E92 ACAE                   BRA         L907
    00000E94 2FB2                   MOV.L       R11,@R15
    00000E96              L949:                             
      ZDM_parame   420            }
      ZDM_parame   421    }
    00000E96 9116                   MOV.W       L1011+6,R1 ; H'0094
    00000E98 3F1C                   ADD         R1,R15
    00000E9A 4F16                   LDS.L       @R15+,MACL
    00000E9C 4F26                   LDS.L       @R15+,PR
    00000E9E 68F6                   MOV.L       @R15+,R8
    00000EA0 69F6                   MOV.L       @R15+,R9
    00000EA2 6AF6                   MOV.L       @R15+,R10
    00000EA4 6BF6                   MOV.L       @R15+,R11
    00000EA6 6CF6                   MOV.L       @R15+,R12
    00000EA8 6DF6                   MOV.L       @R15+,R13
    00000EAA 000B                   RTS
    00000EAC 6EF6                   MOV.L       @R15+,R14
      ZDM_parame   422    
      ZDM_parame   423    double zdm_to_gc( double stake)
    00000EAE              _zdm_to_gc:                      ; function: zdm_to_gc
                                                           ; frame size=116
                                                           ; used runtime library name:
                                                           ; __addd, __subdr, __muld, __divdr, __itod, __eqd, __gtd, __ged
      ZDM_parame   424    {
      ZDM_parame   425            int i; 
      ZDM_parame   426            double qxc,length,gc;
      ZDM_parame   427            double I1,I2,bad,cave_vex;
      ZDM_parame   428            for(i=1;i<zdmroute.size-1;i++)
    00000EAE E62C                   MOV         #44,R6
    00000EB0 2FE6                   MOV.L       R14,@-R15
    00000EB2 2FD6                   MOV.L       R13,@-R15
    00000EB4 4F22                   STS.L       PR,@-R15
    00000EB6 4F12                   STS.L       MACL,@-R15
    00000EB8 D406                   MOV.L       L1011+20,R4; _zdmroute
    00000EBA 7FC8                   ADD         #-56,R15
    00000EBC A14F                   BRA         L968
    00000EBE E501                   MOV         #1,R5
    00000EC0              L1011:                            
    00000EC0 7542                   .DATA.W     H'7542
    00000EC2 7547                   .DATA.W     H'7547
    00000EC4 7534                   .DATA.W     H'7534
    00000EC6 0094                   .DATA.W     H'0094
    00000EC8 <00000000>             .DATA.L     _key
    00000ECC <00000000>             .DATA.L     _GetPressChar
    00000ED0 <00000000>             .DATA.L     _strncpy
    00000ED4 <00000000>             .DATA.L     _zdmroute
    00000ED8              L969:                             
    00000ED8 6E42                   MOV.L       @R4,R14
    00000EDA E050                   MOV         #80,R0
    00000EDC 0567                   MUL.L       R6,R5
    00000EDE 6DE3                   MOV         R14,R13
    00000EE0 02FE                   MOV.L       @(R0,R15),R2
    00000EE2 071A                   STS         MACL,R7
    00000EE4 2F26                   MOV.L       R2,@-R15
    00000EE6 E050                   MOV         #80,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EE8 02FE                   MOV.L       @(R0,R15),R2
    00000EEA 3D7C                   ADD         R7,R13
    00000EEC 2F26                   MOV.L       R2,@-R15
    00000EEE 53DA                   MOV.L       @(40,R13),R3
    00000EF0 D2A5                   MOV.L       L1013,R2   ; __gtd
    00000EF2 2F36                   MOV.L       R3,@-R15
    00000EF4 53D9                   MOV.L       @(36,R13),R3
    00000EF6 420B                   JSR         @R2
    00000EF8 2F36                   MOV.L       R3,@-R15
    00000EFA 8800                   CMP/EQ      #0,R0
    00000EFC 890E                   BT          L970
    00000EFE 63D3                   MOV         R13,R3
    00000F00 7348                   ADD         #72,R3
    00000F02 E200                   MOV         #0,R2
    00000F04 5131                   MOV.L       @(4,R3),R1
    00000F06 2F16                   MOV.L       R1,@-R15
    00000F08 6132                   MOV.L       @R3,R1
    00000F0A 2F16                   MOV.L       R1,@-R15
    00000F0C 2F26                   MOV.L       R2,@-R15
    00000F0E D39F                   MOV.L       L1013+4,R3 ; __eqd
    00000F10 430B                   JSR         @R3
    00000F12 2F26                   MOV.L       R2,@-R15
    00000F14 8800                   CMP/EQ      #0,R0
    00000F16 8B01                   BF          L1014
    00000F18 A120                   BRA         L971
    00000F1A 0009                   NOP
    00000F1C              L1014:                            
    00000F1C              L970:                             
      ZDM_parame   429            {
      ZDM_parame   430                    if(stake>zdmroute.set[i].zdm_zdzh && zdmroute.set[i+1].zdm_r!=0)
      ZDM_parame   431                            continue;
      ZDM_parame   432                    else{
      ZDM_parame   433                            
      ZDM_parame   434                            I1 = (zdmroute.set[i].zdm_bbgc-zdmroute.set[i-1].zdm_bbgc)/(zdmroute.set[i].zdm_bb
                         +zh-zdmroute.set[i-1].zdm_bbzh);//«∞◊›∆¬
    00000F1C D19C                   MOV.L       L1013+8,R1 ; __subdr
    00000F1E 7FF8                   ADD         #-8,R15
    00000F20 64E3                   MOV         R14,R4
    00000F22 347C                   ADD         R7,R4
    00000F24 5346                   MOV.L       @(24,R4),R3
    00000F26 6D53                   MOV         R5,R13
    00000F28 2F36                   MOV.L       R3,@-R15
    00000F2A 7DFF                   ADD         #-1,R13
    00000F2C 5345                   MOV.L       @(20,R4),R3
    00000F2E 2F36                   MOV.L       R3,@-R15
    00000F30 0D67                   MUL.L       R6,R13
    00000F32 0D1A                   STS         MACL,R13
    00000F34 3DEC                   ADD         R14,R13
    00000F36 53D6                   MOV.L       @(24,R13),R3
    00000F38 2F36                   MOV.L       R3,@-R15
    00000F3A 53D5                   MOV.L       @(20,R13),R3
    00000F3C 2F36                   MOV.L       R3,@-R15
    00000F3E 62F3                   MOV         R15,R2
    00000F40 7210                   ADD         #16,R2
    00000F42 410B                   JSR         @R1
    00000F44 2F26                   MOV.L       R2,@-R15
    00000F46 7FF8                   ADD         #-8,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F48 D191                   MOV.L       L1013+8,R1 ; __subdr
    00000F4A 5344                   MOV.L       @(16,R4),R3
    00000F4C 2F36                   MOV.L       R3,@-R15
    00000F4E 5343                   MOV.L       @(12,R4),R3
    00000F50 2F36                   MOV.L       R3,@-R15
    00000F52 52D4                   MOV.L       @(16,R13),R2
    00000F54 2F26                   MOV.L       R2,@-R15
    00000F56 52D3                   MOV.L       @(12,R13),R2
    00000F58 2F26                   MOV.L       R2,@-R15
    00000F5A 63F3                   MOV         R15,R3
    00000F5C 7310                   ADD         #16,R3
    00000F5E 410B                   JSR         @R1
    00000F60 2F36                   MOV.L       R3,@-R15
    00000F62 60F3                   MOV         R15,R0
    00000F64 D28B                   MOV.L       L1013+12,R2; __divdr
    00000F66 7028                   ADD         #40,R0
    00000F68 420B                   JSR         @R2
    00000F6A 2F06                   MOV.L       R0,@-R15
      ZDM_parame   435                            I2 =(zdmroute.set[i+1].zdm_bbgc-zdmroute.set[i].zdm_bbgc)/(zdmroute.set[i+1].zdm_b
                         +bzh-zdmroute.set[i].zdm_bbzh); //∫Û◊›∆¬
    00000F6C D188                   MOV.L       L1013+8,R1 ; __subdr
    00000F6E 7FF8                   ADD         #-8,R15
    00000F70 6543                   MOV         R4,R5
    00000F72 752C                   ADD         #44,R5
    00000F74 5356                   MOV.L       @(24,R5),R3
    00000F76 2F36                   MOV.L       R3,@-R15
    00000F78 5355                   MOV.L       @(20,R5),R3
    00000F7A 2F36                   MOV.L       R3,@-R15
    00000F7C 5246                   MOV.L       @(24,R4),R2
    00000F7E 2F26                   MOV.L       R2,@-R15
    00000F80 5245                   MOV.L       @(20,R4),R2
    00000F82 2F26                   MOV.L       R2,@-R15
    00000F84 63F3                   MOV         R15,R3
    00000F86 7310                   ADD         #16,R3
    00000F88 410B                   JSR         @R1
    00000F8A 2F36                   MOV.L       R3,@-R15
    00000F8C D180                   MOV.L       L1013+8,R1 ; __subdr
    00000F8E 7FF8                   ADD         #-8,R15
    00000F90 5254                   MOV.L       @(16,R5),R2
    00000F92 2F26                   MOV.L       R2,@-R15
    00000F94 5253                   MOV.L       @(12,R5),R2
    00000F96 2F26                   MOV.L       R2,@-R15
    00000F98 5344                   MOV.L       @(16,R4),R3
    00000F9A 2F36                   MOV.L       R3,@-R15
    00000F9C 5343                   MOV.L       @(12,R4),R3
    00000F9E 2F36                   MOV.L       R3,@-R15
    00000FA0 62F3                   MOV         R15,R2
    00000FA2 7210                   ADD         #16,R2
    00000FA4 410B                   JSR         @R1
    00000FA6 2F26                   MOV.L       R2,@-R15
    00000FA8 D37A                   MOV.L       L1013+12,R3; __divdr
    00000FAA 60F3                   MOV         R15,R0
    00000FAC 7020                   ADD         #32,R0
    00000FAE 430B                   JSR         @R3
    00000FB0 2F06                   MOV.L       R0,@-R15
      ZDM_parame   436                            bad = I2 - I1;
    00000FB2 52F5                   MOV.L       @(20,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FB4 2F26                   MOV.L       R2,@-R15
    00000FB6 52F5                   MOV.L       @(20,R15),R2
    00000FB8 2F26                   MOV.L       R2,@-R15
    00000FBA 53F9                   MOV.L       @(36,R15),R3
    00000FBC D274                   MOV.L       L1013+8,R2 ; __subdr
    00000FBE 2F36                   MOV.L       R3,@-R15
    00000FC0 53F9                   MOV.L       @(36,R15),R3
    00000FC2 2F36                   MOV.L       R3,@-R15
    00000FC4 61F3                   MOV         R15,R1
    00000FC6 7118                   ADD         #24,R1
    00000FC8 420B                   JSR         @R2
    00000FCA 2F16                   MOV.L       R1,@-R15
      ZDM_parame   437                            cave_vex = zdmroute.set[i].zdm_r * (bad>=0?1:-1);
    00000FCC 5348                   MOV.L       @(32,R4),R3
    00000FCE 2F36                   MOV.L       R3,@-R15
    00000FD0 5347                   MOV.L       @(28,R4),R3
    00000FD2 2F36                   MOV.L       R3,@-R15
    00000FD4 52F5                   MOV.L       @(20,R15),R2
    00000FD6 E300                   MOV         #0,R3
    00000FD8 2F26                   MOV.L       R2,@-R15
    00000FDA 52F5                   MOV.L       @(20,R15),R2
    00000FDC 2F26                   MOV.L       R2,@-R15
    00000FDE 2F36                   MOV.L       R3,@-R15
    00000FE0 D26D                   MOV.L       L1013+16,R2; __ged
    00000FE2 420B                   JSR         @R2
    00000FE4 2F36                   MOV.L       R3,@-R15
    00000FE6 8800                   CMP/EQ      #0,R0
    00000FE8 8D02                   BT/S        L973
    00000FEA 7FF8                   ADD         #-8,R15
    00000FEC A001                   BRA         L974
    00000FEE E001                   MOV         #1,R0
    00000FF0              L973:                             
    00000FF0 E0FF                   MOV         #-1,R0
    00000FF2              L974:                             
    00000FF2 D26A                   MOV.L       L1013+20,R2; __itod
    00000FF4 420B                   JSR         @R2
    00000FF6 2FF6                   MOV.L       R15,@-R15
    00000FF8 D369                   MOV.L       L1013+24,R3; __muld
    00000FFA 61F3                   MOV         R15,R1
    00000FFC 7110                   ADD         #16,R1
    00000FFE 430B                   JSR         @R3
    00001000 2F16                   MOV.L       R1,@-R15
      ZDM_parame   438                            qxc = zdmroute.set[i].zdm_zdzh - zdmroute.set[i].zdm_bbzh;  
    00001002 524A                   MOV.L       @(40,R4),R2
    00001004 2F26                   MOV.L       R2,@-R15
    00001006 5249                   MOV.L       @(36,R4),R2
    00001008 2F26                   MOV.L       R2,@-R15
    0000100A 5344                   MOV.L       @(16,R4),R3
    0000100C D260                   MOV.L       L1013+8,R2 ; __subdr
    0000100E 2F36                   MOV.L       R3,@-R15
    00001010 5343                   MOV.L       @(12,R4),R3
    00001012 2F36                   MOV.L       R3,@-R15
    00001014 61F3                   MOV         R15,R1
    00001016 7140                   ADD         #64,R1
    00001018 420B                   JSR         @R2
    0000101A 2F16                   MOV.L       R1,@-R15
      ZDM_parame   439                            length = stake - zdmroute.set[i].zdm_bbzh;    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000101C E050                   MOV         #80,R0
    0000101E 03FE                   MOV.L       @(R0,R15),R3
    00001020 2F36                   MOV.L       R3,@-R15
    00001022 E050                   MOV         #80,R0
    00001024 03FE                   MOV.L       @(R0,R15),R3
    00001026 2F36                   MOV.L       R3,@-R15
    00001028 5244                   MOV.L       @(16,R4),R2
    0000102A 2F26                   MOV.L       R2,@-R15
    0000102C 5243                   MOV.L       @(12,R4),R2
    0000102E 2F26                   MOV.L       R2,@-R15
    00001030 D357                   MOV.L       L1013+8,R3 ; __subdr
    00001032 61F3                   MOV         R15,R1
    00001034 7138                   ADD         #56,R1
    00001036 430B                   JSR         @R3
    00001038 2F16                   MOV.L       R1,@-R15
      ZDM_parame   440                            gc = zdmroute.set[i].zdm_bbgc+I1*length;
    0000103A 5246                   MOV.L       @(24,R4),R2
    0000103C D158                   MOV.L       L1013+24,R1; __muld
    0000103E 2F26                   MOV.L       R2,@-R15
    00001040 5245                   MOV.L       @(20,R4),R2
    00001042 2F26                   MOV.L       R2,@-R15
    00001044 7FF8                   ADD         #-8,R15
    00001046 53FF                   MOV.L       @(60,R15),R3
    00001048 2F36                   MOV.L       R3,@-R15
    0000104A 53FF                   MOV.L       @(60,R15),R3
    0000104C 2F36                   MOV.L       R3,@-R15
    0000104E 52FD                   MOV.L       @(52,R15),R2
    00001050 2F26                   MOV.L       R2,@-R15
    00001052 52FD                   MOV.L       @(52,R15),R2
    00001054 2F26                   MOV.L       R2,@-R15
    00001056 63F3                   MOV         R15,R3
    00001058 7310                   ADD         #16,R3
    0000105A 410B                   JSR         @R1
    0000105C 2F36                   MOV.L       R3,@-R15
    0000105E 60F3                   MOV         R15,R0
    00001060 D250                   MOV.L       L1013+28,R2; __addd
    00001062 7030                   ADD         #48,R0
    00001064 420B                   JSR         @R2
    00001066 2F06                   MOV.L       R0,@-R15
      ZDM_parame   441                            length=length+qxc; //
    00001068 53FD                   MOV.L       @(52,R15),R3
    0000106A 2F36                   MOV.L       R3,@-R15
    0000106C 53FD                   MOV.L       @(52,R15),R3
    0000106E 2F36                   MOV.L       R3,@-R15
    00001070 52FD                   MOV.L       @(52,R15),R2
    00001072 2F26                   MOV.L       R2,@-R15
    00001074 52FD                   MOV.L       @(52,R15),R2
    00001076 2F26                   MOV.L       R2,@-R15
    00001078 D34A                   MOV.L       L1013+28,R3; __addd
    0000107A 61F3                   MOV         R15,R1
    0000107C 7138                   ADD         #56,R1
    0000107E 430B                   JSR         @R3
    00001080 2F16                   MOV.L       R1,@-R15
      ZDM_parame   442                            if(length>0)
    00001082 E300                   MOV         #0,R3
    00001084 52FB                   MOV.L       @(44,R15),R2
    00001086 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001088 52FB                   MOV.L       @(44,R15),R2
    0000108A 2F26                   MOV.L       R2,@-R15
    0000108C 2F36                   MOV.L       R3,@-R15
    0000108E D23E                   MOV.L       L1013,R2   ; __gtd
    00001090 420B                   JSR         @R2
    00001092 2F36                   MOV.L       R3,@-R15
    00001094 8800                   CMP/EQ      #0,R0
    00001096 892E                   BT          L975
      ZDM_parame   443                                    gc = gc+length*length/2.0/cave_vex; 
    00001098 D141                   MOV.L       L1013+24,R1; __muld
    0000109A 7FE8                   ADD         #-24,R15
    0000109C E044                   MOV         #68,R0
    0000109E 03FE                   MOV.L       @(R0,R15),R3
    000010A0 2F36                   MOV.L       R3,@-R15
    000010A2 E044                   MOV         #68,R0
    000010A4 03FE                   MOV.L       @(R0,R15),R3
    000010A6 E04C                   MOV         #76,R0
    000010A8 2F36                   MOV.L       R3,@-R15
    000010AA 02FE                   MOV.L       @(R0,R15),R2
    000010AC 2F26                   MOV.L       R2,@-R15
    000010AE E04C                   MOV         #76,R0
    000010B0 02FE                   MOV.L       @(R0,R15),R2
    000010B2 2F26                   MOV.L       R2,@-R15
    000010B4 63F3                   MOV         R15,R3
    000010B6 7310                   ADD         #16,R3
    000010B8 410B                   JSR         @R1
    000010BA 2F36                   MOV.L       R3,@-R15
    000010BC D135                   MOV.L       L1013+12,R1; __divdr
    000010BE E200                   MOV         #0,R2
    000010C0 2F26                   MOV.L       R2,@-R15
    000010C2 D239                   MOV.L       L1013+32,R2; H'40000000
    000010C4 2F26                   MOV.L       R2,@-R15
    000010C6 63F3                   MOV         R15,R3
    000010C8 7310                   ADD         #16,R3
    000010CA 410B                   JSR         @R1
    000010CC 2F36                   MOV.L       R3,@-R15
    000010CE 52F5                   MOV.L       @(20,R15),R2
    000010D0 D130                   MOV.L       L1013+12,R1; __divdr
    000010D2 2F26                   MOV.L       R2,@-R15
    000010D4 52F5                   MOV.L       @(20,R15),R2
    000010D6 2F26                   MOV.L       R2,@-R15
    000010D8 63F3                   MOV         R15,R3
    000010DA 7310                   ADD         #16,R3
    000010DC 410B                   JSR         @R1
    000010DE 2F36                   MOV.L       R3,@-R15
    000010E0 52FB                   MOV.L       @(44,R15),R2
    000010E2 2F26                   MOV.L       R2,@-R15
    000010E4 52FB                   MOV.L       @(44,R15),R2
    000010E6 2F26                   MOV.L       R2,@-R15
    000010E8 D32E                   MOV.L       L1013+28,R3; __addd
    000010EA 61F3                   MOV         R15,R1
    000010EC 7130                   ADD         #48,R1
    000010EE 430B                   JSR         @R3
    000010F0 2F16                   MOV.L       R1,@-R15
    000010F2 A03A                   BRA         L978
    000010F4 0009                   NOP
    000010F6              L975:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      ZDM_parame   444                            else{
      ZDM_parame   445                                    length = length - qxc;
    000010F6 50FB                   MOV.L       @(44,R15),R0
    000010F8 D225                   MOV.L       L1013+8,R2 ; __subdr
    000010FA 2F06                   MOV.L       R0,@-R15
    000010FC 50FB                   MOV.L       @(44,R15),R0
    000010FE 2F06                   MOV.L       R0,@-R15
    00001100 53FF                   MOV.L       @(60,R15),R3
    00001102 2F36                   MOV.L       R3,@-R15
    00001104 53FF                   MOV.L       @(60,R15),R3
    00001106 2F36                   MOV.L       R3,@-R15
    00001108 61F3                   MOV         R15,R1
    0000110A 7138                   ADD         #56,R1
    0000110C 420B                   JSR         @R2
    0000110E 2F16                   MOV.L       R1,@-R15
      ZDM_parame   446                                    if(length>qxc)
    00001110 53FB                   MOV.L       @(44,R15),R3
    00001112 2F36                   MOV.L       R3,@-R15
    00001114 53FB                   MOV.L       @(44,R15),R3
    00001116 2F36                   MOV.L       R3,@-R15
    00001118 52FF                   MOV.L       @(60,R15),R2
    0000111A 2F26                   MOV.L       R2,@-R15
    0000111C 52FF                   MOV.L       @(60,R15),R2
    0000111E D31A                   MOV.L       L1013,R3   ; __gtd
    00001120 430B                   JSR         @R3
    00001122 2F26                   MOV.L       R2,@-R15
    00001124 8800                   CMP/EQ      #0,R0
    00001126 8920                   BT          L978
      ZDM_parame   447                                    gc = zdmroute.set[i].zdm_bbgc+I2*length; 
    00001128 D11D                   MOV.L       L1013+24,R1; __muld
    0000112A 37EC                   ADD         R14,R7
    0000112C 5276                   MOV.L       @(24,R7),R2
    0000112E 2F26                   MOV.L       R2,@-R15
    00001130 5275                   MOV.L       @(20,R7),R2
    00001132 2F26                   MOV.L       R2,@-R15
    00001134 7FF8                   ADD         #-8,R15
    00001136 53FF                   MOV.L       @(60,R15),R3
    00001138 2F36                   MOV.L       R3,@-R15
    0000113A 53FF                   MOV.L       @(60,R15),R3
    0000113C 2F36                   MOV.L       R3,@-R15
    0000113E 52FB                   MOV.L       @(44,R15),R2
    00001140 2F26                   MOV.L       R2,@-R15
    00001142 52FB                   MOV.L       @(44,R15),R2
    00001144 2F26                   MOV.L       R2,@-R15
    00001146 63F3                   MOV         R15,R3
    00001148 7310                   ADD         #16,R3
    0000114A 410B                   JSR         @R1
    0000114C 2F36                   MOV.L       R3,@-R15
    0000114E 60F3                   MOV         R15,R0
    00001150 D214                   MOV.L       L1013+28,R2; __addd
    00001152 7030                   ADD         #48,R0
    00001154 420B                   JSR         @R2
    00001156 2F06                   MOV.L       R0,@-R15
      ZDM_parame   448                              
      ZDM_parame   449                            }
      ZDM_parame   450                    }
      ZDM_parame   451             break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001158 A007                   BRA         L978
    0000115A 0009                   NOP
    0000115C              L971:                             
    0000115C 7501                   ADD         #1,R5
    0000115E              L968:                             
    0000115E 5241                   MOV.L       @(4,R4),R2
    00001160 72FF                   ADD         #-1,R2
    00001162 3523                   CMP/GE      R2,R5
    00001164 8901                   BT          L1015
    00001166 AEB7                   BRA         L969
    00001168 0009                   NOP
    0000116A              L1015:                            
    0000116A              L978:                             
      ZDM_parame   452            }
      ZDM_parame   453             
      ZDM_parame   454             return gc;
    0000116A 62F3                   MOV         R15,R2
    0000116C 7248                   ADD         #72,R2
    0000116E 63F3                   MOV         R15,R3
    00001170 6122                   MOV.L       @R2,R1
    00001172 7320                   ADD         #32,R3
    00001174 6032                   MOV.L       @R3,R0
    00001176 2102                   MOV.L       R0,@R1
    00001178 5031                   MOV.L       @(4,R3),R0
    0000117A 1101                   MOV.L       R0,@(4,R1)
      ZDM_parame   455    }
    0000117C 7F38                   ADD         #56,R15
    0000117E 4F16                   LDS.L       @R15+,MACL
    00001180 4F26                   LDS.L       @R15+,PR
    00001182 6DF6                   MOV.L       @R15+,R13
    00001184 000B                   RTS
    00001186 6EF6                   MOV.L       @R15+,R14
    00001188              L1013:                            
    00001188 <00000000>             .DATA.L     __gtd
    0000118C <00000000>             .DATA.L     __eqd
    00001190 <00000000>             .DATA.L     __subdr
    00001194 <00000000>             .DATA.L     __divdr
    00001198 <00000000>             .DATA.L     __ged
    0000119C <00000000>             .DATA.L     __itod
    000011A0 <00000000>             .DATA.L     __muld
    000011A4 <00000000>             .DATA.L     __addd
    000011A8 40000000               .DATA.L     H'40000000
      ZDM_parame   456    
C   00000000              L564:
    00000000 2564                   .SDATA      "%d"
    00000002 00                     .DATA.B     H'00
    00000003 00000001               .RES.B      1
    00000004              L568:
    00000004 B8B2B8C7               .DATA.B     H'B8,H'B2,H'B8,H'C7
    00000008 3F                     .SDATA      "?"
    00000009 00                     .DATA.B     H'00
    0000000A 00000002               .RES.W      1
    0000000C              L569:
    0000000C 596573203A             .SDATA      "Yes : [F1]"
             205B46315D   
    00000016 00                     .DATA.B     H'00
    00000017 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000018              L570:
    00000018 4E6F20203A             .SDATA      "No  : [F6]"
             205B46365D   
    00000022 00                     .DATA.B     H'00
    00000023              L577:
    00000023 00                     .DATA.B     H'00
    00000024 0000000C01             .DATAB.B    12,0
             00           
    00000030              L581:
    00000030 CEC4BCFEC3             .DATA.B     H'CE,H'C4,H'BC,H'FE,H'C3,H'FB
             FB           
    00000036 282A2E7A64             .SDATA      "(*.zdm)"
             6D29         
    0000003D 00                     .DATA.B     H'00
    0000003E 00000002               .RES.W      1
    00000040              L584:
    00000040 2E7A646D               .SDATA      ".zdm"
    00000044 00                     .DATA.B     H'00
    00000045 00000001               .RES.B      1
    00000046 00000002               .RES.W      1
    00000048              L593:
    00000048 B1A3B4E6CE             .DATA.B     H'B1,H'A3,H'B4,H'E6,H'CE,H'AA
             AA           
    0000004E 20                     .SDATA      " "
    0000004F 00                     .DATA.B     H'00
    00000050              L594:
    00000050 B4F2BFAA               .DATA.B     H'B4,H'F2,H'BF,H'AA
    00000054 20                     .SDATA      " "
    00000055 00                     .DATA.B     H'00
    00000056 00000002               .RES.W      1
    00000058              L595:
    00000058 D0C2BDA8               .DATA.B     H'D0,H'C2,H'BD,H'A8
    0000005C 20                     .SDATA      " "
    0000005D 00                     .DATA.B     H'00
    0000005E              L600:
    0000005E 00                     .DATA.B     H'00
    0000005F 0000000C01             .DATAB.B    12,0
             00           
    0000006B 00000001               .RES.B      1
    0000006C              L614:
    0000006C 4E6F204669             .SDATA      "No File!"
             6C6521       
    00000074 00                     .DATA.B     H'00
    00000075 00000001               .RES.B      1
    00000076 00000002               .RES.W      1
    00000078              L619:
    00000078 D0C2BDA8               .DATA.B     H'D0,H'C2,H'BD,H'A8
    0000007C 3F                     .SDATA      "?"
    0000007D 00                     .DATA.B     H'00
    0000007E 00000002               .RES.W      1
    00000080              L621:
    00000080 B1A3B4E6CA             .DATA.B     H'B1,H'A3,H'B4,H'E6,H'CA,H'FD,H'BE,H'DD
             FDBEDD       
    00000088 3F                     .SDATA      "?"
    00000089 00                     .DATA.B     H'00
    0000008A 00000002               .RES.W      1
    0000008C              L629:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000008C <00000000>             .DATA.L     L630,L631,L632,L633
             <00000000>   
             <00000000>   
             <00000000>   
    0000009C              L635:
    0000009C <00000000>             .DATA.L     L636,L636,L636,L636,L636
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    000000B0              L638:
    000000B0 <00000000>             .DATA.L     L639,L640,L641,L642
             <00000000>   
             <00000000>   
             <00000000>   
    000000C0              L654:
    000000C0 00                     .DATA.B     H'00
    000000C1 0000000C01             .DATAB.B    12,0
             00           
    000000CD 00000001               .RES.B      1
    000000CE 00000002               .RES.W      1
    000000D0              L659:
    000000D0 CEC4BCFE00             .DATA.B     H'CE,H'C4,H'BC,H'FE,H'00
    000000D5 00000001               .RES.B      1
    000000D6 00000002               .RES.W      1
    000000D8              L660:
    000000D8 CCEDBCD300             .DATA.B     H'CC,H'ED,H'BC,H'D3,H'00
    000000DD 00000001               .RES.B      1
    000000DE 00000002               .RES.W      1
    000000E0              L662:
    000000E0 B2E5C8EB               .DATA.B     H'B2,H'E5,H'C8,H'EB
    000000E4 20                     .SDATA      " "
    000000E5 00                     .DATA.B     H'00
    000000E6 00000002               .RES.W      1
    000000E8              L663:
    000000E8 C9BED0D0               .DATA.B     H'C9,H'BE,H'D0,H'D0
    000000EC 20                     .SDATA      " "
    000000ED 00                     .DATA.B     H'00
    000000EE 00000002               .RES.W      1
    000000F0              L664:
    000000F0 C7E5BFD5               .DATA.B     H'C7,H'E5,H'BF,H'D5
    000000F4 20                     .SDATA      " "
    000000F5 00                     .DATA.B     H'00
    000000F6 00000002               .RES.W      1
    000000F8              L665:
    000000F8 3F                     .SDATA      "?"
    000000F9 00                     .DATA.B     H'00
    000000FA 00000002               .RES.W      1
    000000FC              L670:
    000000FC 256C66                 .SDATA      "%lf"
    000000FF 00                     .DATA.B     H'00
    00000100              L671:
    00000100 2573                   .SDATA      "%s"
    00000102 00                     .DATA.B     H'00
    00000103 00000001               .RES.B      1
    00000104              L675:
    00000104 B1A3B4E6               .DATA.B     H'B1,H'A3,H'B4,H'E6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000108 3F                     .SDATA      "?"
    00000109 00                     .DATA.B     H'00
    0000010A 00000002               .RES.W      1
    0000010C              L682:
    0000010C C9BE                   .DATA.B     H'C9,H'BE
    0000010E 20                     .SDATA      " "
    0000010F B3FD                   .DATA.B     H'B3,H'FD
    00000111 20                     .SDATA      " "
    00000112 D2BB                   .DATA.B     H'D2,H'BB
    00000114 20                     .SDATA      " "
    00000115 D0D0                   .DATA.B     H'D0,H'D0
    00000117 3F                     .SDATA      "?"
    00000118 00                     .DATA.B     H'00
    00000119 00000001               .RES.B      1
    0000011A 00000002               .RES.W      1
    0000011C              L683:
    0000011C 5B46315D59             .SDATA      "[F1]Yes   [F6]No"
             6573202020   
             5B46365D4E   
             6F           
    0000012C 00                     .DATA.B     H'00
    0000012D 00000001               .RES.B      1
    0000012E 00000002               .RES.W      1
    00000130              L685:
    00000130 C7E5                   .DATA.B     H'C7,H'E5
    00000132 20                     .SDATA      " "
    00000133 BFD5                   .DATA.B     H'BF,H'D5
    00000135 20                     .SDATA      " "
    00000136 CBF9                   .DATA.B     H'CB,H'F9
    00000138 20                     .SDATA      " "
    00000139 D3D0                   .DATA.B     H'D3,H'D0
    0000013B 203F                   .SDATA      " ?"
    0000013D 00                     .DATA.B     H'00
    0000013E 00000002               .RES.W      1
    00000140              L687:
    00000140 252E3366               .SDATA      "%.3f"
    00000144 00                     .DATA.B     H'00
    00000145 00000001               .RES.B      1
    00000146 00000002               .RES.W      1
    00000148              L688:
    00000148 CFDFC2B7C3             .DATA.B     H'CF,H'DF,H'C2,H'B7,H'C3,H'FB,H'B3,H'C6,H'00
             FBB3C600     
    00000151 00000001               .RES.B      1
    00000152 00000002               .RES.W      1
    00000154              L690:
    00000154 C7EBB1A3B4             .DATA.B     H'C7,H'EB,H'B1,H'A3,H'B4,H'E6,H'CF,H'DF,H'C2,H'B7,H'CE,H'C4,H'BC,H'FE
             E6CFDFC2B7   
             CEC4BCFE     
    00000162 20                     .SDATA      " "
    00000163 00                     .DATA.B     H'00
    00000164              L630:
    00000164 4448                   .SDATA      "DH"
    00000166 00                     .DATA.B     H'00
    00000167 00000001               .RES.B      1
    00000168              L631:
    00000168 42425A48               .SDATA      "BBZH"
    0000016C 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000016D 00000001               .RES.B      1
    0000016E 00000002               .RES.W      1
    00000170              L632:
    00000170 42424743               .SDATA      "BBGC"
    00000174 00                     .DATA.B     H'00
    00000175 00000001               .RES.B      1
    00000176 00000002               .RES.W      1
    00000178              L633:
    00000178 424A                   .SDATA      "BJ"
    0000017A 00                     .DATA.B     H'00
    0000017B 00000001               .RES.B      1
    0000017C              L636:
    0000017C 00                     .DATA.B     H'00
    0000017D 00000001               .RES.B      1
    0000017E 00000002               .RES.W      1
    00000180              L639:
    00000180 B5E3C3FB00             .DATA.B     H'B5,H'E3,H'C3,H'FB,H'00
    00000185 00000001               .RES.B      1
    00000186 00000002               .RES.W      1
    00000188              L640:
    00000188 B1E4C6C2D7             .DATA.B     H'B1,H'E4,H'C6,H'C2,H'D7,H'AE,H'BA,H'C5,H'00
             AEBAC500     
    00000191 00000001               .RES.B      1
    00000192 00000002               .RES.W      1
    00000194              L641:
    00000194 B1E4C6C2B8             .DATA.B     H'B1,H'E4,H'C6,H'C2,H'B8,H'DF,H'B3,H'CC,H'00
             DFB3CC00     
    0000019D 00000001               .RES.B      1
    0000019E 00000002               .RES.W      1
    000001A0              L642:
    000001A0 B0EBBEB6               .DATA.B     H'B0,H'EB,H'BE,H'B6
    000001A4 20                     .SDATA      " "
    000001A5 00                     .DATA.B     H'00




























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 01-Jun-2015 13:40:50  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        17




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      456



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000011AC Byte(s)
CONSTANT SECTION (C):                               000001A6 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00001352 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           58
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           8
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           251






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkDDEA.tmp 

