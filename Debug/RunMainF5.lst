SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    1

************ OBJECT LISTING ************

FILE NAME: F:\0.ø™∑¢\2015-03-06–ﬁ∏ƒ…Ë÷√—°œÓ\2015-03-06–ﬁ∏ƒ…Ë÷√—°œÓ\RunMainF5.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.     1    #include "headfile.h"








P   00000000              _PrintTables:                    ; function: PrintTables
                                                           ; frame size=44
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 6073                   MOV         R7,R0
    00000004 D350                   MOV.L       L1029+8,R3 ; _strlen
    00000006 2FD6                   MOV.L       R13,@-R15
    00000008 2FC6                   MOV.L       R12,@-R15
    0000000A 6C63                   MOV         R6,R12
    0000000C 2FB6                   MOV.L       R11,@-R15
    0000000E EB1C                   MOV         #28,R11
    00000010 2FA6                   MOV.L       R10,@-R15
    00000012 2F96                   MOV.L       R9,@-R15
    00000014 2F86                   MOV.L       R8,@-R15
    00000016 6943                   MOV         R4,R9
    00000018 4F22                   STS.L       PR,@-R15
    0000001A 4F12                   STS.L       MACL,@-R15
    0000001C 7FF8                   ADD         #-8,R15
    0000001E 2F51                   MOV.W       R5,@R15
    00000020 81F2                   MOV.W       R0,@(4,R15)
    00000022 430B                   JSR         @R3
    00000024 64C3                   MOV         R12,R4
    00000026 6A03                   MOV         R0,R10
    00000028 63F1                   MOV.W       @R15,R3
    0000002A 62B3                   MOV         R11,R2
    0000002C 292F                   MULS        R2,R9
    0000002E 4308                   SHLL2       R3
    00000030 091A                   STS         MACL,R9
    00000032 4300                   SHLL        R3
    00000034 2F31                   MOV.W       R3,@R15
    00000036 7910                   ADD         #16,R9
    00000038 85F2                   MOV.W       @(4,R15),R0
    0000003A 6E3F                   EXTS.W      R3,R14
    0000003C 2008                   TST         R0,R0
    0000003E 8D1C                   BT/S        L870
    00000040 6D9F                   EXTS.W      R9,R13
    00000042 67E3                   MOV         R14,R7
    00000044 D141                   MOV.L       L1029+12,R1; _Bdisp_AreaReverseVRAM
    00000046 66D3                   MOV         R13,R6
    00000048 7707                   ADD         #7,R7
    0000004A 761B                   ADD         #27,R6
    0000004C 65E3                   MOV         R14,R5
    0000004E 410B                   JSR         @R1
    00000050 64D3                   MOV         R13,R4
    00000052 E712                   MOV         #18,R7
    00000054 66C3                   MOV         R12,R6
    00000056 65E3                   MOV         R14,R5
    00000058 E02E                   MOV         #46,R0
    0000005A 03FD                   MOV.W       @(R0,R15),R3
    0000005C 2338                   TST         R3,R3
    0000005E 8D0A                   BT/S        L871
    00000060 7501                   ADD         #1,R5
    00000062 63A3                   MOV         R10,R3
    00000064 4A08                   SHLL2       R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000066 3A3C                   ADD         R3,R10
    00000068 3BA8                   SUB         R10,R11
    0000006A 64B3                   MOV         R11,R4
    0000006C E300                   MOV         #0,R3
    0000006E 3347                   CMP/GT      R4,R3
    00000070 343E                   ADDC        R3,R4
    00000072 A025                   BRA         L1019
    00000074 4421                   SHAR        R4
    00000076              L871:                             
    00000076 A023                   BRA         L1019
    00000078 E400                   MOV         #0,R4
    0000007A              L870:                             

    0000007A 69E3                   MOV         R14,R9
    0000007C D134                   MOV.L       L1029+16,R1; _Bdisp_DrawLineVRAM
    0000007E 68D3                   MOV         R13,R8
    00000080 7907                   ADD         #7,R9
    00000082 6793                   MOV         R9,R7
    00000084 781B                   ADD         #27,R8
    00000086 6683                   MOV         R8,R6
    00000088 65E3                   MOV         R14,R5
    0000008A 410B                   JSR         @R1
    0000008C 6483                   MOV         R8,R4
    0000008E 6793                   MOV         R9,R7
    00000090 D32F                   MOV.L       L1029+16,R3; _Bdisp_DrawLineVRAM
    00000092 6683                   MOV         R8,R6
    00000094 6593                   MOV         R9,R5
    00000096 430B                   JSR         @R3
    00000098 64D3                   MOV         R13,R4
    0000009A E710                   MOV         #16,R7
    0000009C 66C3                   MOV         R12,R6
    0000009E 65E3                   MOV         R14,R5
    000000A0 E02E                   MOV         #46,R0
    000000A2 03FD                   MOV.W       @(R0,R15),R3
    000000A4 2338                   TST         R3,R3
    000000A6 8D0A                   BT/S        L874
    000000A8 7501                   ADD         #1,R5
    000000AA 63A3                   MOV         R10,R3
    000000AC 4A08                   SHLL2       R10
    000000AE 3A3C                   ADD         R3,R10
    000000B0 3BA8                   SUB         R10,R11
    000000B2 64B3                   MOV         R11,R4
    000000B4 E300                   MOV         #0,R3
    000000B6 3347                   CMP/GT      R4,R3
    000000B8 343E                   ADDC        R3,R4
    000000BA A001                   BRA         L1019
    000000BC 4421                   SHAR        R4
    000000BE              L874:                             
    000000BE E400                   MOV         #0,R4
    000000C0              L1019:                            
    000000C0 D324                   MOV.L       L1029+20,R3; _PrintMini
    000000C2 34DC                   ADD         R13,R4
    000000C4 7401                   ADD         #1,R4
    000000C6 7F08                   ADD         #8,R15
    000000C8 4F16                   LDS.L       @R15+,MACL
    000000CA 4F26                   LDS.L       @R15+,PR
    000000CC 68F6                   MOV.L       @R15+,R8
    000000CE 69F6                   MOV.L       @R15+,R9




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000D0 6AF6                   MOV.L       @R15+,R10
    000000D2 6BF6                   MOV.L       @R15+,R11
    000000D4 6CF6                   MOV.L       @R15+,R12
    000000D6 6DF6                   MOV.L       @R15+,R13
    000000D8 432B                   JMP         @R3
    000000DA 6EF6                   MOV.L       @R15+,R14
    000000DC              _PrintTableFormats:              ; function: PrintTableFormats
                                                           ; frame size=156
    000000DC 2FE6                   MOV.L       R14,@-R15
    000000DE 4F22                   STS.L       PR,@-R15
    000000E0 902E                   MOV.W       L1029,R0   ; H'FF70
    000000E2 3F0C                   ADD         R0,R15
    000000E4 6043                   MOV         R4,R0
    000000E6 81F2                   MOV.W       R0,@(4,R15)
    000000E8 6053                   MOV         R5,R0
    000000EA E503                   MOV         #3,R5
    000000EC 81F4                   MOV.W       R0,@(8,R15)
    000000EE 6063                   MOV         R6,R0
    000000F0 81F6                   MOV.W       R0,@(12,R15)
    000000F2 2F71                   MOV.W       R7,@R15
    000000F4 9025                   MOV.W       L1029+2,R0 ; H'0098
    000000F6 30FC                   ADD         R15,R0
    000000F8 7004                   ADD         #4,R0
    000000FA 2508                   TST         R0,R5
    000000FC 8903                   BT          L876
    000000FE 9520                   MOV.W       L1029+2,R5 ; H'0098
    00000100 35FC                   ADD         R15,R5
    00000102 A003                   BRA         L877
    00000104 7508                   ADD         #8,R5
    00000106              L876:                             
    00000106 951C                   MOV.W       L1029+2,R5 ; H'0098
    00000108 35FC                   ADD         R15,R5
    0000010A 7504                   ADD         #4,R5
    0000010C              L877:                             
    0000010C 9019                   MOV.W       L1029+2,R0 ; H'0098
    0000010E 6EF3                   MOV         R15,R14
    00000110 D311                   MOV.L       L1029+24,R3; _vsprintf
    00000112 6653                   MOV         R5,R6
    00000114 05FE                   MOV.L       @(R0,R15),R5
    00000116 7E10                   ADD         #16,R14
    00000118 430B                   JSR         @R3
    0000011A 64E3                   MOV         R14,R4
    0000011C E000                   MOV         #0,R0
    0000011E 66E3                   MOV         R14,R6
    00000120 80E6                   MOV.B       R0,@(6,R14)
    00000122 63F1                   MOV.W       @R15,R3
    00000124 2F36                   MOV.L       R3,@-R15
    00000126 85F8                   MOV.W       @(16,R15),R0
    00000128 6703                   MOV         R0,R7
    0000012A 85F6                   MOV.W       @(12,R15),R0
    0000012C 6503                   MOV         R0,R5
    0000012E 85F4                   MOV.W       @(8,R15),R0
    00000130 BF66                   BSR         _PrintTables
    00000132 6403                   MOV         R0,R4
    00000134 9106                   MOV.W       L1029+4,R1 ; H'0094
    00000136 E000                   MOV         #0,R0
    00000138 3F1C                   ADD         R1,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000013A 4F26                   LDS.L       @R15+,PR
    0000013C 000B                   RTS
    0000013E 6EF6                   MOV.L       @R15+,R14
    00000140              L1029:                            
    00000140 FF70                   .DATA.W     H'FF70
    00000142 0098                   .DATA.W     H'0098
    00000144 0094                   .DATA.W     H'0094
    00000146 0000                   .DATA.W     0
    00000148 <00000000>             .DATA.L     _strlen
    0000014C <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00000150 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000154 <00000000>             .DATA.L     _PrintMini
    00000158 <00000000>             .DATA.L     _vsprintf
    0000015C              _PrintTableIndexs:               ; function: PrintTableIndexs
                                                           ; frame size=28
    0000015C 2FE6                   MOV.L       R14,@-R15
    0000015E 2FD6                   MOV.L       R13,@-R15
    00000160 4F22                   STS.L       PR,@-R15
    00000162 6D53                   MOV         R5,R13
    00000164 7FF8                   ADD         #-8,R15
    00000166 4D11                   CMP/PZ      R13
    00000168 8F03                   BF/S        L880
    0000016A 6E43                   MOV         R4,R14
    0000016C 927C                   MOV.W       L1030,R2   ; H'03E7
    0000016E 3D27                   CMP/GT      R2,R13
    00000170 8B01                   BF          L879
    00000172              L880:                             
    00000172 A018                   BRA         L881
    00000174 E000                   MOV         #0,R0
    00000176              L879:                             
    00000176 2FD6                   MOV.L       R13,@-R15
    00000178 D23D                   MOV.L       L1030+8,R2 ; L547
    0000017A 2F26                   MOV.L       R2,@-R15
    0000017C D33D                   MOV.L       L1030+12,R3; _sprintf
    0000017E 64F3                   MOV         R15,R4
    00000180 430B                   JSR         @R3
    00000182 7408                   ADD         #8,R4
    00000184 D23C                   MOV.L       L1030+16,R2; _Bdisp_AreaReverseVRAM
    00000186 7F08                   ADD         #8,R15
    00000188 4E08                   SHLL2       R14
    0000018A 4E00                   SHLL        R14
    0000018C 67E3                   MOV         R14,R7
    0000018E 7707                   ADD         #7,R7
    00000190 E60F                   MOV         #15,R6
    00000192 65E3                   MOV         R14,R5
    00000194 420B                   JSR         @R2
    00000196 E400                   MOV         #0,R4
    00000198 D338                   MOV.L       L1030+20,R3; _PrintMini
    0000019A E712                   MOV         #18,R7
    0000019C 66F3                   MOV         R15,R6
    0000019E 65E3                   MOV         R14,R5
    000001A0 7502                   ADD         #2,R5
    000001A2 430B                   JSR         @R3
    000001A4 E401                   MOV         #1,R4
    000001A6              L881:                             
    000001A6 7F08                   ADD         #8,R15
    000001A8 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001AA 6DF6                   MOV.L       @R15+,R13
    000001AC 000B                   RTS
    000001AE 6EF6                   MOV.L       @R15+,R14
    000001B0              _WhetherCover:                   ; function: WhetherCover
                                                           ; frame size=24
    000001B0 2FE6                   MOV.L       R14,@-R15
    000001B2 2FD6                   MOV.L       R13,@-R15
    000001B4 2FC6                   MOV.L       R12,@-R15
    000001B6 2FB6                   MOV.L       R11,@-R15
    000001B8 2FA6                   MOV.L       R10,@-R15
    000001BA 4F22                   STS.L       PR,@-R15
    000001BC D330                   MOV.L       L1030+24,R3; _PopUpWin
    000001BE 430B                   JSR         @R3
    000001C0 E405                   MOV         #5,R4
    000001C2 E50C                   MOV         #12,R5
    000001C4 D230                   MOV.L       L1030+32,R2; _DispStr
    000001C6 D62F                   MOV.L       L1030+28,R6; L551
    000001C8 420B                   JSR         @R2
    000001CA E430                   MOV         #48,R4
    000001CC D32F                   MOV.L       L1030+36,R3; _locate
    000001CE E505                   MOV         #5,R5
    000001D0 430B                   JSR         @R3
    000001D2 E407                   MOV         #7,R4
    000001D4 D42E                   MOV.L       L1030+40,R4; L552
    000001D6 D22F                   MOV.L       L1030+44,R2; _Print
    000001D8 420B                   JSR         @R2
    000001DA 0009                   NOP
    000001DC D32B                   MOV.L       L1030+36,R3; _locate
    000001DE E506                   MOV         #6,R5
    000001E0 430B                   JSR         @R3
    000001E2 E407                   MOV         #7,R4
    000001E4 D42C                   MOV.L       L1030+48,R4; L553
    000001E6 D22B                   MOV.L       L1030+44,R2; _Print
    000001E8 420B                   JSR         @R2
    000001EA 0009                   NOP
    000001EC DA2B                   MOV.L       L1030+52,R10; _GetKey
    000001EE EB00                   MOV         #0,R11
    000001F0 9C3B                   MOV.W       L1030+2,R12; H'753E
    000001F2 ED01                   MOV         #1,R13
    000001F4 DE2A                   MOV.L       L1030+56,R14; _key
    000001F6 D42A                   MOV.L       L1030+56,R4; _key
    000001F8 4A0B                   JSR         @R10
    000001FA 0009                   NOP
    000001FC 63E2                   MOV.L       @R14,R3
    000001FE 33C0                   CMP/EQ      R12,R3
    00000200 8903                   BT          L884
    00000202 9133                   MOV.W       L1030+4,R1 ; H'7532
    00000204 62E2                   MOV.L       @R14,R2
    00000206 3210                   CMP/EQ      R1,R2
    00000208 8B01                   BF          L883
    0000020A              L884:                             
    0000020A A001                   BRA         L885
    0000020C 64B3                   MOV         R11,R4
    0000020E              L883:                             
    0000020E 64D3                   MOV         R13,R4
    00000210              L885:                             
    00000210 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000212 6043                   MOV         R4,R0
    00000214 6AF6                   MOV.L       @R15+,R10
    00000216 6BF6                   MOV.L       @R15+,R11
    00000218 6CF6                   MOV.L       @R15+,R12
    0000021A 6DF6                   MOV.L       @R15+,R13
    0000021C 000B                   RTS
    0000021E 6EF6                   MOV.L       @R15+,R14
    00000220              _WheterSavaAS:                   ; function: WheterSavaAS
                                                           ; frame size=48
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __slow_strcpy
    00000220 2FE6                   MOV.L       R14,@-R15
    00000222 2FD6                   MOV.L       R13,@-R15
    00000224 2FC6                   MOV.L       R12,@-R15
    00000226 2FB6                   MOV.L       R11,@-R15
    00000228 2FA6                   MOV.L       R10,@-R15
    0000022A 2F96                   MOV.L       R9,@-R15
    0000022C 4F22                   STS.L       PR,@-R15
    0000022E 7FF0                   ADD         #-16,R15
    00000230 D21C                   MOV.L       L1030+60,R2; L560
    00000232 6EF3                   MOV         R15,R14
    00000234 D31C                   MOV.L       L1030+64,R3; __slow_mvn
    00000236 61F3                   MOV         R15,R1
    00000238 430B                   JSR         @R3
    0000023A E00D                   MOV         #13,R0
    0000023C DC1B                   MOV.L       L1030+68,R12; _setup_data
    0000023E E600                   MOV         #0,R6
    00000240 E50D                   MOV         #13,R5
    00000242 A007                   BRA         L889
    00000244 6463                   MOV         R6,R4
    00000246              L890:                             
    00000246 6043                   MOV         R4,R0
    00000248 63C3                   MOV         R12,R3
    0000024A 7304                   ADD         #4,R3
    0000024C 334C                   ADD         R4,R3
    0000024E 7401                   ADD         #1,R4
    00000250 6330                   MOV.B       @R3,R3
    00000252 0E34                   MOV.B       R3,@(R0,R14)
    00000254              L889:                             
    00000254 3453                   CMP/GE      R5,R4
    00000256 8903                   BT          L891
    00000258 D015                   MOV.L       L1030+72,R0; H'00000004+_setup_data
    0000025A 004C                   MOV.B       @(R0,R4),R0
    0000025C 882E                   CMP/EQ      #46,R0
    0000025E 8BF2                   BF          L890
    00000260              L891:                             
    00000260 3453                   CMP/GE      R5,R4
    00000262 8B27                   BF          L892
    00000264 A027                   BRA         L893
    00000266 E00C                   MOV         #12,R0
    00000268              L1030:                            
    00000268 03E7                   .DATA.W     H'03E7
    0000026A 753E                   .DATA.W     H'753E
    0000026C 7532                   .DATA.W     H'7532
    0000026E 0000                   .DATA.W     0
    00000270 <00000000>             .DATA.L     L547
    00000274 <00000000>             .DATA.L     _sprintf




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000278 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    0000027C <00000000>             .DATA.L     _PrintMini
    00000280 <00000000>             .DATA.L     _PopUpWin
    00000284 <00000000>             .DATA.L     L551
    00000288 <00000000>             .DATA.L     _DispStr
    0000028C <00000000>             .DATA.L     _locate
    00000290 <00000000>             .DATA.L     L552
    00000294 <00000000>             .DATA.L     _Print
    00000298 <00000000>             .DATA.L     L553
    0000029C <00000000>             .DATA.L     _GetKey
    000002A0 <00000000>             .DATA.L     _key
    000002A4 <00000000>             .DATA.L     L560
    000002A8 <00000000>             .DATA.L     __slow_mvn
    000002AC <00000000>             .DATA.L     _setup_data
    000002B0 <00000004>             .DATA.L     H'00000004+_setup_data
    000002B4              L892:                             
    000002B4 6043                   MOV         R4,R0
    000002B6              L893:                             
    000002B6 0E64                   MOV.B       R6,@(R0,R14)
    000002B8 D21F                   MOV.L       L1031+4,R2 ; _PopUpWin
    000002BA 420B                   JSR         @R2
    000002BC E404                   MOV         #4,R4
    000002BE E508                   MOV         #8,R5
    000002C0 D31F                   MOV.L       L1031+12,R3; _DispStr
    000002C2 D61E                   MOV.L       L1031+8,R6 ; L564
    000002C4 430B                   JSR         @R3
    000002C6 E418                   MOV         #24,R4
    000002C8 D91E                   MOV.L       L1031+16,R9; _InputString
    000002CA 6AE3                   MOV         R14,R10
    000002CC 9B32                   MOV.W       L1031,R11  ; H'7534
    000002CE 6DB3                   MOV         R11,R13
    000002D0 7DFE                   ADD         #-2,R13
    000002D2              L894:                             
    000002D2 E208                   MOV         #8,R2
    000002D4 2F26                   MOV.L       R2,@-R15
    000002D6 E701                   MOV         #1,R7
    000002D8 66E3                   MOV         R14,R6
    000002DA E518                   MOV         #24,R5
    000002DC 490B                   JSR         @R9
    000002DE 6453                   MOV         R5,R4
    000002E0 6403                   MOV         R0,R4
    000002E2 34D0                   CMP/EQ      R13,R4
    000002E4 8D1D                   BT/S        L899
    000002E6 7F04                   ADD         #4,R15
    000002E8 63A0                   MOV.B       @R10,R3
    000002EA 2338                   TST         R3,R3
    000002EC 34B0                   CMP/EQ      R11,R4
    000002EE 8BF0                   BF          L894

    000002F0 34D0                   CMP/EQ      R13,R4
    000002F2 8916                   BT          L899
    000002F4 D514                   MOV.L       L1031+20,R5; L567
    000002F6 ED01                   MOV         #1,R13
    000002F8 D214                   MOV.L       L1031+24,R2; _strcat
    000002FA 420B                   JSR         @R2
    000002FC 64E3                   MOV         R14,R4
    000002FE D314                   MOV.L       L1031+28,R3; _TestSRDFile
    00000300 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000302 64E3                   MOV         R14,R4
    00000304 2008                   TST         R0,R0
    00000306 8902                   BT          L900

    00000308 BF52                   BSR         _WhetherCover
    0000030A 0009                   NOP
    0000030C 6D03                   MOV         R0,R13
    0000030E              L900:                             

    0000030E 2DD8                   TST         R13,R13
    00000310 8907                   BT          L899
    00000312 D310                   MOV.L       L1031+32,R3; _SaveSRDFile
    00000314 430B                   JSR         @R3
    00000316 64E3                   MOV         R14,R4
    00000318 D20F                   MOV.L       L1031+36,R2; __slow_strcpy
    0000031A 61E3                   MOV         R14,R1
    0000031C 60C3                   MOV         R12,R0
    0000031E 420B                   JSR         @R2
    00000320 7004                   ADD         #4,R0
    00000322              L899:                             
    00000322 7F10                   ADD         #16,R15
    00000324 4F26                   LDS.L       @R15+,PR
    00000326 69F6                   MOV.L       @R15+,R9
    00000328 6AF6                   MOV.L       @R15+,R10
    0000032A 6BF6                   MOV.L       @R15+,R11
    0000032C 6CF6                   MOV.L       @R15+,R12
    0000032E 6DF6                   MOV.L       @R15+,R13
    00000330 000B                   RTS
    00000332 6EF6                   MOV.L       @R15+,R14
    00000334              L1031:                            
    00000334 7534                   .DATA.W     H'7534
    00000336 0000                   .DATA.W     0
    00000338 <00000000>             .DATA.L     _PopUpWin
    0000033C <00000000>             .DATA.L     L564
    00000340 <00000000>             .DATA.L     _DispStr
    00000344 <00000000>             .DATA.L     _InputString
    00000348 <00000000>             .DATA.L     L567
    0000034C <00000000>             .DATA.L     _strcat
    00000350 <00000000>             .DATA.L     _TestSRDFile
    00000354 <00000000>             .DATA.L     _SaveSRDFile
    00000358 <00000000>             .DATA.L     __slow_strcpy
    0000035C              _SelSetupF5:                     ; function: SelSetupF5
                                                           ; frame size=68
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __slow_strcpy
    0000035C 2FE6                   MOV.L       R14,@-R15
    0000035E 2FD6                   MOV.L       R13,@-R15
    00000360 2FC6                   MOV.L       R12,@-R15
    00000362 2FB6                   MOV.L       R11,@-R15
    00000364 2FA6                   MOV.L       R10,@-R15
    00000366 EB00                   MOV         #0,R11
    00000368 DD44                   MOV.L       L1032+10,R13; _index
    0000036A 2F96                   MOV.L       R9,@-R15
    0000036C 2F86                   MOV.L       R8,@-R15
    0000036E E901                   MOV         #1,R9
    00000370 D343                   MOV.L       L1032+14,R3; _need_redraw
    00000372 4F22                   STS.L       PR,@-R15
    00000374 D543                   MOV.L       L1032+18,R5; _stAsc6x12
    00000376 7FE8                   ADD         #-24,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000378 D443                   MOV.L       L1032+22,R4; _stHz12x12
    0000037A 2DB2                   MOV.L       R11,@R13
    0000037C D243                   MOV.L       L1032+26,R2; _SetMyFont
    0000037E 420B                   JSR         @R2
    00000380 2392                   MOV.L       R9,@R3
    00000382 6EF3                   MOV         R15,R14
    00000384 D842                   MOV.L       L1032+30,R8; _locate
    00000386 7E08                   ADD         #8,R14
    00000388 DA42                   MOV.L       L1032+34,R10; _setup_data
    0000038A 63E3                   MOV         R14,R3
    0000038C DC42                   MOV.L       L1032+38,R12; _key
    0000038E 1F31                   MOV.L       R3,@(4,R15)
    00000390              L903:                             
    00000390 D13B                   MOV.L       L1032+14,R1; _need_redraw
    00000392 6012                   MOV.L       @R1,R0
    00000394 8801                   CMP/EQ      #1,R0
    00000396 8B35                   BF          L904
    00000398 D240                   MOV.L       L1032+42,R2; _PopUpWin
    0000039A 420B                   JSR         @R2
    0000039C E406                   MOV         #6,R4
    0000039E E70A                   MOV         #10,R7
    000003A0 D240                   MOV.L       L1032+50,R2; _DrawPicture
    000003A2 E610                   MOV         #16,R6
    000003A4 D33E                   MOV.L       L1032+46,R3; _G_ICON_SAVE
    000003A6 E509                   MOV         #9,R5
    000003A8 2F36                   MOV.L       R3,@-R15
    000003AA 420B                   JSR         @R2
    000003AC E420                   MOV         #32,R4
    000003AE E508                   MOV         #8,R5
    000003B0 D33E                   MOV.L       L1032+58,R3; _DispStr
    000003B2 D63D                   MOV.L       L1032+54,R6; L574
    000003B4 430B                   JSR         @R3
    000003B6 E430                   MOV         #48,R4
    000003B8 D23D                   MOV.L       L1032+62,R2; _G_ICON_OPEN
    000003BA E70A                   MOV         #10,R7
    000003BC D339                   MOV.L       L1032+50,R3; _DrawPicture
    000003BE E610                   MOV         #16,R6
    000003C0 2F26                   MOV.L       R2,@-R15
    000003C2 E519                   MOV         #25,R5
    000003C4 430B                   JSR         @R3
    000003C6 E420                   MOV         #32,R4
    000003C8 D63A                   MOV.L       L1032+66,R6; L575
    000003CA E518                   MOV         #24,R5
    000003CC D237                   MOV.L       L1032+58,R2; _DispStr
    000003CE 420B                   JSR         @R2
    000003D0 E430                   MOV         #48,R4
    000003D2 E70A                   MOV         #10,R7
    000003D4 D233                   MOV.L       L1032+50,R2; _DrawPicture
    000003D6 E610                   MOV         #16,R6
    000003D8 D337                   MOV.L       L1032+70,R3; _G_ICON_OTHER
    000003DA E529                   MOV         #41,R5
    000003DC 2F36                   MOV.L       R3,@-R15
    000003DE 420B                   JSR         @R2
    000003E0 E420                   MOV         #32,R4
    000003E2 7F0C                   ADD         #12,R15
    000003E4 D635                   MOV.L       L1032+74,R6; L576
    000003E6 E528                   MOV         #40,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003E8 D330                   MOV.L       L1032+58,R3; _DispStr
    000003EA 430B                   JSR         @R3
    000003EC E430                   MOV         #48,R4
    000003EE E670                   MOV         #112,R6
    000003F0 D333                   MOV.L       L1032+78,R3; _Bdisp_AreaReverseVRAM
    000003F2 67D2                   MOV.L       @R13,R7
    000003F4 4708                   SHLL2       R7
    000003F6 4708                   SHLL2       R7
    000003F8 2F72                   MOV.L       R7,@R15
    000003FA 7714                   ADD         #20,R7
    000003FC 65F2                   MOV.L       @R15,R5
    000003FE 7508                   ADD         #8,R5
    00000400 430B                   JSR         @R3
    00000402 E40E                   MOV         #14,R4
    00000404              L904:                             
    00000404 D424                   MOV.L       L1032+38,R4; _key
    00000406 D22F                   MOV.L       L1032+82,R2; _GetKey
    00000408 420B                   JSR         @R2
    0000040A 0009                   NOP
    0000040C 9331                   MOV.W       L1032,R3   ; H'7542
    0000040E 62C2                   MOV.L       @R12,R2
    00000410 3230                   CMP/EQ      R3,R2
    00000412 8B08                   BF          L905
    00000414 60D2                   MOV.L       @R13,R0
    00000416 70FF                   ADD         #-1,R0
    00000418 4011                   CMP/PZ      R0
    0000041A 8D02                   BT/S        L906
    0000041C 2D02                   MOV.L       R0,@R13
    0000041E E102                   MOV         #2,R1
    00000420 2D12                   MOV.L       R1,@R13
    00000422              L906:                             
    00000422 D317                   MOV.L       L1032+14,R3; _need_redraw
    00000424 2392                   MOV.L       R9,@R3
    00000426              L905:                             
    00000426 9225                   MOV.W       L1032+2,R2 ; H'7547
    00000428 61C2                   MOV.L       @R12,R1
    0000042A 3120                   CMP/EQ      R2,R1
    0000042C 8B08                   BF          L907
    0000042E E302                   MOV         #2,R3
    00000430 60D2                   MOV.L       @R13,R0
    00000432 7001                   ADD         #1,R0
    00000434 3037                   CMP/GT      R3,R0
    00000436 8F01                   BF/S        L908
    00000438 2D02                   MOV.L       R0,@R13
    0000043A 2DB2                   MOV.L       R11,@R13
    0000043C              L908:                             
    0000043C D310                   MOV.L       L1032+14,R3; _need_redraw
    0000043E 2392                   MOV.L       R9,@R3
    00000440              L907:                             
    00000440 64C2                   MOV.L       @R12,R4
    00000442 9218                   MOV.W       L1032+4,R2 ; H'7532
    00000444 3420                   CMP/EQ      R2,R4
    00000446 8B01                   BF          L1033
    00000448 A161                   BRA         __$EXIT$597
    0000044A 0009                   NOP
    0000044C              L1033:                            
    0000044C 9314                   MOV.W       L1032+6,R3 ; H'7534




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000044E 3430                   CMP/EQ      R3,R4
    00000450 8B9E                   BF          L903
    00000452 61F3                   MOV         R15,R1
    00000454 D21C                   MOV.L       L1032+86,R2; L581
    00000456 7108                   ADD         #8,R1
    00000458 D31C                   MOV.L       L1032+90,R3; __slow_mvn
    0000045A 430B                   JSR         @R3
    0000045C E00D                   MOV         #13,R0
    0000045E 60D2                   MOV.L       @R13,R0
    00000460 8800                   CMP/EQ      #0,R0
    00000462 893A                   BT          L776
    00000464 8801                   CMP/EQ      #1,R0
    00000466 8B01                   BF          L1034
    00000468 A0D2                   BRA         L777
    0000046A 0009                   NOP
    0000046C              L1034:                            
    0000046C 8802                   CMP/EQ      #2,R0
    0000046E A02F                   BRA         L1020
    00000470 0009                   NOP
    00000472              L1032:                            
    00000472 7542                   .DATA.W     H'7542
    00000474 7547                   .DATA.W     H'7547
    00000476 7532                   .DATA.W     H'7532
    00000478 7534                   .DATA.W     H'7534
    0000047A 0000                   .DATA.W     0
    0000047C <00000000>             .DATA.L     _index
    00000480 <00000000>             .DATA.L     _need_redraw
    00000484 <00000000>             .DATA.L     _stAsc6x12
    00000488 <00000000>             .DATA.L     _stHz12x12
    0000048C <00000000>             .DATA.L     _SetMyFont
    00000490 <00000000>             .DATA.L     _locate
    00000494 <00000000>             .DATA.L     _setup_data
    00000498 <00000000>             .DATA.L     _key
    0000049C <00000000>             .DATA.L     _PopUpWin
    000004A0 <00000000>             .DATA.L     _G_ICON_SAVE
    000004A4 <00000000>             .DATA.L     _DrawPicture
    000004A8 <00000000>             .DATA.L     L574
    000004AC <00000000>             .DATA.L     _DispStr
    000004B0 <00000000>             .DATA.L     _G_ICON_OPEN
    000004B4 <00000000>             .DATA.L     L575
    000004B8 <00000000>             .DATA.L     _G_ICON_OTHER
    000004BC <00000000>             .DATA.L     L576
    000004C0 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    000004C4 <00000000>             .DATA.L     _GetKey
    000004C8 <00000000>             .DATA.L     L581
    000004CC <00000000>             .DATA.L     __slow_mvn
    000004D0              L1020:                            
    000004D0 8B01                   BF          L1035
    000004D2 A0C7                   BRA         L779
    000004D4 0009                   NOP
    000004D6              L1035:                            
    000004D6 A117                   BRA         L912
    000004D8 0009                   NOP
    000004DA              L776:                            ; case label 
    000004DA A007                   BRA         L913
    000004DC 64B3                   MOV         R11,R4
    000004DE              L914:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004DE 6043                   MOV         R4,R0
    000004E0 63A3                   MOV         R10,R3
    000004E2 7304                   ADD         #4,R3
    000004E4 334C                   ADD         R4,R3
    000004E6 7401                   ADD         #1,R4
    000004E8 6330                   MOV.B       @R3,R3
    000004EA 0E34                   MOV.B       R3,@(R0,R14)
    000004EC              L913:                             
    000004EC E20D                   MOV         #13,R2
    000004EE 3423                   CMP/GE      R2,R4
    000004F0 8903                   BT          L915
    000004F2 D037                   MOV.L       L1036+6,R0 ; H'00000004+_setup_data
    000004F4 004C                   MOV.B       @(R0,R4),R0
    000004F6 882E                   CMP/EQ      #46,R0
    000004F8 8BF1                   BF          L914
    000004FA              L915:                             
    000004FA E30D                   MOV         #13,R3
    000004FC 3433                   CMP/GE      R3,R4
    000004FE 8B01                   BF          L916
    00000500 A001                   BRA         L917
    00000502 E20C                   MOV         #12,R2
    00000504              L916:                             
    00000504 6243                   MOV         R4,R2
    00000506              L917:                             
    00000506 32EC                   ADD         R14,R2
    00000508 22B0                   MOV.B       R11,@R2
    0000050A D232                   MOV.L       L1036+10,R2; _PopUpWin
    0000050C 420B                   JSR         @R2
    0000050E E404                   MOV         #4,R4
    00000510 D631                   MOV.L       L1036+14,R6; L564
    00000512 E508                   MOV         #8,R5
    00000514 D331                   MOV.L       L1036+18,R3; _DispStr
    00000516 430B                   JSR         @R3
    00000518 E418                   MOV         #24,R4
    0000051A              L918:                             
    0000051A E208                   MOV         #8,R2
    0000051C D330                   MOV.L       L1036+22,R3; _InputString
    0000051E E701                   MOV         #1,R7
    00000520 2F26                   MOV.L       R2,@-R15
    00000522 66E3                   MOV         R14,R6
    00000524 E518                   MOV         #24,R5
    00000526 430B                   JSR         @R3
    00000528 6453                   MOV         R5,R4
    0000052A 6403                   MOV         R0,R4
    0000052C 924D                   MOV.W       L1036,R2   ; H'7532
    0000052E 3420                   CMP/EQ      R2,R4
    00000530 8F02                   BF/S        L1037
    00000532 7F04                   ADD         #4,R15
    00000534 A0E8                   BRA         L912
    00000536 0009                   NOP
    00000538              L1037:                            
    00000538 53F1                   MOV.L       @(4,R15),R3
    0000053A 6230                   MOV.B       @R3,R2
    0000053C 9146                   MOV.W       L1036+2,R1 ; H'7534
    0000053E 2228                   TST         R2,R2
    00000540 3410                   CMP/EQ      R1,R4
    00000542 8BEA                   BF          L918




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000544 9241                   MOV.W       L1036,R2   ; H'7532
    00000546 3420                   CMP/EQ      R2,R4
    00000548 8B01                   BF          L1038
    0000054A A0DD                   BRA         L912
    0000054C 0009                   NOP
    0000054E              L1038:                            
    0000054E 2F92                   MOV.L       R9,@R15
    00000550 D524                   MOV.L       L1036+26,R5; L567
    00000552 D325                   MOV.L       L1036+30,R3; _strcat
    00000554 430B                   JSR         @R3
    00000556 64E3                   MOV         R14,R4
    00000558 D224                   MOV.L       L1036+34,R2; _TestSRDFile
    0000055A 420B                   JSR         @R2
    0000055C 64E3                   MOV         R14,R4
    0000055E 2008                   TST         R0,R0
    00000560 8924                   BT          L924
    00000562 D21C                   MOV.L       L1036+10,R2; _PopUpWin
    00000564 420B                   JSR         @R2
    00000566 E405                   MOV         #5,R4
    00000568 D621                   MOV.L       L1036+38,R6; L551
    0000056A E50C                   MOV         #12,R5
    0000056C D31B                   MOV.L       L1036+18,R3; _DispStr
    0000056E 430B                   JSR         @R3
    00000570 E430                   MOV         #48,R4
    00000572 E505                   MOV         #5,R5
    00000574 480B                   JSR         @R8
    00000576 E407                   MOV         #7,R4
    00000578 D41E                   MOV.L       L1036+42,R4; L552
    0000057A D21F                   MOV.L       L1036+46,R2; _Print
    0000057C 420B                   JSR         @R2
    0000057E 0009                   NOP
    00000580 E506                   MOV         #6,R5
    00000582 480B                   JSR         @R8
    00000584 E407                   MOV         #7,R4
    00000586 D41D                   MOV.L       L1036+50,R4; L553
    00000588 D31B                   MOV.L       L1036+46,R3; _Print
    0000058A 430B                   JSR         @R3
    0000058C 0009                   NOP
    0000058E D41C                   MOV.L       L1036+54,R4; _key
    00000590 D21C                   MOV.L       L1036+58,R2; _GetKey
    00000592 420B                   JSR         @R2
    00000594 0009                   NOP
    00000596 931A                   MOV.W       L1036+4,R3 ; H'753E
    00000598 62C2                   MOV.L       @R12,R2
    0000059A 3230                   CMP/EQ      R3,R2
    0000059C 8903                   BT          L927
    0000059E 9014                   MOV.W       L1036,R0   ; H'7532
    000005A0 61C2                   MOV.L       @R12,R1
    000005A2 3100                   CMP/EQ      R0,R1
    000005A4 8B01                   BF          L926
    000005A6              L927:                             
    000005A6 A001                   BRA         L924
    000005A8 2FB2                   MOV.L       R11,@R15
    000005AA              L926:                             
    000005AA 2F92                   MOV.L       R9,@R15
    000005AC              L924:                             

    000005AC 63F2                   MOV.L       @R15,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005AE 2338                   TST         R3,R3
    000005B0 8B01                   BF          L1039
    000005B2 A0A9                   BRA         L912
    000005B4 0009                   NOP
    000005B6              L1039:                            
    000005B6 D314                   MOV.L       L1036+62,R3; _SaveSRDFile
    000005B8 430B                   JSR         @R3
    000005BA 64E3                   MOV         R14,R4
    000005BC D213                   MOV.L       L1036+66,R2; __slow_strcpy
    000005BE 61E3                   MOV         R14,R1
    000005C0 60A3                   MOV         R10,R0
    000005C2 420B                   JSR         @R2
    000005C4 7004                   ADD         #4,R0
    000005C6 A09F                   BRA         L912
    000005C8 0009                   NOP
    000005CA              L1036:                            
    000005CA 7532                   .DATA.W     H'7532
    000005CC 7534                   .DATA.W     H'7534
    000005CE 753E                   .DATA.W     H'753E
    000005D0 <00000004>             .DATA.L     H'00000004+_setup_data
    000005D4 <00000000>             .DATA.L     _PopUpWin
    000005D8 <00000000>             .DATA.L     L564
    000005DC <00000000>             .DATA.L     _DispStr
    000005E0 <00000000>             .DATA.L     _InputString
    000005E4 <00000000>             .DATA.L     L567
    000005E8 <00000000>             .DATA.L     _strcat
    000005EC <00000000>             .DATA.L     _TestSRDFile
    000005F0 <00000000>             .DATA.L     L551
    000005F4 <00000000>             .DATA.L     L552
    000005F8 <00000000>             .DATA.L     _Print
    000005FC <00000000>             .DATA.L     L553
    00000600 <00000000>             .DATA.L     _key
    00000604 <00000000>             .DATA.L     _GetKey
    00000608 <00000000>             .DATA.L     _SaveSRDFile
    0000060C <00000000>             .DATA.L     __slow_strcpy
    00000610              L777:                            ; case label 
    00000610 D145                   MOV.L       L1040+4,R1 ; _SelectFiles
    00000612 410B                   JSR         @R1
    00000614 64E3                   MOV         R14,R4
    00000616 88FF                   CMP/EQ      #-1,R0
    00000618 8F0E                   BF/S        L932
    0000061A 2F02                   MOV.L       R0,@R15
    0000061C D243                   MOV.L       L1040+8,R2 ; _PopUpWin
    0000061E 420B                   JSR         @R2
    00000620 E401                   MOV         #1,R4
    00000622 E504                   MOV         #4,R5
    00000624 480B                   JSR         @R8
    00000626 E407                   MOV         #7,R4
    00000628 D441                   MOV.L       L1040+12,R4; L594
    0000062A D342                   MOV.L       L1040+16,R3; _Print
    0000062C 430B                   JSR         @R3
    0000062E 0009                   NOP
    00000630 D441                   MOV.L       L1040+20,R4; _key
    00000632 D242                   MOV.L       L1040+24,R2; _GetKey
    00000634 420B                   JSR         @R2
    00000636 0009                   NOP
    00000638              L932:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000638 60F2                   MOV.L       @R15,R0
    0000063A 8801                   CMP/EQ      #1,R0
    0000063C 8B12                   BF          L779
    0000063E D240                   MOV.L       L1040+28,R2; _LoadSRDFile
    00000640 420B                   JSR         @R2
    00000642 64E3                   MOV         R14,R4
    00000644 D33F                   MOV.L       L1040+32,R3; __slow_strcpy
    00000646 61E3                   MOV         R14,R1
    00000648 60A3                   MOV         R10,R0
    0000064A 430B                   JSR         @R3
    0000064C 7004                   ADD         #4,R0
    0000064E 64A3                   MOV         R10,R4
    00000650 D23B                   MOV.L       L1040+28,R2; _LoadSRDFile
    00000652 420B                   JSR         @R2
    00000654 7404                   ADD         #4,R4
    00000656 8801                   CMP/EQ      #1,R0
    00000658 8B59                   BF          __$EXIT$597
    0000065A D23B                   MOV.L       L1040+36,R2; _SaveIniSRDFile
    0000065C 420B                   JSR         @R2
    0000065E 0009                   NOP

    00000660 A055                   BRA         __$EXIT$597
    00000662 0009                   NOP
    00000664              L779:                            ; case label 
    00000664 D231                   MOV.L       L1040+8,R2 ; _PopUpWin
    00000666 420B                   JSR         @R2
    00000668 E405                   MOV         #5,R4
    0000066A E50C                   MOV         #12,R5
    0000066C D338                   MOV.L       L1040+44,R3; _DispStr
    0000066E D637                   MOV.L       L1040+40,R6; L598
    00000670 430B                   JSR         @R3
    00000672 E430                   MOV         #48,R4
    00000674 E505                   MOV         #5,R5
    00000676 480B                   JSR         @R8
    00000678 E407                   MOV         #7,R4
    0000067A D436                   MOV.L       L1040+48,R4; L552
    0000067C D22D                   MOV.L       L1040+16,R2; _Print
    0000067E 420B                   JSR         @R2
    00000680 0009                   NOP
    00000682 E506                   MOV         #6,R5
    00000684 480B                   JSR         @R8
    00000686 E407                   MOV         #7,R4
    00000688 D433                   MOV.L       L1040+52,R4; L553
    0000068A D32A                   MOV.L       L1040+16,R3; _Print
    0000068C 430B                   JSR         @R3
    0000068E 0009                   NOP
    00000690 D429                   MOV.L       L1040+20,R4; _key
    00000692 D22A                   MOV.L       L1040+24,R2; _GetKey
    00000694 420B                   JSR         @R2
    00000696 0009                   NOP
    00000698 9344                   MOV.W       L1040,R3   ; H'7539
    0000069A 62C2                   MOV.L       @R12,R2
    0000069C 3230                   CMP/EQ      R3,R2
    0000069E 8B33                   BF          L912
    000006A0 D222                   MOV.L       L1040+8,R2 ; _PopUpWin
    000006A2 420B                   JSR         @R2
    000006A4 E405                   MOV         #5,R4
    000006A6 E50C                   MOV         #12,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006A8 D329                   MOV.L       L1040+44,R3; _DispStr
    000006AA D62C                   MOV.L       L1040+56,R6; L600
    000006AC 430B                   JSR         @R3
    000006AE E428                   MOV         #40,R4
    000006B0 E505                   MOV         #5,R5
    000006B2 480B                   JSR         @R8
    000006B4 E407                   MOV         #7,R4
    000006B6 D427                   MOV.L       L1040+48,R4; L552
    000006B8 D21E                   MOV.L       L1040+16,R2; _Print
    000006BA 420B                   JSR         @R2
    000006BC 0009                   NOP
    000006BE E506                   MOV         #6,R5
    000006C0 480B                   JSR         @R8
    000006C2 E407                   MOV         #7,R4
    000006C4 D424                   MOV.L       L1040+52,R4; L553
    000006C6 D31B                   MOV.L       L1040+16,R3; _Print
    000006C8 430B                   JSR         @R3
    000006CA 0009                   NOP
    000006CC D41A                   MOV.L       L1040+20,R4; _key
    000006CE D21B                   MOV.L       L1040+24,R2; _GetKey
    000006D0 420B                   JSR         @R2
    000006D2 0009                   NOP
    000006D4 9326                   MOV.W       L1040,R3   ; H'7539
    000006D6 62C2                   MOV.L       @R12,R2
    000006D8 3230                   CMP/EQ      R3,R2
    000006DA 8B0A                   BF          L936
      RunMainF5.     2    #include "Binrunmain.h"
      RunMainF5.     3    #include "zbzfs.h"

      RunMainF5.     4    #include "MyFont.h"


      RunMainF5.     5    #include "cvs.h"
      RunMainF5.     6    #include <stdarg.h>
      RunMainF5.     7                
      RunMainF5.     8    
      RunMainF5.     9    double sd_to_xyaSrd( double stake, double distance, double angle, int xya );
      RunMainF5.    10    double xy_to_sdSrd( double PX, double PY, int sd );
      RunMainF5.    11                            
      RunMainF5.    12                            
      RunMainF5.    13    int PrintTables(short x,short y,char * str,short sel,short lbl)
      RunMainF5.    14    {
      RunMainF5.    15            int len;
      RunMainF5.    16            const int width = 28;
      RunMainF5.    17            len = strlen(str);
      RunMainF5.    18            x *= width;
      RunMainF5.    19            y *= 8;
      RunMainF5.    20            x += 16;
      RunMainF5.    21            if (sel)
      RunMainF5.    22            {
      RunMainF5.    23                    Bdisp_AreaReverseVRAM(x,y,x+width-1,y+7);
      RunMainF5.    24                    PrintMini(x+1+(lbl ? (width-5*len)/2:0),y+1,str,MINI_REV);
      RunMainF5.    25            }
      RunMainF5.    26            else
      RunMainF5.    27            {
      RunMainF5.    28    
      RunMainF5.    29                    Bdisp_DrawLineVRAM(x+width-1,y,x+width-1,y+7);
      RunMainF5.    30                    Bdisp_DrawLineVRAM(x,y+7,x+width-1,y+7);
      RunMainF5.    31                    PrintMini(x+1+(lbl ? (width-5*len)/2:0),y+1,str,MINI_OVER);
      RunMainF5.    32            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.    33    }
      RunMainF5.    34    int PrintTableFormats (short x,short y,short sel,short lbl,char * format,...)
      RunMainF5.    35    {
      RunMainF5.    36            char buffer[128];
      RunMainF5.    37            va_list parglist;
      RunMainF5.    38            va_start(parglist, format);
      RunMainF5.    39            vsprintf(buffer,format, parglist);
      RunMainF5.    40            va_end(pArgList);
      RunMainF5.    41            buffer[6] = 0;
      RunMainF5.    42            PrintTables(x,y,buffer,sel,lbl);
      RunMainF5.    43            return 0;
      RunMainF5.    44    }
      RunMainF5.    45    int PrintTableIndexs (int y,int index)
      RunMainF5.    46    {
      RunMainF5.    47            char buffer[8];
      RunMainF5.    48            if (index<0 || index>999) return 0;
      RunMainF5.    49            sprintf(buffer,"%d",index);
      RunMainF5.    50            y *= 8;
      RunMainF5.    51            Bdisp_AreaReverseVRAM(0,y,15,y+7);
      RunMainF5.    52            PrintMini(1,y+2,buffer,MINI_REV);
      RunMainF5.    53    }
      RunMainF5.    54    int WhetherCover()
      RunMainF5.    55    {
      RunMainF5.    56            int enter;
      RunMainF5.    57            PopUpWin(5);
      RunMainF5.    58            DispStr(48,12,"∏≤∏«?"); //fugai
      RunMainF5.    59            locate(7,5);Print("Yes : [F1]");
      RunMainF5.    60            locate(7,6);Print("No  : [F6]");
      RunMainF5.    61            do{
      RunMainF5.    62                    GetKey(&key);
      RunMainF5.    63                    if (key==KEY_CTRL_F6 || key==KEY_CTRL_EXIT){enter =0 ;break;}
      RunMainF5.    64                    else if (KEY_CTRL_F1) {enter = 1;break;}
      RunMainF5.    65            }while(1);
      RunMainF5.    66            return enter;
      RunMainF5.    67    }
      RunMainF5.    68    int WheterSavaAS()
      RunMainF5.    69    {
      RunMainF5.    70            char str[13]="";
      RunMainF5.    71            int suc,enter,i;
      RunMainF5.    72            for (i=0;i<13 && setup_data.route_name[i] != '.';++i)
      RunMainF5.    73                    str[i] = setup_data.route_name[i];
      RunMainF5.    74            str[i>=13 ? 12 : i] = 0;
      RunMainF5.    75            PopUpWin(4);
      RunMainF5.    76            DispStr(24,8,"\xce\xc4\xbc\xfe\xc3\xfb(*.srd)");//file_name
      RunMainF5.    77            do
      RunMainF5.    78            {
      RunMainF5.    79                    suc = InputString(24,24,str,1,8);
      RunMainF5.    80                    if (suc==KEY_CTRL_EXIT) break;
      RunMainF5.    81                    if (! str[0]) continue;
      RunMainF5.    82            }while(suc!=KEY_CTRL_EXE);
      RunMainF5.    83            if(suc!=KEY_CTRL_EXIT)
      RunMainF5.    84            {
      RunMainF5.    85                    enter = 1;
      RunMainF5.    86                    strcat(str,".srd");
      RunMainF5.    87                    if (TestSRDFile(str))
      RunMainF5.    88                    {
      RunMainF5.    89                            enter = WhetherCover();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.    90                    }
      RunMainF5.    91                    if (enter)
      RunMainF5.    92                    {
      RunMainF5.    93                            SaveSRDFile(str);
      RunMainF5.    94                            strcpy(setup_data.route_name,str);
      RunMainF5.    95                    }
      RunMainF5.    96            }
      RunMainF5.    97    }
      RunMainF5.    98    
      RunMainF5.    99    int SelSetupF5()
      RunMainF5.   100    {
      RunMainF5.   101            index = 0;
      RunMainF5.   102            need_redraw = REDRAW_PART;
      RunMainF5.   103            SetMyFont(&stHz12x12,&stAsc6x12);
      RunMainF5.   104            
      RunMainF5.   105            while(1)
      RunMainF5.   106            {
      RunMainF5.   107                    if (need_redraw == REDRAW_PART)
      RunMainF5.   108                    {
      RunMainF5.   109                            PopUpWin(6);
      RunMainF5.   110                            DrawPicture(32,9,       16,     10,     G_ICON_SAVE);   DispStr(48,8,"±£¥ÊŒ™ ");
      RunMainF5.   111                            DrawPicture(32,25,      16,     10,     G_ICON_OPEN);   DispStr(48,24,"¥Úø™ ");
      RunMainF5.   112                            DrawPicture(32,41,      16,     10,     G_ICON_OTHER);  DispStr(48,40,"–¬Ω® ");
      RunMainF5.   113                            
      RunMainF5.   114                            Bdisp_AreaReverseVRAM(14,8+16*index,112,20+index*16);
      RunMainF5.   115                    }
      RunMainF5.   116                    GetKey(&key);
      RunMainF5.   117                    if (key==KEY_CTRL_UP)   {if(--index<0) index = 2;need_redraw = REDRAW_PART;}
      RunMainF5.   118                    if (key==KEY_CTRL_DOWN) {if(++index>2) index = 0;need_redraw = REDRAW_PART;}
      RunMainF5.   119                    if (key==KEY_CTRL_EXIT) break;
      RunMainF5.   120                    if (key==KEY_CTRL_EXE)
      RunMainF5.   121                    {
      RunMainF5.   122                            char str[13]="";
      RunMainF5.   123                            int suc,enter,i;
      RunMainF5.   124                            switch(index)
      RunMainF5.   125                            {
      RunMainF5.   126                                    case 0:
      RunMainF5.   127                                            
      RunMainF5.   128                                            for (i=0;i<13 && setup_data.route_name[i] != '.';++i)
      RunMainF5.   129                                                    str[i] = setup_data.route_name[i];
      RunMainF5.   130                                            str[i>=13 ? 12 : i] = 0;
      RunMainF5.   131                                            PopUpWin(4);
      RunMainF5.   132                                            DispStr(24,8,"\xce\xc4\xbc\xfe\xc3\xfb(*.srd)");//file_name
      RunMainF5.   133                                            do
      RunMainF5.   134                                            {
      RunMainF5.   135                                                    suc = InputString(24,24,str,1,8);
      RunMainF5.   136                                                    if (suc==KEY_CTRL_EXIT) break;
      RunMainF5.   137                                                    if (! str[0]) continue;
      RunMainF5.   138                                            }while(suc!=KEY_CTRL_EXE);
      RunMainF5.   139                                            if(suc!=KEY_CTRL_EXIT)
      RunMainF5.   140                                            {
      RunMainF5.   141                                                    enter = 1;
      RunMainF5.   142                                                    strcat(str,".srd");
      RunMainF5.   143                                                    if (TestSRDFile(str))
      RunMainF5.   144                                                    {
      RunMainF5.   145                                                            PopUpWin(5);
      RunMainF5.   146                                                            DispStr(48,12,"∏≤∏«?"); //fugai




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.   147                                                            locate(7,5);Print("Yes : [F1]");
      RunMainF5.   148                                                            locate(7,6);Print("No  : [F6]");
      RunMainF5.   149                                                            do{
      RunMainF5.   150                                                                    GetKey(&key);
      RunMainF5.   151                                                                    if (key==KEY_CTRL_F6 || key==KEY_CTRL_EXIT
                         +){enter =0 ;break;}
      RunMainF5.   152                                                                    else if (KEY_CTRL_F1) {enter = 1;break;}
      RunMainF5.   153                                                            }while(1);
      RunMainF5.   154                                                    }
      RunMainF5.   155                                                    if (enter)
      RunMainF5.   156                                                    {
      RunMainF5.   157                                                            SaveSRDFile(str);
      RunMainF5.   158                                                            strcpy(setup_data.route_name,str);
      RunMainF5.   159                                                    }
      RunMainF5.   160                                            }     
      RunMainF5.   161                                            break;
      RunMainF5.   162                                    case 1:
      RunMainF5.   163                                            suc = SelectFiles (str);
      RunMainF5.   164                                            if (suc==-1)
      RunMainF5.   165                                            {
      RunMainF5.   166                                                    PopUpWin(1);
      RunMainF5.   167                                                    locate(7,4);Print("No File!");
      RunMainF5.   168                                                    GetKey(&key);
      RunMainF5.   169                                            }
      RunMainF5.   170                                            if(suc==1)
      RunMainF5.   171                                            {
      RunMainF5.   172                                                    LoadSRDFile (str);
      RunMainF5.   173                                                    strcpy(setup_data.route_name,str);
      RunMainF5.   174                                                    if(LoadSRDFile (setup_data.route_name)==1)
      RunMainF5.   175                                                    SaveIniSRDFile();
      RunMainF5.   176                                                    goto EXIT;
      RunMainF5.   177                                            }
      RunMainF5.   178                                            
      RunMainF5.   179                                    case 2:
      RunMainF5.   180                                            PopUpWin(5);
      RunMainF5.   181                                        DispStr(48,12,"–¬Ω®?"); 
      RunMainF5.   182                                        locate(7,5);Print("Yes : [F1]");
      RunMainF5.   183                                            locate(7,6);Print("No  : [F6]");
      RunMainF5.   184                                            GetKey(&key);
      RunMainF5.   185                                            if (key==KEY_CTRL_F1){
      RunMainF5.   186                                                    PopUpWin(5);
      RunMainF5.   187                                            DispStr(40,12,"±£¥Ê ˝æ›?"); 
      RunMainF5.   188                                            locate(7,5);Print("Yes : [F1]");
      RunMainF5.   189                                                locate(7,6);Print("No  : [F6]");
      RunMainF5.   190                                                GetKey(&key);
      RunMainF5.   191                                                    if(key==KEY_CTRL_F1)
      RunMainF5.   192                                                    {
      RunMainF5.   193                                                            if(setup_data.route_name[0]==0)
      RunMainF5.   194                                                {
      RunMainF5.   195                                                        WheterSavaAS();
      RunMainF5.   196                                                }
      RunMainF5.   197                                                else
      RunMainF5.   198                                                {
      RunMainF5.   199                                                        SaveSRDFile(setup_data.route_name);
      RunMainF5.   200                                                }
      RunMainF5.   201                                                    }                                               
      RunMainF5.   202                                                    setup_data.route_name[0]=0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.   203                                            route_initial(&route);
      RunMainF5.   204                                route_push_back(&route);
      RunMainF5.   205                                                    goto EXIT;
      RunMainF5.   206                                    }   
      RunMainF5.   207                                        break;
      RunMainF5.   208                                            
      RunMainF5.   209                                    default:break;
      RunMainF5.   210                            }
      RunMainF5.   211                            need_redraw = REDRAW_PART;
      RunMainF5.   212                    }
      RunMainF5.   213            }
      RunMainF5.   214            EXIT:
      RunMainF5.   215            return 0;
      RunMainF5.   216    }
      RunMainF5.   217    
      RunMainF5.   218    
      RunMainF5.   219    int RunF5_Calc()
      RunMainF5.   220    {
      RunMainF5.   221            
      RunMainF5.   222            char * table_label[]= {"DH","QDZH","ZDZH","X","Y","FWJ","ZX","QDBJ","ZDBJ"};
      RunMainF5.   223            char * icons[]          = {"Set","Add","Ins","DelL","DelA"};
      RunMainF5.   224            char * ch_text[]        = {"\xb5\xe3\xc3\xfb",
      RunMainF5.   225                                    "∆µ„◊Æ∫≈",
      RunMainF5.   226                                                            "÷’µ„◊Æ∫≈",
      RunMainF5.   227                                                            "X◊¯±Í ", 
      RunMainF5.   228                                                            "Y◊¯±Í ",
      RunMainF5.   229                                                            "∑ΩŒªΩ« ",
      RunMainF5.   230                                                            "◊™œÚ ",
      RunMainF5.   231                                                            "∆µ„∞Îæ∂",
      RunMainF5.   232                                                            "÷’µ„∞Îæ∂"};
      RunMainF5.   233            int x = 0,y = 0,i,j,t;
      RunMainF5.   234            int left = 0,top = 0;
      RunMainF5.   235            int refresh = REDRAW_ALL;
      RunMainF5.   236            int enter,suc;
      RunMainF5.   237            char str[13]="";
      RunMainF5.   238            char c;
      RunMainF5.   239            SetMyFont(&stHz12x12,&stAsc6x12);
      RunMainF5.   240       
      RunMainF5.   241            while(1){
      RunMainF5.   242                    if (refresh==REDRAW_ALL){
      RunMainF5.   243                            Bdisp_AllClr_VRAM();
      RunMainF5.   244                            for (i=0;i<4;++i)
      RunMainF5.   245                                 PrintTables(i,0,table_label[left+i],1,1);
      RunMainF5.   246                            t = route.size<= 1 ? 2 : 5;
      RunMainF5.   247                            for (i=0;i< t;++i)
      RunMainF5.   248                                    PrintIcon(i,icons[i],0);
      RunMainF5.   249                            PrintIcon(5,"?",0);
      RunMainF5.   250                            refresh = REDRAW_PART;
      RunMainF5.   251                    }
      RunMainF5.   252                    if (refresh==REDRAW_PART){
      RunMainF5.   253                            double * sd;
      RunMainF5.   254                            for (i=top;i<top+4 && i<route.size;++i){
      RunMainF5.   255                                    sd =  & (route.set[i].qd_zh);
      RunMainF5.   256                                    for (j=(left==0 ? 1:0);j<4;++j){
      RunMainF5.   257                                            //if (i==0 && j+left>2)
      RunMainF5.   258                                                    //PrintTable(j,i+1-top,"",y==i && x-left==j,0);
      RunMainF5.   259                                            //else




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.   260                                                    PrintTableFormats(j,i+1-top,y==i && x-left==j,0,"%lf",sd[j
                         ++left-1]);
      RunMainF5.   261                                    }
      RunMainF5.   262                                    if (left==0)
      RunMainF5.   263                                            PrintTableFormats(0,i+1-top,y==i && x-left==0,0,"%s",route.set[i].
                         +name);
      RunMainF5.   264                                    PrintTableIndexs(i-top+1,i);
      RunMainF5.   265                            }
      RunMainF5.   266                            if(x>0){
      RunMainF5.   267                                    //if (!(y==0 && x>2)){
      RunMainF5.   268                                            sd =  & (route.set[y].qd_zh);
      RunMainF5.   269                                            DispStr(0,42,ch_text[x]);
      RunMainF5.   270                                            PrintFloat(sd[x-1],49,42,0,setup_data.point);
      RunMainF5.   271                                    //}
      RunMainF5.   272                            }else{
      RunMainF5.   273                                    DispStr(0,42,ch_text[x]);
      RunMainF5.   274                                    PrintXY(51,44,route.set[y].name,0);
      RunMainF5.   275                            }
      RunMainF5.   276                            refresh = 0;
      RunMainF5.   277                    }
      RunMainF5.   278                    GetKey(&key);
      RunMainF5.   279                    switch (key){
      RunMainF5.   280                    case KEY_CTRL_UP:
      RunMainF5.   281                            y--;refresh = REDRAW_ALL;break;
      RunMainF5.   282                    case KEY_CTRL_DOWN:
      RunMainF5.   283                            y++;refresh = REDRAW_ALL;break;
      RunMainF5.   284                    case KEY_CTRL_LEFT:
      RunMainF5.   285                            x--;refresh = REDRAW_ALL;break;
      RunMainF5.   286                    case KEY_CTRL_RIGHT:
      RunMainF5.   287                            x++;refresh = REDRAW_ALL;break;
      RunMainF5.   288                    case KEY_CTRL_EXIT:
      RunMainF5.   289                        PopUpWin(5);
      RunMainF5.   290                            DispStr(48,12,"±£¥Ê?"); 
      RunMainF5.   291                            locate(7,5);Print("Yes : [F1]");
      RunMainF5.   292                            locate(7,6);Print("No  : [F6]");
      RunMainF5.   293                            do{
      RunMainF5.   294                                    GetKey(&key);
      RunMainF5.   295                                    if (key==KEY_CTRL_F6 || key==KEY_CTRL_EXIT){enter =0 ;break;}
      RunMainF5.   296                                    else if (KEY_CTRL_F1) {enter = 1;break;}
      RunMainF5.   297                            }while(1);
      RunMainF5.   298                            if(enter)
      RunMainF5.   299                            {
      RunMainF5.   300                                    if(setup_data.route_name[0]==0)
      RunMainF5.   301                                    {
      RunMainF5.   302                                            WheterSavaAS();
      RunMainF5.   303                                    }
      RunMainF5.   304                                    else
      RunMainF5.   305                                    {
      RunMainF5.   306                                            SaveSRDFile(setup_data.route_name);
      RunMainF5.   307                                    }
      RunMainF5.   308                            }
      RunMainF5.   309                            return 0 ;
      RunMainF5.   310                    case KEY_CTRL_F1:                                       /* Set */
      RunMainF5.   311                            refresh = REDRAW_ALL;
      RunMainF5.   312                            SelSetupF5();
      RunMainF5.   313                            break;
      RunMainF5.   314                    case KEY_CTRL_F2:                                       /* Add */




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.   315                            route_push_back (&route);
      RunMainF5.   316                            y = route.size - 1;
      RunMainF5.   317                            refresh = REDRAW_ALL;
      RunMainF5.   318                            break;
      RunMainF5.   319                    case KEY_CTRL_F3:                                       /* ins */
      RunMainF5.   320                            //if (y==0) break;
      RunMainF5.   321                            route_insert (&route,y);
      RunMainF5.   322                            y++;
      RunMainF5.   323                            refresh = REDRAW_ALL;
      RunMainF5.   324                            break;
      RunMainF5.   325                    case KEY_CTRL_F4:                                       /* Del a point */
      RunMainF5.   326                            //if (y==0) break;
      RunMainF5.   327                            refresh = REDRAW_ALL;
      RunMainF5.   328                            PopUpWin(4);DispStr(25,10,"…æ ≥˝ “ª ––?");
      RunMainF5.   329                            locate(3,5);Print("[F1]Yes   [F6]No");
      RunMainF5.   330                            GetKey(&key);
      RunMainF5.   331                            if (key==KEY_CTRL_F1){
      RunMainF5.   332                                    route_del(&route,y);y--;
      RunMainF5.   333                            }
      RunMainF5.   334                            break;
      RunMainF5.   335                            
      RunMainF5.   336                     case KEY_CTRL_F5:                                      /* Del All */
      RunMainF5.   337                            refresh = REDRAW_ALL;
      RunMainF5.   338                            PopUpWin(4);DispStr(25,10,"«Â ø’ À˘ ”– ?");
      RunMainF5.   339                            locate(3,5);Print("[F1]Yes   [F6]No");
      RunMainF5.   340                            GetKey(&key);
      RunMainF5.   341                            if (key==KEY_CTRL_F1){
      RunMainF5.   342                                    route_initial(&route);
      RunMainF5.   343                        route_push_back(&route);
      RunMainF5.   344                            }
      RunMainF5.   345                            break;
      RunMainF5.   346    
      RunMainF5.   347             case KEY_CTRL_F6:
      RunMainF5.   348                        refresh = REDRAW_ALL;
      RunMainF5.   349                            PopUpWin(4);
      RunMainF5.   350                            //PrintfXY (15,30,0,"%.3f",route.set[0].xy_qr);  
      RunMainF5.   351                            //PrintfXY (70,30,0,"%.3f",route.set[0].xy_zr);  
      RunMainF5.   352                            DispStr(15,10,"œﬂ¬∑√˚≥∆");
      RunMainF5.   353                            if(setup_data.route_name[0]==0)
      RunMainF5.   354                            {
      RunMainF5.   355                             DispStr(25,27,"«Î±£¥Êœﬂ¬∑Œƒº˛ ");
      RunMainF5.   356                            }
      RunMainF5.   357                             //else
      RunMainF5.   358                            //{
      RunMainF5.   359                 //DispStr(25,27,setup_data.route_name);
      RunMainF5.   360                            //}
      RunMainF5.   361                            GetKey(&key);
      RunMainF5.   362                    break;  
      RunMainF5.   363                    default:                                                        /*other things*/
      RunMainF5.   364                            if (x>0 && (c=GetPressNumChar(key))!=0){
      RunMainF5.   365                                    char buffer[14];
      RunMainF5.   366                                    int r;
      RunMainF5.   367                                    //if (y==0 && x > 2)break;
      RunMainF5.   368                                    buffer[0] = c;
      RunMainF5.   369                                    buffer[1] = '\0';
      RunMainF5.   370                                    r = InputString(49,42,buffer,0,12);
      RunMainF5.   371                                    if (r!=KEY_CTRL_EXIT){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.   372                                            double * sd;
      RunMainF5.   373                                            sd =  (double*)&(route.set[y].qd_zh);
      RunMainF5.   374                                            sd[x-1] = atof(buffer);
      RunMainF5.   375                                            switch(r){
      RunMainF5.   376                                            case KEY_CTRL_UP:       y--;break;
      RunMainF5.   377                                            case KEY_CTRL_DOWN:     y++;break;
      RunMainF5.   378                                            case KEY_CTRL_EXE:      x++;break;
      RunMainF5.   379                                            }
      RunMainF5.   380                                    }
      RunMainF5.   381                                    refresh = REDRAW_ALL;
      RunMainF5.   382                            }
      RunMainF5.   383                            else if (x==0 && (c=GetPressChar(key))!=0){
      RunMainF5.   384                                    char buffer[14];
      RunMainF5.   385                                    int r;
      RunMainF5.   386                                    buffer[0] = c;
      RunMainF5.   387                                    buffer[1] = '\0';
      RunMainF5.   388                                    r = InputString(49,42,buffer,1,12);
      RunMainF5.   389                                    if (r!=KEY_CTRL_EXIT){
      RunMainF5.   390                                            strncpy(route.set[y].name,buffer,12);
      RunMainF5.   391                                            switch(r){
      RunMainF5.   392                                            case KEY_CTRL_UP:       y--;break;
      RunMainF5.   393                                            case KEY_CTRL_DOWN:     y++;break;
      RunMainF5.   394                                            case KEY_CTRL_EXE:      x++;break;
      RunMainF5.   395                                            }
      RunMainF5.   396                                    }
      RunMainF5.   397                                    refresh = REDRAW_ALL;
      RunMainF5.   398                            }
      RunMainF5.   399                            break;
      RunMainF5.   400                    }
      RunMainF5.   401                    if (x<0) x = 8,y--;
      RunMainF5.   402                    if (x>8) x = 0,y++;
      RunMainF5.   403                    if (y<0) y = 0;
      RunMainF5.   404                    if (y>=route.size) y = route.size - 1;
      RunMainF5.   405                    if (y>top + 3) top = y - 3;
      RunMainF5.   406                    if (y<top) top = y;
      RunMainF5.   407                    if (x>left +3) left = x - 3;
      RunMainF5.   408                    if (x<left) left = x;
      RunMainF5.   409            }
      RunMainF5.   410    }
      RunMainF5.   411    
      RunMainF5.   412    
      RunMainF5.   413    double sd_to_xyaSrd( double stake, double distance, double angle, int xya )
      RunMainF5.   414    {       
      RunMainF5.   415    
      RunMainF5.   416        int i;
      RunMainF5.   417            double xy_a;
      RunMainF5.   418            double xy_qr;
      RunMainF5.   419            double xy_zr;
      RunMainF5.   420            
      RunMainF5.   421            for(i=0; i<=route.size; i++)
      RunMainF5.   422            {       
      RunMainF5.   423     
      RunMainF5.   424            if ( stake<route.set[0].qd_zh )  stake=route.set[0].qd_zh;
      RunMainF5.   425                    if( stake>=route.set[i].qd_zh && stake<=route.set[i].zd_zh )
      RunMainF5.   426                    {       
      RunMainF5.   427                    if (route.set[i].xy_qr < 1e-10)
      RunMainF5.   428                            {  




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.   429                           xy_qr = 0;
      RunMainF5.   430                        }
      RunMainF5.   431                            else
      RunMainF5.   432                            {  
      RunMainF5.   433                           xy_qr = 1 / route.set[i].xy_qr;
      RunMainF5.   434                            }
      RunMainF5.   435                            if (route.set[i].xy_zr < 1e-10)
      RunMainF5.   436                            {  
      RunMainF5.   437                           xy_zr=0;
      RunMainF5.   438                        }
      RunMainF5.   439                            else
      RunMainF5.   440                            {  
      RunMainF5.   441                   xy_zr = 1 / route.set[i].xy_zr;
      RunMainF5.   442                            }
      RunMainF5.   443                            
      RunMainF5.   444                            xy_a=deg(route.set[i].xy_a);
      RunMainF5.   445                            
      RunMainF5.   446                        intialCZb(route.set[i].qd_zh, route.set[i].zd_zh, route.set[i].xy_x,route.set[i].xy_y,
                         + xy_a,route.set[i].xy_v,xy_qr,xy_zr);
      RunMainF5.   447                            
      RunMainF5.   448                            switch( xya )
      RunMainF5.   449                            {       case 0:
      RunMainF5.   450                                            return zbzs_x(stake, distance, angle);
      RunMainF5.   451                                            break;
      RunMainF5.   452                                    case 1:
      RunMainF5.   453                                            return zbzs_y(stake, distance, angle);
      RunMainF5.   454                                            break;
      RunMainF5.   455                                    default:
      RunMainF5.   456                                            return zbzs_a(stake, distance, angle);
      RunMainF5.   457                            }
      RunMainF5.   458                    }
      RunMainF5.   459            }
      RunMainF5.   460            return 0;       
      RunMainF5.   461    }
      RunMainF5.   462    
      RunMainF5.   463    
      RunMainF5.   464    
      RunMainF5.   465    double xy_to_sdSrd( double PX, double PY, int sd )
      RunMainF5.   466    {       
      RunMainF5.   467    
      RunMainF5.   468            double x = PX;
      RunMainF5.   469            double y = PY;
      RunMainF5.   470    
      RunMainF5.   471            double stake   = 0;             
      RunMainF5.   472            double mindist = 0;             
      RunMainF5.   473            
      RunMainF5.   474            int inum = 0;           
      RunMainF5.   475    
      RunMainF5.   476            double ex, ey, ea;
      RunMainF5.   477            double ped;
      RunMainF5.   478            double sx, sy, sa;      
      RunMainF5.   479            double psd;             
      RunMainF5.   480        double swapdist;
      RunMainF5.   481            int i;
      RunMainF5.   482            double xy_a;
      RunMainF5.   483            double xy_qr;
      RunMainF5.   484            double xy_zr;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.   485            for(i=0; i<route.size; i++)
      RunMainF5.   486            {       
      RunMainF5.   487                    sx = route.set[i].xy_x;
      RunMainF5.   488                    sy = route.set[i].xy_y;
      RunMainF5.   489                    sa = deg(route.set[i].xy_a);
      RunMainF5.   490                    psd = (y - sy) * cos( rad(sa - 90) ) - (x - sx) * sin( rad(sa - 90) ); //Ω·π˚ø…ƒ‹’˝∏∫
      RunMainF5.   491                    
      RunMainF5.   492                    if (route.set[i].xy_qr < 1e-10)
      RunMainF5.   493                            {  
      RunMainF5.   494                           xy_qr = 0;
      RunMainF5.   495                        }
      RunMainF5.   496                            else
      RunMainF5.   497                            {  
      RunMainF5.   498                           xy_qr = 1 / route.set[i].xy_qr;
      RunMainF5.   499                            }
      RunMainF5.   500                    if (route.set[i].xy_zr < 1e-10)
      RunMainF5.   501                            {  
      RunMainF5.   502                           xy_zr=0;
      RunMainF5.   503                        }
      RunMainF5.   504                            else
      RunMainF5.   505                            {  
      RunMainF5.   506                   xy_zr = 1 / route.set[i].xy_zr;
      RunMainF5.   507                            }
      RunMainF5.   508    
      RunMainF5.   509                    intialCZb(route.set[i].qd_zh, route.set[i].zd_zh, route.set[i].xy_x,route.set[i].xy_y,deg(
                         +route.set[i].xy_a),route.set[i].xy_v,xy_qr,xy_zr);
      RunMainF5.   510    
      RunMainF5.   511                    ex = zbzs_x(route.set[i].zd_zh, 0, 0);
      RunMainF5.   512                    ey = zbzs_y(route.set[i].zd_zh, 0, 0);
      RunMainF5.   513                    ea = zbzs_a(route.set[i].zd_zh, 0, 0);
      RunMainF5.   514                    
      RunMainF5.   515                    ped = (y - ey) * cos( rad(ea -90) ) - (x - ex) * sin( rad(ea - 90) );
      RunMainF5.   516    
      RunMainF5.   517                    if( psd * ped <= 0)  
      RunMainF5.   518                    {       inum++;
      RunMainF5.   519                            if( inum==1 )
      RunMainF5.   520                            {       mindist = zbfs_d(x, y);
      RunMainF5.   521                                    stake = zbfs_s(x, y);
      RunMainF5.   522                            }
      RunMainF5.   523                            else
      RunMainF5.   524                            {       swapdist = zbfs_d(x, y);
      RunMainF5.   525                                    if( fabs(swapdist) < fabs(mindist) )
      RunMainF5.   526                                    {       mindist = swapdist;
      RunMainF5.   527                                            stake = zbfs_s(x, y);
      RunMainF5.   528                                    }
      RunMainF5.   529                            }
      RunMainF5.   530                    }
      RunMainF5.   531            }
      RunMainF5.   532    
      RunMainF5.   533            if( inum == 0 )
      RunMainF5.   534            {       return -(1e10);
      RunMainF5.   535            }
      RunMainF5.   536    
      RunMainF5.   537            if( sd==0 )
      RunMainF5.   538            {       return stake;
      RunMainF5.   539            }
      RunMainF5.   540            else




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      RunMainF5.   541            {       return mindist;
      RunMainF5.   542            }
      RunMainF5.   543    }
      RunMainF5.   544    
      RunMainF5.   545    
    000006DC 84A4                   MOV.B       @(4,R10),R0
    000006DE 2008                   TST         R0,R0
    000006E0 8B03                   BF          L937
    000006E2 BD9D                   BSR         _WheterSavaAS
    000006E4 0009                   NOP
    000006E6 A004                   BRA         L936
    000006E8 0009                   NOP
    000006EA              L937:                             
    000006EA 64A3                   MOV         R10,R4
    000006EC D21C                   MOV.L       L1040+60,R2; _SaveSRDFile
    000006EE 420B                   JSR         @R2
    000006F0 7404                   ADD         #4,R4
    000006F2              L936:                             
    000006F2 60B3                   MOV         R11,R0
    000006F4 D41B                   MOV.L       L1040+64,R4; _route
    000006F6 D31C                   MOV.L       L1040+68,R3; _route_initial
    000006F8 430B                   JSR         @R3
    000006FA 80A4                   MOV.B       R0,@(4,R10)
    000006FC D419                   MOV.L       L1040+64,R4; _route
    000006FE D21B                   MOV.L       L1040+72,R2; _route_push_back
    00000700 420B                   JSR         @R2
    00000702 0009                   NOP
    00000704 A003                   BRA         __$EXIT$597
    00000706 0009                   NOP
    00000708              L912:                             
    00000708 D219                   MOV.L       L1040+76,R2; _need_redraw
    0000070A AE41                   BRA         L903
    0000070C 2292                   MOV.L       R9,@R2
    0000070E              __$EXIT$597:                     ; label: EXIT
    0000070E E000                   MOV         #0,R0
    00000710 7F18                   ADD         #24,R15
    00000712 4F26                   LDS.L       @R15+,PR
    00000714 68F6                   MOV.L       @R15+,R8
    00000716 69F6                   MOV.L       @R15+,R9
    00000718 6AF6                   MOV.L       @R15+,R10
    0000071A 6BF6                   MOV.L       @R15+,R11
    0000071C 6CF6                   MOV.L       @R15+,R12
    0000071E 6DF6                   MOV.L       @R15+,R13
    00000720 000B                   RTS
    00000722 6EF6                   MOV.L       @R15+,R14
    00000724              L1040:                            
    00000724 7539                   .DATA.W     H'7539
    00000726 0000                   .DATA.W     0
    00000728 <00000000>             .DATA.L     _SelectFiles
    0000072C <00000000>             .DATA.L     _PopUpWin
    00000730 <00000000>             .DATA.L     L594
    00000734 <00000000>             .DATA.L     _Print
    00000738 <00000000>             .DATA.L     _key
    0000073C <00000000>             .DATA.L     _GetKey
    00000740 <00000000>             .DATA.L     _LoadSRDFile
    00000744 <00000000>             .DATA.L     __slow_strcpy
    00000748 <00000000>             .DATA.L     _SaveIniSRDFile




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000074C <00000000>             .DATA.L     L598
    00000750 <00000000>             .DATA.L     _DispStr
    00000754 <00000000>             .DATA.L     L552
    00000758 <00000000>             .DATA.L     L553
    0000075C <00000000>             .DATA.L     L600
    00000760 <00000000>             .DATA.L     _SaveSRDFile
    00000764 <00000000>             .DATA.L     _route
    00000768 <00000000>             .DATA.L     _route_initial
    0000076C <00000000>             .DATA.L     _route_push_back
    00000770 <00000000>             .DATA.L     _need_redraw
    00000774              _RunF5_Calc:                     ; function: RunF5_Calc
                                                           ; frame size=228
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __quick_odd_mvn
    00000774 2FE6                   MOV.L       R14,@-R15
    00000776 2FD6                   MOV.L       R13,@-R15
    00000778 2FC6                   MOV.L       R12,@-R15
    0000077A ED00                   MOV         #0,R13
    0000077C 918B                   MOV.W       L1041+2,R1 ; H'0090
    0000077E 2FB6                   MOV.L       R11,@-R15
    00000780 2FA6                   MOV.L       R10,@-R15
    00000782 2F96                   MOV.L       R9,@-R15
    00000784 2F86                   MOV.L       R8,@-R15
    00000786 4F22                   STS.L       PR,@-R15
    00000788 4F12                   STS.L       MACL,@-R15
    0000078A 9083                   MOV.W       L1041,R0   ; H'FF4C
    0000078C DB43                   MOV.L       L1041+8,R11; _route
    0000078E 3F0C                   ADD         R0,R15
    00000790 D243                   MOV.L       L1041+12,R2; L607
    00000792 31FC                   ADD         R15,R1
    00000794 D343                   MOV.L       L1041+16,R3; __quick_odd_mvn
    00000796 430B                   JSR         @R3
    00000798 E024                   MOV         #36,R0
    0000079A 61F3                   MOV         R15,R1
    0000079C D242                   MOV.L       L1041+20,R2; L618
    0000079E 717C                   ADD         #124,R1
    000007A0 D340                   MOV.L       L1041+16,R3; __quick_odd_mvn
    000007A2 430B                   JSR         @R3
    000007A4 E014                   MOV         #20,R0
    000007A6 61F3                   MOV         R15,R1
    000007A8 D240                   MOV.L       L1041+24,R2; L625
    000007AA 7158                   ADD         #88,R1
    000007AC D33D                   MOV.L       L1041+16,R3; __quick_odd_mvn
    000007AE 430B                   JSR         @R3
    000007B0 E024                   MOV         #36,R0
    000007B2 6CD3                   MOV         R13,R12
    000007B4 1FD1                   MOV.L       R13,@(4,R15)
    000007B6 EA02                   MOV         #2,R10
    000007B8 D23D                   MOV.L       L1041+28,R2; L646
    000007BA 6ED3                   MOV         R13,R14
    000007BC D33D                   MOV.L       L1041+32,R3; __slow_mvn
    000007BE 69D3                   MOV         R13,R9
    000007C0 61F3                   MOV         R15,R1
    000007C2 7148                   ADD         #72,R1
    000007C4 430B                   JSR         @R3
    000007C6 E00D                   MOV         #13,R0
    000007C8 D53B                   MOV.L       L1041+36,R5; _stAsc6x12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007CA D43C                   MOV.L       L1041+40,R4; _stHz12x12
    000007CC D13C                   MOV.L       L1041+44,R1; _SetMyFont
    000007CE 410B                   JSR         @R1
    000007D0 0009                   NOP
    000007D2 63F3                   MOV         R15,R3
    000007D4 7338                   ADD         #56,R3
    000007D6 62F3                   MOV         R15,R2
    000007D8 1F3D                   MOV.L       R3,@(52,R15)
    000007DA 7239                   ADD         #57,R2
    000007DC 1F2C                   MOV.L       R2,@(48,R15)
    000007DE 63F3                   MOV         R15,R3
    000007E0 7338                   ADD         #56,R3
    000007E2 62F3                   MOV         R15,R2
    000007E4 1F39                   MOV.L       R3,@(36,R15)
    000007E6 7239                   ADD         #57,R2
    000007E8 1F2A                   MOV.L       R2,@(40,R15)
    000007EA              L941:                             
    000007EA 60A3                   MOV         R10,R0
    000007EC 8802                   CMP/EQ      #2,R0
    000007EE 8B34                   BF          L942
    000007F0 DA34                   MOV.L       L1041+48,R10; _Bdisp_AllClr_VRAM
    000007F2 4A0B                   JSR         @R10
    000007F4 0009                   NOP
    000007F6 A00F                   BRA         L943
    000007F8 6AD3                   MOV         R13,R10
    000007FA              L944:                             
    000007FA E201                   MOV         #1,R2
    000007FC 934C                   MOV.W       L1041+4,R3 ; H'0094
    000007FE E500                   MOV         #0,R5
    00000800 2F26                   MOV.L       R2,@-R15
    00000802 6723                   MOV         R2,R7
    00000804 66A3                   MOV         R10,R6
    00000806 369C                   ADD         R9,R6
    00000808 4608                   SHLL2       R6
    0000080A 33FC                   ADD         R15,R3
    0000080C 363C                   ADD         R3,R6
    0000080E 6662                   MOV.L       @R6,R6
    00000810 BBF6                   BSR         _PrintTables
    00000812 64A3                   MOV         R10,R4
    00000814 7F04                   ADD         #4,R15
    00000816 7A01                   ADD         #1,R10
    00000818              L943:                             
    00000818 E304                   MOV         #4,R3
    0000081A 3A33                   CMP/GE      R3,R10
    0000081C 8BED                   BF          L944
    0000081E E201                   MOV         #1,R2
    00000820 51B9                   MOV.L       @(36,R11),R1
    00000822 3127                   CMP/GT      R2,R1
    00000824 8901                   BT          L945
    00000826 A001                   BRA         L946
    00000828 E102                   MOV         #2,R1
    0000082A              L945:                             
    0000082A E105                   MOV         #5,R1
    0000082C              L946:                             
    0000082C 2F12                   MOV.L       R1,@R15
    0000082E 4115                   CMP/PL      R1
    00000830 D825                   MOV.L       L1041+52,R8; _PrintIcon




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000832 8F0D                   BF/S        L947
    00000834 6AD3                   MOV         R13,R10
    00000836              L948:                             
    00000836 E600                   MOV         #0,R6
    00000838 65A3                   MOV         R10,R5
    0000083A 4508                   SHLL2       R5
    0000083C 63F3                   MOV         R15,R3
    0000083E 737C                   ADD         #124,R3
    00000840 353C                   ADD         R3,R5
    00000842 6552                   MOV.L       @R5,R5
    00000844 480B                   JSR         @R8
    00000846 64A3                   MOV         R10,R4
    00000848 62F2                   MOV.L       @R15,R2
    0000084A 7A01                   ADD         #1,R10
    0000084C 3A23                   CMP/GE      R2,R10
    0000084E 8BF2                   BF          L948
    00000850              L947:                             
    00000850 D51E                   MOV.L       L1041+56,R5; L650
    00000852 E600                   MOV         #0,R6
    00000854 480B                   JSR         @R8
    00000856 E405                   MOV         #5,R4
    00000858 EA01                   MOV         #1,R10
    0000085A              L942:                             
    0000085A E24C                   MOV         #76,R2
    0000085C 0E27                   MUL.L       R2,R14
    0000085E 63C3                   MOV         R12,R3
    00000860 021A                   STS         MACL,R2
    00000862 73FF                   ADD         #-1,R3
    00000864 2F22                   MOV.L       R2,@R15
    00000866 60A3                   MOV         R10,R0
    00000868 4308                   SHLL2       R3
    0000086A 4300                   SHLL        R3
    0000086C 1F33                   MOV.L       R3,@(12,R15)
    0000086E 8801                   CMP/EQ      #1,R0
    00000870 8901                   BT          L1042
    00000872 A0C1                   BRA         L949
    00000874 0009                   NOP
    00000876              L1042:                            
    00000876 61C3                   MOV         R12,R1
    00000878 5AF1                   MOV.L       @(4,R15),R10
    0000087A 2998                   TST         R9,R9
    0000087C 3198                   SUB         R9,R1
    0000087E 0029                   MOVT        R0
    00000880 1F14                   MOV.L       R1,@(16,R15)
    00000882 53F1                   MOV.L       @(4,R15),R3
    00000884 7304                   ADD         #4,R3
    00000886 1F37                   MOV.L       R3,@(28,R15)
    00000888 1F08                   MOV.L       R0,@(32,R15)
    0000088A 50F4                   MOV.L       @(16,R15),R0
    0000088C 2008                   TST         R0,R0
    0000088E 0029                   MOVT        R0
    00000890 A072                   BRA         L952
    00000892 1F06                   MOV.L       R0,@(24,R15)
    00000894              L1041:                            
    00000894 FF4C                   .DATA.W     H'FF4C
    00000896 0090                   .DATA.W     H'0090
    00000898 0094                   .DATA.W     H'0094




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000089A 0000                   .DATA.W     0
    0000089C <00000000>             .DATA.L     _route
    000008A0 <00000000>             .DATA.L     L607
    000008A4 <00000000>             .DATA.L     __quick_odd_mvn
    000008A8 <00000000>             .DATA.L     L618
    000008AC <00000000>             .DATA.L     L625
    000008B0 <00000000>             .DATA.L     L646
    000008B4 <00000000>             .DATA.L     __slow_mvn
    000008B8 <00000000>             .DATA.L     _stAsc6x12
    000008BC <00000000>             .DATA.L     _stHz12x12
    000008C0 <00000000>             .DATA.L     _SetMyFont
    000008C4 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    000008C8 <00000000>             .DATA.L     _PrintIcon
    000008CC <00000000>             .DATA.L     L650
    000008D0              L953:                             
    000008D0 52B8                   MOV.L       @(32,R11),R2
    000008D2 E34C                   MOV         #76,R3
    000008D4 0A37                   MUL.L       R3,R10
    000008D6 031A                   STS         MACL,R3
    000008D8 332C                   ADD         R2,R3
    000008DA 6133                   MOV         R3,R1
    000008DC 710C                   ADD         #12,R1
    000008DE 1F1B                   MOV.L       R1,@(44,R15)
    000008E0 53F8                   MOV.L       @(32,R15),R3
    000008E2 2338                   TST         R3,R3
    000008E4 8901                   BT          L954
    000008E6 A001                   BRA         L955
    000008E8 E801                   MOV         #1,R8
    000008EA              L954:                             
    000008EA E800                   MOV         #0,R8
    000008EC              L955:                             
    000008EC 52F1                   MOV.L       @(4,R15),R2
    000008EE 60A3                   MOV         R10,R0
    000008F0 3028                   SUB         R2,R0
    000008F2 7001                   ADD         #1,R0
    000008F4 81FA                   MOV.W       R0,@(20,R15)
    000008F6 E304                   MOV         #4,R3
    000008F8 3833                   CMP/GE      R3,R8
    000008FA 891E                   BT          L956
    000008FC              L957:                             
    000008FC 53FB                   MOV.L       @(44,R15),R3
    000008FE 6183                   MOV         R8,R1
    00000900 D030                   MOV.L       L1043,R0   ; L655
    00000902 319C                   ADD         R9,R1
    00000904 71FF                   ADD         #-1,R1
    00000906 4108                   SHLL2       R1
    00000908 4100                   SHLL        R1
    0000090A 313C                   ADD         R3,R1
    0000090C 5211                   MOV.L       @(4,R1),R2
    0000090E 3EA0                   CMP/EQ      R10,R14
    00000910 2F26                   MOV.L       R2,@-R15
    00000912 6212                   MOV.L       @R1,R2
    00000914 2F26                   MOV.L       R2,@-R15
    00000916 2F06                   MOV.L       R0,@-R15
    00000918 8F05                   BF/S        L958
    0000091A E700                   MOV         #0,R7
    0000091C 52F7                   MOV.L       @(28,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000091E 3280                   CMP/EQ      R8,R2
    00000920 8B01                   BF          L958
    00000922 A001                   BRA         L959
    00000924 E601                   MOV         #1,R6
    00000926              L958:                             
    00000926 E600                   MOV         #0,R6
    00000928              L959:                             
    00000928 E020                   MOV         #32,R0
    0000092A 05FD                   MOV.W       @(R0,R15),R5
    0000092C BBD6                   BSR         _PrintTableFormats
    0000092E 6483                   MOV         R8,R4
    00000930 7801                   ADD         #1,R8
    00000932 E204                   MOV         #4,R2
    00000934 3823                   CMP/GE      R2,R8
    00000936 8FE1                   BF/S        L957
    00000938 7F0C                   ADD         #12,R15
    0000093A              L956:                             
    0000093A 2998                   TST         R9,R9
    0000093C 8B15                   BF          L960
    0000093E E34C                   MOV         #76,R3
    00000940 52B8                   MOV.L       @(32,R11),R2
    00000942 3EA0                   CMP/EQ      R10,R14
    00000944 D820                   MOV.L       L1043+4,R8 ; L656
    00000946 0A37                   MUL.L       R3,R10
    00000948 031A                   STS         MACL,R3
    0000094A 332C                   ADD         R2,R3
    0000094C 2F36                   MOV.L       R3,@-R15
    0000094E 2F86                   MOV.L       R8,@-R15
    00000950 8F05                   BF/S        L961
    00000952 E700                   MOV         #0,R7
    00000954 53F8                   MOV.L       @(32,R15),R3
    00000956 2338                   TST         R3,R3
    00000958 8901                   BT          L961
    0000095A A001                   BRA         L962
    0000095C E601                   MOV         #1,R6
    0000095E              L961:                             
    0000095E E600                   MOV         #0,R6
    00000960              L962:                             
    00000960 85FE                   MOV.W       @(28,R15),R0
    00000962 6503                   MOV         R0,R5
    00000964 BBBA                   BSR         _PrintTableFormats
    00000966 E400                   MOV         #0,R4
    00000968 7F08                   ADD         #8,R15
    0000096A              L960:                             
    0000096A 65A3                   MOV         R10,R5
    0000096C 53F1                   MOV.L       @(4,R15),R3
    0000096E 64A3                   MOV         R10,R4
    00000970 3438                   SUB         R3,R4
    00000972 BBF3                   BSR         _PrintTableIndexs
    00000974 7401                   ADD         #1,R4
    00000976 7A01                   ADD         #1,R10
    00000978              L952:                             
    00000978 53F7                   MOV.L       @(28,R15),R3
    0000097A 3A33                   CMP/GE      R3,R10
    0000097C 8903                   BT          L963
    0000097E D213                   MOV.L       L1043+8,R2 ; H'00000024+_route
    00000980 6122                   MOV.L       @R2,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000982 3A13                   CMP/GE      R1,R10
    00000984 8BA4                   BF          L953
    00000986              L963:                             
    00000986 6AC3                   MOV         R12,R10
    00000988 4A08                   SHLL2       R10
    0000098A 63F3                   MOV         R15,R3
    0000098C 7358                   ADD         #88,R3
    0000098E 4C15                   CMP/PL      R12
    00000990 8F24                   BF/S        L964
    00000992 3A3C                   ADD         R3,R10
    00000994 62F2                   MOV.L       @R15,R2
    00000996 E52A                   MOV         #42,R5
    00000998 58B8                   MOV.L       @(32,R11),R8
    0000099A 382C                   ADD         R2,R8
    0000099C 66A2                   MOV.L       @R10,R6
    0000099E 780C                   ADD         #12,R8
    000009A0 D20B                   MOV.L       L1043+12,R2; _DispStr
    000009A2 420B                   JSR         @R2
    000009A4 E400                   MOV         #0,R4
    000009A6 E600                   MOV         #0,R6
    000009A8 DA0A                   MOV.L       L1043+16,R10; _PrintFloat
    000009AA E52A                   MOV         #42,R5
    000009AC 53F3                   MOV.L       @(12,R15),R3
    000009AE 383C                   ADD         R3,R8
    000009B0 5281                   MOV.L       @(4,R8),R2
    000009B2 2F26                   MOV.L       R2,@-R15
    000009B4 6282                   MOV.L       @R8,R2
    000009B6 2F26                   MOV.L       R2,@-R15
    000009B8 D107                   MOV.L       L1043+20,R1; _setup_data
    000009BA 6712                   MOV.L       @R1,R7
    000009BC 4A0B                   JSR         @R10
    000009BE E431                   MOV         #49,R4
    000009C0 A019                   BRA         L965
    000009C2 7F08                   ADD         #8,R15
    000009C4              L1043:                            
    000009C4 <00000000>             .DATA.L     L655
    000009C8 <00000000>             .DATA.L     L656
    000009CC <00000024>             .DATA.L     H'00000024+_route
    000009D0 <00000000>             .DATA.L     _DispStr
    000009D4 <00000000>             .DATA.L     _PrintFloat
    000009D8 <00000000>             .DATA.L     _setup_data
    000009DC              L964:                             
    000009DC 66A2                   MOV.L       @R10,R6
    000009DE E52A                   MOV         #42,R5
    000009E0 D238                   MOV.L       L1044+22,R2; _DispStr
    000009E2 420B                   JSR         @R2
    000009E4 E400                   MOV         #0,R4
    000009E6 E700                   MOV         #0,R7
    000009E8 63F2                   MOV.L       @R15,R3
    000009EA E52C                   MOV         #44,R5
    000009EC DA36                   MOV.L       L1044+26,R10; _PrintXY
    000009EE 56B8                   MOV.L       @(32,R11),R6
    000009F0 363C                   ADD         R3,R6
    000009F2 4A0B                   JSR         @R10
    000009F4 E433                   MOV         #51,R4
    000009F6              L965:                             
    000009F6 6AD3                   MOV         R13,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009F8              L949:                             
    000009F8 D434                   MOV.L       L1044+30,R4; _key
    000009FA D335                   MOV.L       L1044+34,R3; _GetKey
    000009FC 430B                   JSR         @R3
    000009FE 0009                   NOP
    00000A00 D832                   MOV.L       L1044+30,R8; _key
    00000A02 6082                   MOV.L       @R8,R0
    00000A04 9153                   MOV.W       L1044,R1   ; H'7542
    00000A06 3010                   CMP/EQ      R1,R0
    00000A08 8B01                   BF          L1045
    00000A0A A195                   BRA         L1024
    00000A0C 0009                   NOP
    00000A0E              L1045:                            
    00000A0E 914F                   MOV.W       L1044+2,R1 ; H'7547
    00000A10 3010                   CMP/EQ      R1,R0
    00000A12 8920                   BT          L815
    00000A14 914D                   MOV.W       L1044+4,R1 ; H'7544
    00000A16 3010                   CMP/EQ      R1,R0
    00000A18 891F                   BT          L816
    00000A1A 914B                   MOV.W       L1044+6,R1 ; H'7545
    00000A1C 3010                   CMP/EQ      R1,R0
    00000A1E 891E                   BT          L817
    00000A20 9149                   MOV.W       L1044+8,R1 ; H'7532
    00000A22 3010                   CMP/EQ      R1,R0
    00000A24 891D                   BT          L818
    00000A26 9147                   MOV.W       L1044+10,R1; H'7539
    00000A28 3010                   CMP/EQ      R1,R0
    00000A2A 8970                   BT          L820
    00000A2C 9145                   MOV.W       L1044+12,R1; H'753A
    00000A2E 3010                   CMP/EQ      R1,R0
    00000A30 8971                   BT          L821
    00000A32 9143                   MOV.W       L1044+14,R1; H'753B
    00000A34 3010                   CMP/EQ      R1,R0
    00000A36 8974                   BT          L822
    00000A38 9141                   MOV.W       L1044+16,R1; H'753C
    00000A3A 3010                   CMP/EQ      R1,R0
    00000A3C 8977                   BT          L823
    00000A3E 913F                   MOV.W       L1044+18,R1; H'753D
    00000A40 3010                   CMP/EQ      R1,R0
    00000A42 8B01                   BF          L1046
    00000A44 A094                   BRA         L826
    00000A46 0009                   NOP
    00000A48              L1046:                            
    00000A48 913B                   MOV.W       L1044+20,R1; H'753E
    00000A4A 3010                   CMP/EQ      R1,R0
    00000A4C 8B01                   BF          L1047
    00000A4E A0D5                   BRA         L828
    00000A50 0009                   NOP
    00000A52              L1047:                            
    00000A52 A0ED                   BRA         L831
    00000A54 0009                   NOP
    00000A56              L815:                            ; case label 
    00000A56 A174                   BRA         L763
    00000A58 7E01                   ADD         #1,R14
    00000A5A              L816:                            ; case label 
    00000A5A A172                   BRA         L763
    00000A5C 7CFF                   ADD         #-1,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A5E              L817:                            ; case label 
    00000A5E A170                   BRA         L763
    00000A60 7C01                   ADD         #1,R12
    00000A62              L818:                            ; case label 
    00000A62 D21C                   MOV.L       L1044+38,R2; _PopUpWin
    00000A64 420B                   JSR         @R2
    00000A66 E405                   MOV         #5,R4
    00000A68 D61B                   MOV.L       L1044+42,R6; L660
    00000A6A E50C                   MOV         #12,R5
    00000A6C D315                   MOV.L       L1044+22,R3; _DispStr
    00000A6E 430B                   JSR         @R3
    00000A70 E430                   MOV         #48,R4
    00000A72 E505                   MOV         #5,R5
    00000A74 D219                   MOV.L       L1044+46,R2; _locate
    00000A76 420B                   JSR         @R2
    00000A78 E407                   MOV         #7,R4
    00000A7A D419                   MOV.L       L1044+50,R4; L552
    00000A7C D319                   MOV.L       L1044+54,R3; _Print
    00000A7E 430B                   JSR         @R3
    00000A80 0009                   NOP
    00000A82 E506                   MOV         #6,R5
    00000A84 D215                   MOV.L       L1044+46,R2; _locate
    00000A86 420B                   JSR         @R2
    00000A88 E407                   MOV         #7,R4
    00000A8A DE17                   MOV.L       L1044+58,R14; L553
    00000A8C D315                   MOV.L       L1044+54,R3; _Print
    00000A8E 430B                   JSR         @R3
    00000A90 64E3                   MOV         R14,R4
    00000A92 D40E                   MOV.L       L1044+30,R4; _key
    00000A94 D20E                   MOV.L       L1044+34,R2; _GetKey
    00000A96 420B                   JSR         @R2
    00000A98 0009                   NOP
    00000A9A 9412                   MOV.W       L1044+20,R4; H'753E
    00000A9C 6382                   MOV.L       @R8,R3
    00000A9E 3340                   CMP/EQ      R4,R3
    00000AA0 8903                   BT          L969
    00000AA2 9108                   MOV.W       L1044+8,R1 ; H'7532
    00000AA4 6282                   MOV.L       @R8,R2
    00000AA6 3210                   CMP/EQ      R1,R2
    00000AA8 8B20                   BF          L968
    00000AAA              L969:                             
    00000AAA A020                   BRA         L970
    00000AAC 64D3                   MOV         R13,R4
    00000AAE              L1044:                            
    00000AAE 7542                   .DATA.W     H'7542
    00000AB0 7547                   .DATA.W     H'7547
    00000AB2 7544                   .DATA.W     H'7544
    00000AB4 7545                   .DATA.W     H'7545
    00000AB6 7532                   .DATA.W     H'7532
    00000AB8 7539                   .DATA.W     H'7539
    00000ABA 753A                   .DATA.W     H'753A
    00000ABC 753B                   .DATA.W     H'753B
    00000ABE 753C                   .DATA.W     H'753C
    00000AC0 753D                   .DATA.W     H'753D
    00000AC2 753E                   .DATA.W     H'753E
    00000AC4 <00000000>             .DATA.L     _DispStr
    00000AC8 <00000000>             .DATA.L     _PrintXY




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000ACC <00000000>             .DATA.L     _key
    00000AD0 <00000000>             .DATA.L     _GetKey
    00000AD4 <00000000>             .DATA.L     _PopUpWin
    00000AD8 <00000000>             .DATA.L     L660
    00000ADC <00000000>             .DATA.L     _locate
    00000AE0 <00000000>             .DATA.L     L552
    00000AE4 <00000000>             .DATA.L     _Print
    00000AE8 <00000000>             .DATA.L     L553
    00000AEC              L968:                             
    00000AEC E401                   MOV         #1,R4
    00000AEE              L970:                             
    00000AEE 2448                   TST         R4,R4
    00000AF0 890B                   BT          L973
    00000AF2 D232                   MOV.L       L1048+2,R2 ; H'00000004+_setup_data
    00000AF4 6320                   MOV.B       @R2,R3
    00000AF6 2338                   TST         R3,R3
    00000AF8 8B03                   BF          L974
    00000AFA BB91                   BSR         _WheterSavaAS
    00000AFC 0009                   NOP
    00000AFE A004                   BRA         L973
    00000B00 0009                   NOP
    00000B02              L974:                             
    00000B02 DE2F                   MOV.L       L1048+6,R14; _SaveSRDFile
    00000B04 D42D                   MOV.L       L1048+2,R4 ; H'00000004+_setup_data
    00000B06 4E0B                   JSR         @R14
    00000B08 0009                   NOP
    00000B0A              L973:                             
    00000B0A A143                   BRA         L976
    00000B0C E000                   MOV         #0,R0
    00000B0E              L820:                            ; case label 
    00000B0E BC25                   BSR         _SelSetupF5
    00000B10 EA02                   MOV         #2,R10
    00000B12 A117                   BRA         L966
    00000B14 0009                   NOP
    00000B16              L821:                            ; case label 
    00000B16 D42B                   MOV.L       L1048+10,R4; _route
    00000B18 D32B                   MOV.L       L1048+14,R3; _route_push_back
    00000B1A 430B                   JSR         @R3
    00000B1C 0009                   NOP
    00000B1E A10B                   BRA         L1024
    00000B20 5EB9                   MOV.L       @(36,R11),R14
    00000B22              L822:                            ; case label 
    00000B22 DA2A                   MOV.L       L1048+18,R10; _route_insert
    00000B24 D427                   MOV.L       L1048+10,R4; _route
    00000B26 4A0B                   JSR         @R10
    00000B28 65E3                   MOV         R14,R5
    00000B2A A107                   BRA         L1025
    00000B2C 0009                   NOP
    00000B2E              L823:                            ; case label 
    00000B2E EA02                   MOV         #2,R10
    00000B30 D327                   MOV.L       L1048+22,R3; _PopUpWin
    00000B32 430B                   JSR         @R3
    00000B34 E404                   MOV         #4,R4
    00000B36 E50A                   MOV         #10,R5
    00000B38 D227                   MOV.L       L1048+30,R2; _DispStr
    00000B3A D626                   MOV.L       L1048+26,R6; L667
    00000B3C 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B3E E419                   MOV         #25,R4
    00000B40 D326                   MOV.L       L1048+34,R3; _locate
    00000B42 E505                   MOV         #5,R5
    00000B44 430B                   JSR         @R3
    00000B46 E403                   MOV         #3,R4
    00000B48 D425                   MOV.L       L1048+38,R4; L668
    00000B4A D226                   MOV.L       L1048+42,R2; _Print
    00000B4C 420B                   JSR         @R2
    00000B4E 0009                   NOP
    00000B50 D425                   MOV.L       L1048+46,R4; _key
    00000B52 D326                   MOV.L       L1048+50,R3; _GetKey
    00000B54 430B                   JSR         @R3
    00000B56 0009                   NOP
    00000B58 922F                   MOV.W       L1048,R2   ; H'7539
    00000B5A 6382                   MOV.L       @R8,R3
    00000B5C 3320                   CMP/EQ      R2,R3
    00000B5E 8901                   BT          L1049
    00000B60 A0F0                   BRA         L966
    00000B62 0009                   NOP
    00000B64              L1049:                            
    00000B64 D822                   MOV.L       L1048+54,R8; _route_del
    00000B66 D417                   MOV.L       L1048+10,R4; _route
    00000B68 480B                   JSR         @R8
    00000B6A 65E3                   MOV         R14,R5
    00000B6C A0EA                   BRA         L966
    00000B6E 7EFF                   ADD         #-1,R14
    00000B70              L826:                            ; case label 
    00000B70 D217                   MOV.L       L1048+22,R2; _PopUpWin
    00000B72 EA02                   MOV         #2,R10
    00000B74 420B                   JSR         @R2
    00000B76 E404                   MOV         #4,R4
    00000B78 D61E                   MOV.L       L1048+58,R6; L670
    00000B7A E50A                   MOV         #10,R5
    00000B7C D316                   MOV.L       L1048+30,R3; _DispStr
    00000B7E 430B                   JSR         @R3
    00000B80 E419                   MOV         #25,R4
    00000B82 E505                   MOV         #5,R5
    00000B84 D215                   MOV.L       L1048+34,R2; _locate
    00000B86 420B                   JSR         @R2
    00000B88 E403                   MOV         #3,R4
    00000B8A D415                   MOV.L       L1048+38,R4; L668
    00000B8C D315                   MOV.L       L1048+42,R3; _Print
    00000B8E 430B                   JSR         @R3
    00000B90 0009                   NOP
    00000B92 D415                   MOV.L       L1048+46,R4; _key
    00000B94 D215                   MOV.L       L1048+50,R2; _GetKey
    00000B96 420B                   JSR         @R2
    00000B98 0009                   NOP
    00000B9A 930E                   MOV.W       L1048,R3   ; H'7539
    00000B9C 6282                   MOV.L       @R8,R2
    00000B9E 3230                   CMP/EQ      R3,R2
    00000BA0 8901                   BT          L1050
    00000BA2 A0CF                   BRA         L966
    00000BA4 0009                   NOP
    00000BA6              L1050:                            
    00000BA6 D814                   MOV.L       L1048+62,R8; _route_initial
    00000BA8 D406                   MOV.L       L1048+10,R4; _route




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BAA 480B                   JSR         @R8
    00000BAC 0009                   NOP
    00000BAE D405                   MOV.L       L1048+10,R4; _route
    00000BB0 D305                   MOV.L       L1048+14,R3; _route_push_back
    00000BB2 430B                   JSR         @R3
    00000BB4 0009                   NOP
    00000BB6 A0C5                   BRA         L966
    00000BB8 0009                   NOP
    00000BBA              L1048:                            
    00000BBA 7539                   .DATA.W     H'7539
    00000BBC <00000004>             .DATA.L     H'00000004+_setup_data
    00000BC0 <00000000>             .DATA.L     _SaveSRDFile
    00000BC4 <00000000>             .DATA.L     _route
    00000BC8 <00000000>             .DATA.L     _route_push_back
    00000BCC <00000000>             .DATA.L     _route_insert
    00000BD0 <00000000>             .DATA.L     _PopUpWin
    00000BD4 <00000000>             .DATA.L     L667
    00000BD8 <00000000>             .DATA.L     _DispStr
    00000BDC <00000000>             .DATA.L     _locate
    00000BE0 <00000000>             .DATA.L     L668
    00000BE4 <00000000>             .DATA.L     _Print
    00000BE8 <00000000>             .DATA.L     _key
    00000BEC <00000000>             .DATA.L     _GetKey
    00000BF0 <00000000>             .DATA.L     _route_del
    00000BF4 <00000000>             .DATA.L     L670
    00000BF8 <00000000>             .DATA.L     _route_initial
    00000BFC              L828:                            ; case label 
    00000BFC D32C                   MOV.L       L1051+10,R3; _PopUpWin
    00000BFE EA02                   MOV         #2,R10
    00000C00 430B                   JSR         @R3
    00000C02 E404                   MOV         #4,R4
    00000C04 D82B                   MOV.L       L1051+14,R8; L672
    00000C06 E50A                   MOV         #10,R5
    00000C08 D22B                   MOV.L       L1051+18,R2; _DispStr
    00000C0A 6683                   MOV         R8,R6
    00000C0C 420B                   JSR         @R2
    00000C0E E40F                   MOV         #15,R4
    00000C10 D32A                   MOV.L       L1051+22,R3; H'00000004+_setup_data
    00000C12 6230                   MOV.B       @R3,R2
    00000C14 2228                   TST         R2,R2
    00000C16 8B05                   BF          L979
    00000C18 D829                   MOV.L       L1051+26,R8; L674
    00000C1A E51B                   MOV         #27,R5
    00000C1C D226                   MOV.L       L1051+18,R2; _DispStr
    00000C1E 6683                   MOV         R8,R6
    00000C20 420B                   JSR         @R2
    00000C22 E419                   MOV         #25,R4
    00000C24              L979:                             
    00000C24 D427                   MOV.L       L1051+30,R4; _key
    00000C26 D328                   MOV.L       L1051+34,R3; _GetKey
    00000C28 430B                   JSR         @R3
    00000C2A 0009                   NOP
    00000C2C A08A                   BRA         L966
    00000C2E 0009                   NOP
    00000C30              L831:                            ; default label 
    00000C30 9839                   MOV.W       L1051,R8   ; H'7532
    00000C32 4C15                   CMP/PL      R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C34 8B50                   BF          L980
    00000C36 D223                   MOV.L       L1051+30,R2; _key
    00000C38 D324                   MOV.L       L1051+38,R3; _GetPressNumChar
    00000C3A 430B                   JSR         @R3
    00000C3C 6422                   MOV.L       @R2,R4
    00000C3E 80F8                   MOV.B       R0,@(8,R15)
    00000C40 600E                   EXTS.B      R0,R0
    00000C42 2008                   TST         R0,R0
    00000C44 8948                   BT          L980
    00000C46 E700                   MOV         #0,R7
    00000C48 52FD                   MOV.L       @(52,R15),R2
    00000C4A E52A                   MOV         #42,R5
    00000C4C 84F8                   MOV.B       @(8,R15),R0
    00000C4E 2200                   MOV.B       R0,@R2
    00000C50 53FC                   MOV.L       @(48,R15),R3
    00000C52 23D0                   MOV.B       R13,@R3
    00000C54 D21E                   MOV.L       L1051+42,R2; _InputString
    00000C56 E30C                   MOV         #12,R3
    00000C58 2F36                   MOV.L       R3,@-R15
    00000C5A 66F3                   MOV         R15,R6
    00000C5C 763C                   ADD         #60,R6
    00000C5E 420B                   JSR         @R2
    00000C60 E431                   MOV         #49,R4
    00000C62 6A03                   MOV         R0,R10
    00000C64 3A80                   CMP/EQ      R8,R10
    00000C66 8D6C                   BT/S        L763
    00000C68 7F04                   ADD         #4,R15
    00000C6A 64F3                   MOV         R15,R4
    00000C6C D119                   MOV.L       L1051+46,R1; _atof
    00000C6E 7438                   ADD         #56,R4
    00000C70 63F2                   MOV.L       @R15,R3
    00000C72 58B8                   MOV.L       @(32,R11),R8
    00000C74 383C                   ADD         R3,R8
    00000C76 780C                   ADD         #12,R8
    00000C78 53F3                   MOV.L       @(12,R15),R3
    00000C7A 383C                   ADD         R3,R8
    00000C7C 410B                   JSR         @R1
    00000C7E 2F86                   MOV.L       R8,@-R15
    00000C80 9112                   MOV.W       L1051+2,R1 ; H'7542
    00000C82 60A3                   MOV         R10,R0
    00000C84 3010                   CMP/EQ      R1,R0
    00000C86 8D08                   BT/S        L832
    00000C88 7F04                   ADD         #4,R15
    00000C8A 910E                   MOV.W       L1051+4,R1 ; H'7547
    00000C8C 3010                   CMP/EQ      R1,R0
    00000C8E 8906                   BT          L833
    00000C90 910C                   MOV.W       L1051+6,R1 ; H'7534
    00000C92 3010                   CMP/EQ      R1,R0
    00000C94 8905                   BT          L834
    00000C96 A054                   BRA         L763
    00000C98 0009                   NOP
    00000C9A              L832:                            ; case label 
    00000C9A A04D                   BRA         L1024
    00000C9C 0009                   NOP
    00000C9E              L833:                            ; case label 
    00000C9E A04D                   BRA         L1025
    00000CA0 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CA2              L834:                            ; case label 
    00000CA2 A04E                   BRA         L763
    00000CA4 7C01                   ADD         #1,R12
    00000CA6              L1051:                            
    00000CA6 7532                   .DATA.W     H'7532
    00000CA8 7542                   .DATA.W     H'7542
    00000CAA 7547                   .DATA.W     H'7547
    00000CAC 7534                   .DATA.W     H'7534
    00000CAE 0000                   .DATA.W     0
    00000CB0 <00000000>             .DATA.L     _PopUpWin
    00000CB4 <00000000>             .DATA.L     L672
    00000CB8 <00000000>             .DATA.L     _DispStr
    00000CBC <00000004>             .DATA.L     H'00000004+_setup_data
    00000CC0 <00000000>             .DATA.L     L674
    00000CC4 <00000000>             .DATA.L     _key
    00000CC8 <00000000>             .DATA.L     _GetKey
    00000CCC <00000000>             .DATA.L     _GetPressNumChar
    00000CD0 <00000000>             .DATA.L     _InputString
    00000CD4 <00000000>             .DATA.L     _atof
    00000CD8              L980:                             
    00000CD8 2CC8                   TST         R12,R12
    00000CDA 8B33                   BF          L966
    00000CDC D335                   MOV.L       L1052+8,R3 ; _key
    00000CDE D236                   MOV.L       L1052+12,R2; _GetPressChar
    00000CE0 420B                   JSR         @R2
    00000CE2 6432                   MOV.L       @R3,R4
    00000CE4 80F8                   MOV.B       R0,@(8,R15)
    00000CE6 600E                   EXTS.B      R0,R0
    00000CE8 2008                   TST         R0,R0
    00000CEA 892B                   BT          L966
    00000CEC 52F9                   MOV.L       @(36,R15),R2
    00000CEE E701                   MOV         #1,R7
    00000CF0 84F8                   MOV.B       @(8,R15),R0
    00000CF2 E52A                   MOV         #42,R5
    00000CF4 2200                   MOV.B       R0,@R2
    00000CF6 53FA                   MOV.L       @(40,R15),R3
    00000CF8 D230                   MOV.L       L1052+16,R2; _InputString
    00000CFA 23D0                   MOV.B       R13,@R3
    00000CFC E30C                   MOV         #12,R3
    00000CFE 2F36                   MOV.L       R3,@-R15
    00000D00 66F3                   MOV         R15,R6
    00000D02 763C                   ADD         #60,R6
    00000D04 420B                   JSR         @R2
    00000D06 E431                   MOV         #49,R4
    00000D08 6A03                   MOV         R0,R10
    00000D0A 3A80                   CMP/EQ      R8,R10
    00000D0C 8D19                   BT/S        L763
    00000D0E 7F04                   ADD         #4,R15
    00000D10 D82B                   MOV.L       L1052+20,R8; _strncpy
    00000D12 E60C                   MOV         #12,R6
    00000D14 63F2                   MOV.L       @R15,R3
    00000D16 65F3                   MOV         R15,R5
    00000D18 54B8                   MOV.L       @(32,R11),R4
    00000D1A 7538                   ADD         #56,R5
    00000D1C 480B                   JSR         @R8
    00000D1E 343C                   ADD         R3,R4
    00000D20 9144                   MOV.W       L1052,R1   ; H'7542




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D22 60A3                   MOV         R10,R0
    00000D24 3010                   CMP/EQ      R1,R0
    00000D26 8907                   BT          L835
    00000D28 9141                   MOV.W       L1052+2,R1 ; H'7547
    00000D2A 3010                   CMP/EQ      R1,R0
    00000D2C 8906                   BT          L836
    00000D2E 913F                   MOV.W       L1052+4,R1 ; H'7534
    00000D30 3010                   CMP/EQ      R1,R0
    00000D32 8905                   BT          L837
    00000D34 A005                   BRA         L763
    00000D36 0009                   NOP
    00000D38              L835:                            ; case label 
    00000D38              L1024:                            
    00000D38 A003                   BRA         L763
    00000D3A 7EFF                   ADD         #-1,R14
    00000D3C              L836:                            ; case label 
    00000D3C              L1025:                            
    00000D3C A001                   BRA         L763
    00000D3E 7E01                   ADD         #1,R14
    00000D40              L837:                            ; case label 
    00000D40 7C01                   ADD         #1,R12
    00000D42              L763:
    00000D42 EA02                   MOV         #2,R10
    00000D44              L966:                             
    00000D44 4C11                   CMP/PZ      R12
    00000D46 8D02                   BT/S        L987
    00000D48 E408                   MOV         #8,R4
    00000D4A 6C43                   MOV         R4,R12
    00000D4C 7EFF                   ADD         #-1,R14
    00000D4E              L987:                             
    00000D4E 3C47                   CMP/GT      R4,R12
    00000D50 8B01                   BF          L988
    00000D52 6CD3                   MOV         R13,R12
    00000D54 7E01                   ADD         #1,R14
    00000D56              L988:                             
    00000D56 4E11                   CMP/PZ      R14
    00000D58 8D01                   BT/S        L989
    00000D5A 52B9                   MOV.L       @(36,R11),R2
    00000D5C 6ED3                   MOV         R13,R14
    00000D5E              L989:                             
    00000D5E 3E23                   CMP/GE      R2,R14
    00000D60 8B01                   BF          L990
    00000D62 5EB9                   MOV.L       @(36,R11),R14
    00000D64 7EFF                   ADD         #-1,R14
    00000D66              L990:                             
    00000D66 52F1                   MOV.L       @(4,R15),R2
    00000D68 7203                   ADD         #3,R2
    00000D6A 3E27                   CMP/GT      R2,R14
    00000D6C 8B02                   BF          L991
    00000D6E 62E3                   MOV         R14,R2
    00000D70 72FD                   ADD         #-3,R2
    00000D72 1F21                   MOV.L       R2,@(4,R15)
    00000D74              L991:                             
    00000D74 53F1                   MOV.L       @(4,R15),R3
    00000D76 3E33                   CMP/GE      R3,R14
    00000D78 8D01                   BT/S        L992
    00000D7A 6393                   MOV         R9,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D7C 1FE1                   MOV.L       R14,@(4,R15)
    00000D7E              L992:                             
    00000D7E 7303                   ADD         #3,R3
    00000D80 3C37                   CMP/GT      R3,R12
    00000D82 8B01                   BF          L993
    00000D84 69C3                   MOV         R12,R9
    00000D86 79FD                   ADD         #-3,R9
    00000D88              L993:                             
    00000D88 3C93                   CMP/GE      R9,R12
    00000D8A 8B01                   BF          L1053
    00000D8C AD2D                   BRA         L941
    00000D8E 0009                   NOP
    00000D90              L1053:                            
    00000D90 AD2B                   BRA         L941
    00000D92 69C3                   MOV         R12,R9
    00000D94              L976:                             
    00000D94 910D                   MOV.W       L1052+6,R1 ; H'00B4
    00000D96 3F1C                   ADD         R1,R15
    00000D98 4F16                   LDS.L       @R15+,MACL
    00000D9A 4F26                   LDS.L       @R15+,PR
    00000D9C 68F6                   MOV.L       @R15+,R8
    00000D9E 69F6                   MOV.L       @R15+,R9
    00000DA0 6AF6                   MOV.L       @R15+,R10
    00000DA2 6BF6                   MOV.L       @R15+,R11
    00000DA4 6CF6                   MOV.L       @R15+,R12
    00000DA6 6DF6                   MOV.L       @R15+,R13
    00000DA8 000B                   RTS
    00000DAA 6EF6                   MOV.L       @R15+,R14
    00000DAC              L1052:                            
    00000DAC 7542                   .DATA.W     H'7542
    00000DAE 7547                   .DATA.W     H'7547
    00000DB0 7534                   .DATA.W     H'7534
    00000DB2 00B4                   .DATA.W     H'00B4
    00000DB4 <00000000>             .DATA.L     _key
    00000DB8 <00000000>             .DATA.L     _GetPressChar
    00000DBC <00000000>             .DATA.L     _InputString
    00000DC0 <00000000>             .DATA.L     _strncpy
    00000DC4              _sd_to_xyaSrd:                   ; function: sd_to_xyaSrd
                                                           ; frame size=140
                                                           ; used runtime library name:
                                                           ; __divdr, __dtoi, __ltd, __ged, __led
    00000DC4 2FE6                   MOV.L       R14,@-R15
    00000DC6 E54C                   MOV         #76,R5
    00000DC8 2FD6                   MOV.L       R13,@-R15
    00000DCA 2FC6                   MOV.L       R12,@-R15
    00000DCC 2FB6                   MOV.L       R11,@-R15
    00000DCE 2FA6                   MOV.L       R10,@-R15
    00000DD0 2F96                   MOV.L       R9,@-R15
    00000DD2 2F86                   MOV.L       R8,@-R15
    00000DD4 4F22                   STS.L       PR,@-R15
    00000DD6 4F12                   STS.L       MACL,@-R15
    00000DD8 D893                   MOV.L       L1054,R8   ; _zbzs_y
    00000DDA 7FE4                   ADD         #-28,R15
    00000DDC D993                   MOV.L       L1054+4,R9 ; _zbzs_x
    00000DDE 2F42                   MOV.L       R4,@R15
    00000DE0 DA93                   MOV.L       L1054+8,R10; _intialCZb
    00000DE2 DB94                   MOV.L       L1054+12,R11; _deg




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DE4 DC94                   MOV.L       L1054+16,R12; _route
    00000DE6 A109                   BRA         L995
    00000DE8 E400                   MOV         #0,R4
    00000DEA              L996:                             
    00000DEA E048                   MOV         #72,R0
    00000DEC 5EC8                   MOV.L       @(32,R12),R14
    00000DEE 02FE                   MOV.L       @(R0,R15),R2
    00000DF0 2F26                   MOV.L       R2,@-R15
    00000DF2 E048                   MOV         #72,R0
    00000DF4 02FE                   MOV.L       @(R0,R15),R2
    00000DF6 2F26                   MOV.L       R2,@-R15
    00000DF8 53E4                   MOV.L       @(16,R14),R3
    00000DFA 2F36                   MOV.L       R3,@-R15
    00000DFC 53E3                   MOV.L       @(12,R14),R3
    00000DFE D28F                   MOV.L       L1054+20,R2; __ltd
    00000E00 420B                   JSR         @R2
    00000E02 2F36                   MOV.L       R3,@-R15
    00000E04 8800                   CMP/EQ      #0,R0
    00000E06 8D08                   BT/S        L997
    00000E08 0457                   MUL.L       R5,R4
    00000E0A 63E3                   MOV         R14,R3
    00000E0C 730C                   ADD         #12,R3
    00000E0E 61F3                   MOV         R15,R1
    00000E10 6232                   MOV.L       @R3,R2
    00000E12 7144                   ADD         #68,R1
    00000E14 2122                   MOV.L       R2,@R1
    00000E16 5231                   MOV.L       @(4,R3),R2
    00000E18 1121                   MOV.L       R2,@(4,R1)
    00000E1A              L997:                             
    00000E1A 0D1A                   STS         MACL,R13
    00000E1C D288                   MOV.L       L1054+24,R2; __ged
    00000E1E E048                   MOV         #72,R0
    00000E20 03FE                   MOV.L       @(R0,R15),R3
    00000E22 66E3                   MOV         R14,R6
    00000E24 2F36                   MOV.L       R3,@-R15
    00000E26 E048                   MOV         #72,R0
    00000E28 03FE                   MOV.L       @(R0,R15),R3
    00000E2A 36DC                   ADD         R13,R6
    00000E2C 2F36                   MOV.L       R3,@-R15
    00000E2E 5364                   MOV.L       @(16,R6),R3
    00000E30 2F36                   MOV.L       R3,@-R15
    00000E32 5363                   MOV.L       @(12,R6),R3
    00000E34 420B                   JSR         @R2
    00000E36 2F36                   MOV.L       R3,@-R15
    00000E38 8800                   CMP/EQ      #0,R0
    00000E3A 8B01                   BF          L1055
    00000E3C A0DD                   BRA         L998
    00000E3E 0009                   NOP
    00000E40              L1055:                            
    00000E40 E048                   MOV         #72,R0
    00000E42 03FE                   MOV.L       @(R0,R15),R3
    00000E44 2F36                   MOV.L       R3,@-R15
    00000E46 E048                   MOV         #72,R0
    00000E48 03FE                   MOV.L       @(R0,R15),R3
    00000E4A 2F36                   MOV.L       R3,@-R15
    00000E4C 5266                   MOV.L       @(24,R6),R2
    00000E4E 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E50 5265                   MOV.L       @(20,R6),R2
    00000E52 D37C                   MOV.L       L1054+28,R3; __led
    00000E54 430B                   JSR         @R3
    00000E56 2F26                   MOV.L       R2,@-R15
    00000E58 8800                   CMP/EQ      #0,R0
    00000E5A 8B01                   BF          L1056
    00000E5C A0CD                   BRA         L998
    00000E5E 0009                   NOP
    00000E60              L1056:                            
    00000E60 D179                   MOV.L       L1054+32,R1; H'D9D7BDBB
    00000E62 62E3                   MOV         R14,R2
    00000E64 32DC                   ADD         R13,R2
    00000E66 723C                   ADD         #60,R2
    00000E68 5321                   MOV.L       @(4,R2),R3
    00000E6A 2F36                   MOV.L       R3,@-R15
    00000E6C 6322                   MOV.L       @R2,R3
    00000E6E 2F36                   MOV.L       R3,@-R15
    00000E70 2F16                   MOV.L       R1,@-R15
    00000E72 D176                   MOV.L       L1054+36,R1; H'3DDB7CDF
    00000E74 D371                   MOV.L       L1054+20,R3; __ltd
    00000E76 430B                   JSR         @R3
    00000E78 2F16                   MOV.L       R1,@-R15
    00000E7A 8800                   CMP/EQ      #0,R0
    00000E7C 8905                   BT          L999
    00000E7E 62F3                   MOV         R15,R2
    00000E80 720C                   ADD         #12,R2
    00000E82 E100                   MOV         #0,R1
    00000E84 2212                   MOV.L       R1,@R2
    00000E86 A010                   BRA         L1000
    00000E88 1211                   MOV.L       R1,@(4,R2)
    00000E8A              L999:                             
    00000E8A E000                   MOV         #0,R0
    00000E8C D171                   MOV.L       L1054+44,R1; __divdr
    00000E8E 63E3                   MOV         R14,R3
    00000E90 2F06                   MOV.L       R0,@-R15
    00000E92 33DC                   ADD         R13,R3
    00000E94 D06E                   MOV.L       L1054+40,R0; H'3FF00000
    00000E96 733C                   ADD         #60,R3
    00000E98 2F06                   MOV.L       R0,@-R15
    00000E9A 5231                   MOV.L       @(4,R3),R2
    00000E9C 2F26                   MOV.L       R2,@-R15
    00000E9E 6232                   MOV.L       @R3,R2
    00000EA0 2F26                   MOV.L       R2,@-R15
    00000EA2 60F3                   MOV         R15,R0
    00000EA4 701C                   ADD         #28,R0
    00000EA6 410B                   JSR         @R1
    00000EA8 2F06                   MOV.L       R0,@-R15
    00000EAA              L1000:                            
    00000EAA 63E3                   MOV         R14,R3
    00000EAC D166                   MOV.L       L1054+32,R1; H'D9D7BDBB
    00000EAE 33DC                   ADD         R13,R3
    00000EB0 7344                   ADD         #68,R3
    00000EB2 5231                   MOV.L       @(4,R3),R2
    00000EB4 2F26                   MOV.L       R2,@-R15
    00000EB6 6232                   MOV.L       @R3,R2
    00000EB8 D360                   MOV.L       L1054+20,R3; __ltd
    00000EBA 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EBC 2F16                   MOV.L       R1,@-R15
    00000EBE D163                   MOV.L       L1054+36,R1; H'3DDB7CDF
    00000EC0 430B                   JSR         @R3
    00000EC2 2F16                   MOV.L       R1,@-R15
    00000EC4 8800                   CMP/EQ      #0,R0
    00000EC6 8905                   BT          L1001
    00000EC8 62F3                   MOV         R15,R2
    00000ECA 7204                   ADD         #4,R2
    00000ECC E100                   MOV         #0,R1
    00000ECE 2212                   MOV.L       R1,@R2
    00000ED0 A010                   BRA         L1002
    00000ED2 1211                   MOV.L       R1,@(4,R2)
    00000ED4              L1001:                            
    00000ED4 D15F                   MOV.L       L1054+44,R1; __divdr
    00000ED6 E000                   MOV         #0,R0
    00000ED8 2F06                   MOV.L       R0,@-R15
    00000EDA 63E3                   MOV         R14,R3
    00000EDC D05C                   MOV.L       L1054+40,R0; H'3FF00000
    00000EDE 33DC                   ADD         R13,R3
    00000EE0 2F06                   MOV.L       R0,@-R15
    00000EE2 7344                   ADD         #68,R3
    00000EE4 5231                   MOV.L       @(4,R3),R2
    00000EE6 2F26                   MOV.L       R2,@-R15
    00000EE8 6232                   MOV.L       @R3,R2
    00000EEA 2F26                   MOV.L       R2,@-R15
    00000EEC 60F3                   MOV         R15,R0
    00000EEE 7014                   ADD         #20,R0
    00000EF0 410B                   JSR         @R1
    00000EF2 2F06                   MOV.L       R0,@-R15
    00000EF4              L1002:                            
    00000EF4 3EDC                   ADD         R13,R14
    00000EF6 53EC                   MOV.L       @(48,R14),R3
    00000EF8 2F36                   MOV.L       R3,@-R15
    00000EFA 53EB                   MOV.L       @(44,R14),R3
    00000EFC 2F36                   MOV.L       R3,@-R15
    00000EFE 62F3                   MOV         R15,R2
    00000F00 721C                   ADD         #28,R2
    00000F02 4B0B                   JSR         @R11
    00000F04 2F26                   MOV.L       R2,@-R15
    00000F06 51F5                   MOV.L       @(20,R15),R1
    00000F08 2F16                   MOV.L       R1,@-R15
    00000F0A 51F5                   MOV.L       @(20,R15),R1
    00000F0C 2F16                   MOV.L       R1,@-R15
    00000F0E 53F9                   MOV.L       @(36,R15),R3
    00000F10 2F36                   MOV.L       R3,@-R15
    00000F12 53F9                   MOV.L       @(36,R15),R3
    00000F14 2F36                   MOV.L       R3,@-R15
    00000F16 52FD                   MOV.L       @(52,R15),R2
    00000F18 2F26                   MOV.L       R2,@-R15
    00000F1A 52FD                   MOV.L       @(52,R15),R2
    00000F1C 2F26                   MOV.L       R2,@-R15
    00000F1E 5EC8                   MOV.L       @(32,R12),R14
    00000F20 3EDC                   ADD         R13,R14
    00000F22 53EA                   MOV.L       @(40,R14),R3
    00000F24 2F36                   MOV.L       R3,@-R15
    00000F26 53E9                   MOV.L       @(36,R14),R3
    00000F28 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F2A 52E8                   MOV.L       @(32,R14),R2
    00000F2C 2F26                   MOV.L       R2,@-R15
    00000F2E 52E7                   MOV.L       @(28,R14),R2
    00000F30 2F26                   MOV.L       R2,@-R15
    00000F32 53E6                   MOV.L       @(24,R14),R3
    00000F34 2F36                   MOV.L       R3,@-R15
    00000F36 53E5                   MOV.L       @(20,R14),R3
    00000F38 2F36                   MOV.L       R3,@-R15
    00000F3A 52E4                   MOV.L       @(16,R14),R2
    00000F3C 2F26                   MOV.L       R2,@-R15
    00000F3E 52E3                   MOV.L       @(12,R14),R2
    00000F40 2F26                   MOV.L       R2,@-R15
    00000F42 53EE                   MOV.L       @(56,R14),R3
    00000F44 2F36                   MOV.L       R3,@-R15
    00000F46 53ED                   MOV.L       @(52,R14),R3
    00000F48 D243                   MOV.L       L1054+48,R2; __dtoi
    00000F4A 420B                   JSR         @R2
    00000F4C 2F36                   MOV.L       R3,@-R15
    00000F4E 4A0B                   JSR         @R10
    00000F50 6403                   MOV         R0,R4
    00000F52 7F44                   ADD         #68,R15
    00000F54 60F2                   MOV.L       @R15,R0
    00000F56 8800                   CMP/EQ      #0,R0
    00000F58 8903                   BT          L838
    00000F5A 8801                   CMP/EQ      #1,R0
    00000F5C 891A                   BT          L839
    00000F5E A032                   BRA         L840
    00000F60 0009                   NOP
    00000F62              L838:                            ; case label 
    00000F62 E058                   MOV         #88,R0
    00000F64 03FE                   MOV.L       @(R0,R15),R3
    00000F66 E058                   MOV         #88,R0
    00000F68 2F36                   MOV.L       R3,@-R15
    00000F6A 03FE                   MOV.L       @(R0,R15),R3
    00000F6C 2F36                   MOV.L       R3,@-R15
    00000F6E E058                   MOV         #88,R0
    00000F70 02FE                   MOV.L       @(R0,R15),R2
    00000F72 E058                   MOV         #88,R0
    00000F74 2F26                   MOV.L       R2,@-R15
    00000F76 02FE                   MOV.L       @(R0,R15),R2
    00000F78 2F26                   MOV.L       R2,@-R15
    00000F7A E058                   MOV         #88,R0
    00000F7C 03FE                   MOV.L       @(R0,R15),R3
    00000F7E E058                   MOV         #88,R0
    00000F80 2F36                   MOV.L       R3,@-R15
    00000F82 03FE                   MOV.L       @(R0,R15),R3
    00000F84 2F36                   MOV.L       R3,@-R15
    00000F86 62F3                   MOV         R15,R2
    00000F88 7258                   ADD         #88,R2
    00000F8A 6222                   MOV.L       @R2,R2
    00000F8C 490B                   JSR         @R9
    00000F8E 2F26                   MOV.L       R2,@-R15
    00000F90 A031                   BRA         L1027
    00000F92 0009                   NOP
    00000F94              L839:                            ; case label 
    00000F94 E058                   MOV         #88,R0
    00000F96 02FE                   MOV.L       @(R0,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F98 2F26                   MOV.L       R2,@-R15
    00000F9A E058                   MOV         #88,R0
    00000F9C 02FE                   MOV.L       @(R0,R15),R2
    00000F9E E058                   MOV         #88,R0
    00000FA0 2F26                   MOV.L       R2,@-R15
    00000FA2 03FE                   MOV.L       @(R0,R15),R3
    00000FA4 2F36                   MOV.L       R3,@-R15
    00000FA6 E058                   MOV         #88,R0
    00000FA8 03FE                   MOV.L       @(R0,R15),R3
    00000FAA E058                   MOV         #88,R0
    00000FAC 2F36                   MOV.L       R3,@-R15
    00000FAE 02FE                   MOV.L       @(R0,R15),R2
    00000FB0 2F26                   MOV.L       R2,@-R15
    00000FB2 E058                   MOV         #88,R0
    00000FB4 02FE                   MOV.L       @(R0,R15),R2
    00000FB6 2F26                   MOV.L       R2,@-R15
    00000FB8 63F3                   MOV         R15,R3
    00000FBA 7358                   ADD         #88,R3
    00000FBC 6332                   MOV.L       @R3,R3
    00000FBE 480B                   JSR         @R8
    00000FC0 2F36                   MOV.L       R3,@-R15
    00000FC2 A018                   BRA         L1027
    00000FC4 0009                   NOP
    00000FC6              L840:                            ; default label 
    00000FC6 E058                   MOV         #88,R0
    00000FC8 D124                   MOV.L       L1054+52,R1; _zbzs_a
    00000FCA 03FE                   MOV.L       @(R0,R15),R3
    00000FCC 2F36                   MOV.L       R3,@-R15
    00000FCE E058                   MOV         #88,R0
    00000FD0 03FE                   MOV.L       @(R0,R15),R3
    00000FD2 E058                   MOV         #88,R0
    00000FD4 2F36                   MOV.L       R3,@-R15
    00000FD6 02FE                   MOV.L       @(R0,R15),R2
    00000FD8 2F26                   MOV.L       R2,@-R15
    00000FDA E058                   MOV         #88,R0
    00000FDC 02FE                   MOV.L       @(R0,R15),R2
    00000FDE E058                   MOV         #88,R0
    00000FE0 2F26                   MOV.L       R2,@-R15
    00000FE2 03FE                   MOV.L       @(R0,R15),R3
    00000FE4 2F36                   MOV.L       R3,@-R15
    00000FE6 E058                   MOV         #88,R0
    00000FE8 03FE                   MOV.L       @(R0,R15),R3
    00000FEA 2F36                   MOV.L       R3,@-R15
    00000FEC 62F3                   MOV         R15,R2
    00000FEE 7258                   ADD         #88,R2
    00000FF0 6222                   MOV.L       @R2,R2
    00000FF2 410B                   JSR         @R1
    00000FF4 2F26                   MOV.L       R2,@-R15
    00000FF6              L1027:                            
    00000FF6 A00C                   BRA         L1004
    00000FF8 7F1C                   ADD         #28,R15
    00000FFA              L998:                             
    00000FFA 7401                   ADD         #1,R4
    00000FFC              L995:                             
    00000FFC 53C9                   MOV.L       @(36,R12),R3
    00000FFE 3437                   CMP/GT      R3,R4
    00001000 8901                   BT          L1057




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001002 AEF2                   BRA         L996
    00001004 0009                   NOP
    00001006              L1057:                            
    00001006 61F3                   MOV         R15,R1
    00001008 7140                   ADD         #64,R1
    0000100A E000                   MOV         #0,R0
    0000100C 6212                   MOV.L       @R1,R2
    0000100E 2202                   MOV.L       R0,@R2
    00001010 1201                   MOV.L       R0,@(4,R2)
    00001012              L1004:                            
    00001012 7F1C                   ADD         #28,R15
    00001014 4F16                   LDS.L       @R15+,MACL
    00001016 4F26                   LDS.L       @R15+,PR
    00001018 68F6                   MOV.L       @R15+,R8
    0000101A 69F6                   MOV.L       @R15+,R9
    0000101C 6AF6                   MOV.L       @R15+,R10
    0000101E 6BF6                   MOV.L       @R15+,R11
    00001020 6CF6                   MOV.L       @R15+,R12
    00001022 6DF6                   MOV.L       @R15+,R13
    00001024 000B                   RTS
    00001026 6EF6                   MOV.L       @R15+,R14
    00001028              L1054:                            
    00001028 <00000000>             .DATA.L     _zbzs_y
    0000102C <00000000>             .DATA.L     _zbzs_x
    00001030 <00000000>             .DATA.L     _intialCZb
    00001034 <00000000>             .DATA.L     _deg
    00001038 <00000000>             .DATA.L     _route
    0000103C <00000000>             .DATA.L     __ltd
    00001040 <00000000>             .DATA.L     __ged
    00001044 <00000000>             .DATA.L     __led
    00001048 D9D7BDBB               .DATA.L     H'D9D7BDBB
    0000104C 3DDB7CDF               .DATA.L     H'3DDB7CDF
    00001050 3FF00000               .DATA.L     H'3FF00000
    00001054 <00000000>             .DATA.L     __divdr
    00001058 <00000000>             .DATA.L     __dtoi
    0000105C <00000000>             .DATA.L     _zbzs_a
    00001060              _xy_to_sdSrd:                    ; function: xy_to_sdSrd
                                                           ; frame size=280
                                                           ; used runtime library name:
                                                           ; __addd, __subdr, __muld, __divdr, __dtoi, __ltd, __led
    00001060 2FE6                   MOV.L       R14,@-R15
    00001062 2FD6                   MOV.L       R13,@-R15
    00001064 2FC6                   MOV.L       R12,@-R15
    00001066 2FB6                   MOV.L       R11,@-R15
    00001068 2FA6                   MOV.L       R10,@-R15
    0000106A 2F96                   MOV.L       R9,@-R15
    0000106C 2F86                   MOV.L       R8,@-R15
    0000106E 4F22                   STS.L       PR,@-R15
    00001070 4F12                   STS.L       MACL,@-R15
    00001072 901F                   MOV.W       L1058,R0   ; H'FF7C
    00001074 931F                   MOV.W       L1058+2,R3 ; H'00AC
    00001076 3F0C                   ADD         R0,R15
    00001078 2F42                   MOV.L       R4,@R15
    0000107A 33FC                   ADD         R15,R3
    0000107C 901C                   MOV.W       L1058+4,R0 ; H'00B4
    0000107E 62F3                   MOV         R15,R2
    00001080 6132                   MOV.L       @R3,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001082 30FC                   ADD         R15,R0
    00001084 727C                   ADD         #124,R2
    00001086 2212                   MOV.L       R1,@R2
    00001088 5131                   MOV.L       @(4,R3),R1
    0000108A 63F3                   MOV         R15,R3
    0000108C 1211                   MOV.L       R1,@(4,R2)
    0000108E 7374                   ADD         #116,R3
    00001090 6202                   MOV.L       @R0,R2
    00001092 61F3                   MOV         R15,R1
    00001094 2322                   MOV.L       R2,@R3
    00001096 716C                   ADD         #108,R1
    00001098 5201                   MOV.L       @(4,R0),R2
    0000109A 1321                   MOV.L       R2,@(4,R3)
    0000109C E300                   MOV         #0,R3
    0000109E 62F3                   MOV         R15,R2
    000010A0 2132                   MOV.L       R3,@R1
    000010A2 6033                   MOV         R3,R0
    000010A4 1131                   MOV.L       R3,@(4,R1)
    000010A6 7264                   ADD         #100,R2
    000010A8 2232                   MOV.L       R3,@R2
    000010AA 6403                   MOV         R0,R4
    000010AC 1201                   MOV.L       R0,@(4,R2)
    000010AE 6803                   MOV         R0,R8
    000010B0 A25B                   BRA         L1005
    000010B2 6903                   MOV         R0,R9
    000010B4              L1058:                            
    000010B4 FF7C                   .DATA.W     H'FF7C
    000010B6 00AC                   .DATA.W     H'00AC
    000010B8 00B4                   .DATA.W     H'00B4
    000010BA              L1006:                            
    000010BA E44C                   MOV         #76,R4
    000010BC 5CE8                   MOV.L       @(32,R14),R12
    000010BE 63F3                   MOV         R15,R3
    000010C0 0947                   MUL.L       R4,R9
    000010C2 733C                   ADD         #60,R3
    000010C4 0D1A                   STS         MACL,R13
    000010C6 3CDC                   ADD         R13,R12
    000010C8 62C3                   MOV         R12,R2
    000010CA 721C                   ADD         #28,R2
    000010CC 6122                   MOV.L       @R2,R1
    000010CE 60C3                   MOV         R12,R0
    000010D0 2312                   MOV.L       R1,@R3
    000010D2 7024                   ADD         #36,R0
    000010D4 5121                   MOV.L       @(4,R2),R1
    000010D6 1311                   MOV.L       R1,@(4,R3)
    000010D8 6202                   MOV.L       @R0,R2
    000010DA 63F3                   MOV         R15,R3
    000010DC 7334                   ADD         #52,R3
    000010DE 2322                   MOV.L       R2,@R3
    000010E0 5201                   MOV.L       @(4,R0),R2
    000010E2 1321                   MOV.L       R2,@(4,R3)
    000010E4 51CC                   MOV.L       @(48,R12),R1
    000010E6 2F16                   MOV.L       R1,@-R15
    000010E8 51CB                   MOV.L       @(44,R12),R1
    000010EA 2F16                   MOV.L       R1,@-R15
    000010EC D243                   MOV.L       L1059+6,R2 ; _deg
    000010EE 63F3                   MOV         R15,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010F0 7334                   ADD         #52,R3
    000010F2 420B                   JSR         @R2
    000010F4 2F36                   MOV.L       R3,@-R15
    000010F6 7FFC                   ADD         #-4,R15
    000010F8 907D                   MOV.W       L1059,R0   ; H'0088
    000010FA DC41                   MOV.L       L1059+10,R12; _rad
    000010FC 03FE                   MOV.L       @(R0,R15),R3
    000010FE 2F36                   MOV.L       R3,@-R15
    00001100 9079                   MOV.W       L1059,R0   ; H'0088
    00001102 03FE                   MOV.L       @(R0,R15),R3
    00001104 D13F                   MOV.L       L1059+14,R1; __subdr
    00001106 E050                   MOV         #80,R0
    00001108 2F36                   MOV.L       R3,@-R15
    0000110A 02FE                   MOV.L       @(R0,R15),R2
    0000110C 2F26                   MOV.L       R2,@-R15
    0000110E E050                   MOV         #80,R0
    00001110 02FE                   MOV.L       @(R0,R15),R2
    00001112 2F26                   MOV.L       R2,@-R15
    00001114 63F3                   MOV         R15,R3
    00001116 7310                   ADD         #16,R3
    00001118 410B                   JSR         @R1
    0000111A 2F36                   MOV.L       R3,@-R15
    0000111C D13B                   MOV.L       L1059+22,R1; __addd
    0000111E 7FE8                   ADD         #-24,R15
    00001120 E058                   MOV         #88,R0
    00001122 E300                   MOV         #0,R3
    00001124 02FE                   MOV.L       @(R0,R15),R2
    00001126 E058                   MOV         #88,R0
    00001128 2F26                   MOV.L       R2,@-R15
    0000112A 02FE                   MOV.L       @(R0,R15),R2
    0000112C 2F26                   MOV.L       R2,@-R15
    0000112E 2F36                   MOV.L       R3,@-R15
    00001130 D335                   MOV.L       L1059+18,R3; H'C0568000
    00001132 2F36                   MOV.L       R3,@-R15
    00001134 62F3                   MOV         R15,R2
    00001136 7210                   ADD         #16,R2
    00001138 410B                   JSR         @R1
    0000113A 2F26                   MOV.L       R2,@-R15
    0000113C E308                   MOV         #8,R3
    0000113E 33FC                   ADD         R15,R3
    00001140 4C0B                   JSR         @R12
    00001142 2F36                   MOV.L       R3,@-R15
    00001144 D332                   MOV.L       L1059+26,R3; _cos
    00001146 7F0C                   ADD         #12,R15
    00001148 E008                   MOV         #8,R0
    0000114A 30FC                   ADD         R15,R0
    0000114C 430B                   JSR         @R3
    0000114E 2F06                   MOV.L       R0,@-R15
    00001150 D330                   MOV.L       L1059+30,R3; __muld
    00001152 7F0C                   ADD         #12,R15
    00001154 60F3                   MOV         R15,R0
    00001156 7010                   ADD         #16,R0
    00001158 430B                   JSR         @R3
    0000115A 2F06                   MOV.L       R0,@-R15
    0000115C 904C                   MOV.W       L1059+2,R0 ; H'0098
    0000115E 7FF0                   ADD         #-16,R15
    00001160 D128                   MOV.L       L1059+14,R1; __subdr




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001162 02FE                   MOV.L       @(R0,R15),R2
    00001164 9048                   MOV.W       L1059+2,R0 ; H'0098
    00001166 2F26                   MOV.L       R2,@-R15
    00001168 02FE                   MOV.L       @(R0,R15),R2
    0000116A E060                   MOV         #96,R0
    0000116C 2F26                   MOV.L       R2,@-R15
    0000116E 03FE                   MOV.L       @(R0,R15),R3
    00001170 2F36                   MOV.L       R3,@-R15
    00001172 E060                   MOV         #96,R0
    00001174 03FE                   MOV.L       @(R0,R15),R3
    00001176 2F36                   MOV.L       R3,@-R15
    00001178 62F3                   MOV         R15,R2
    0000117A 7210                   ADD         #16,R2
    0000117C 410B                   JSR         @R1
    0000117E 2F26                   MOV.L       R2,@-R15
    00001180 D122                   MOV.L       L1059+22,R1; __addd
    00001182 7FE8                   ADD         #-24,R15
    00001184 E060                   MOV         #96,R0
    00001186 E200                   MOV         #0,R2
    00001188 03FE                   MOV.L       @(R0,R15),R3
    0000118A E060                   MOV         #96,R0
    0000118C 2F36                   MOV.L       R3,@-R15
    0000118E 03FE                   MOV.L       @(R0,R15),R3
    00001190 2F36                   MOV.L       R3,@-R15
    00001192 2F26                   MOV.L       R2,@-R15
    00001194 D21C                   MOV.L       L1059+18,R2; H'C0568000
    00001196 2F26                   MOV.L       R2,@-R15
    00001198 63F3                   MOV         R15,R3
    0000119A 7310                   ADD         #16,R3
    0000119C 410B                   JSR         @R1
    0000119E 2F36                   MOV.L       R3,@-R15
    000011A0 E208                   MOV         #8,R2
    000011A2 32FC                   ADD         R15,R2
    000011A4 4C0B                   JSR         @R12
    000011A6 2F26                   MOV.L       R2,@-R15
    000011A8 D21B                   MOV.L       L1059+34,R2; _sin
    000011AA 7F0C                   ADD         #12,R15
    000011AC E008                   MOV         #8,R0
    000011AE 30FC                   ADD         R15,R0
    000011B0 420B                   JSR         @R2
    000011B2 2F06                   MOV.L       R0,@-R15
    000011B4 D217                   MOV.L       L1059+30,R2; __muld
    000011B6 7F0C                   ADD         #12,R15
    000011B8 60F3                   MOV         R15,R0
    000011BA 7010                   ADD         #16,R0
    000011BC 420B                   JSR         @R2
    000011BE 2F06                   MOV.L       R0,@-R15
    000011C0 D310                   MOV.L       L1059+14,R3; __subdr
    000011C2 61F3                   MOV         R15,R1
    000011C4 7134                   ADD         #52,R1
    000011C6 430B                   JSR         @R3
    000011C8 2F16                   MOV.L       R1,@-R15
    000011CA 5AE8                   MOV.L       @(32,R14),R10
    000011CC D113                   MOV.L       L1059+38,R1; H'D9D7BDBB
    000011CE 63A3                   MOV         R10,R3
    000011D0 33DC                   ADD         R13,R3
    000011D2 733C                   ADD         #60,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011D4 5231                   MOV.L       @(4,R3),R2
    000011D6 2F26                   MOV.L       R2,@-R15
    000011D8 6232                   MOV.L       @R3,R2
    000011DA 2F26                   MOV.L       R2,@-R15
    000011DC 2F16                   MOV.L       R1,@-R15
    000011DE D110                   MOV.L       L1059+42,R1; H'3DDB7CDF
    000011E0 D310                   MOV.L       L1059+46,R3; __ltd
    000011E2 430B                   JSR         @R3
    000011E4 2F16                   MOV.L       R1,@-R15
    000011E6 8800                   CMP/EQ      #0,R0
    000011E8 891E                   BT          L1007
    000011EA 62F3                   MOV         R15,R2
    000011EC 720C                   ADD         #12,R2
    000011EE E100                   MOV         #0,R1
    000011F0 2212                   MOV.L       R1,@R2
    000011F2 A029                   BRA         L1008
    000011F4 1211                   MOV.L       R1,@(4,R2)
    000011F6              L1059:                            
    000011F6 0088                   .DATA.W     H'0088
    000011F8 0098                   .DATA.W     H'0098
    000011FA 0000                   .DATA.W     0
    000011FC <00000000>             .DATA.L     _deg
    00001200 <00000000>             .DATA.L     _rad
    00001204 <00000000>             .DATA.L     __subdr
    00001208 C0568000               .DATA.L     H'C0568000
    0000120C <00000000>             .DATA.L     __addd
    00001210 <00000000>             .DATA.L     _cos
    00001214 <00000000>             .DATA.L     __muld
    00001218 <00000000>             .DATA.L     _sin
    0000121C D9D7BDBB               .DATA.L     H'D9D7BDBB
    00001220 3DDB7CDF               .DATA.L     H'3DDB7CDF
    00001224 <00000000>             .DATA.L     __ltd
    00001228              L1007:                            
    00001228 D113                   MOV.L       L1060+6,R1 ; __divdr
    0000122A E000                   MOV         #0,R0
    0000122C 2F06                   MOV.L       R0,@-R15
    0000122E 63A3                   MOV         R10,R3
    00001230 D010                   MOV.L       L1060+2,R0 ; H'3FF00000
    00001232 33DC                   ADD         R13,R3
    00001234 2F06                   MOV.L       R0,@-R15
    00001236 733C                   ADD         #60,R3
    00001238 5231                   MOV.L       @(4,R3),R2
    0000123A 2F26                   MOV.L       R2,@-R15
    0000123C 6232                   MOV.L       @R3,R2
    0000123E 2F26                   MOV.L       R2,@-R15
    00001240 60F3                   MOV         R15,R0
    00001242 701C                   ADD         #28,R0
    00001244 410B                   JSR         @R1
    00001246 2F06                   MOV.L       R0,@-R15
    00001248              L1008:                            
    00001248 D10C                   MOV.L       L1060+10,R1; H'D9D7BDBB
    0000124A 63A3                   MOV         R10,R3
    0000124C 33DC                   ADD         R13,R3
    0000124E 7344                   ADD         #68,R3
    00001250 5231                   MOV.L       @(4,R3),R2
    00001252 2F26                   MOV.L       R2,@-R15
    00001254 6232                   MOV.L       @R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001256 2F26                   MOV.L       R2,@-R15
    00001258 2F16                   MOV.L       R1,@-R15
    0000125A D109                   MOV.L       L1060+14,R1; H'3DDB7CDF
    0000125C D309                   MOV.L       L1060+18,R3; __ltd
    0000125E 430B                   JSR         @R3
    00001260 2F16                   MOV.L       R1,@-R15
    00001262 8800                   CMP/EQ      #0,R0
    00001264 8910                   BT          L1009
    00001266 62F3                   MOV         R15,R2
    00001268 7204                   ADD         #4,R2
    0000126A E100                   MOV         #0,R1
    0000126C 2212                   MOV.L       R1,@R2
    0000126E A01B                   BRA         L1010
    00001270 1211                   MOV.L       R1,@(4,R2)
    00001272              L1060:                            
    00001272 0000                   .DATA.W     0
    00001274 3FF00000               .DATA.L     H'3FF00000
    00001278 <00000000>             .DATA.L     __divdr
    0000127C D9D7BDBB               .DATA.L     H'D9D7BDBB
    00001280 3DDB7CDF               .DATA.L     H'3DDB7CDF
    00001284 <00000000>             .DATA.L     __ltd
    00001288              L1009:                            
    00001288 D166                   MOV.L       L1061+16,R1; __divdr
    0000128A E000                   MOV         #0,R0
    0000128C 2F06                   MOV.L       R0,@-R15
    0000128E 63A3                   MOV         R10,R3
    00001290 D063                   MOV.L       L1061+12,R0; H'3FF00000
    00001292 33DC                   ADD         R13,R3
    00001294 2F06                   MOV.L       R0,@-R15
    00001296 7344                   ADD         #68,R3
    00001298 5231                   MOV.L       @(4,R3),R2
    0000129A 2F26                   MOV.L       R2,@-R15
    0000129C 6232                   MOV.L       @R3,R2
    0000129E 2F26                   MOV.L       R2,@-R15
    000012A0 60F3                   MOV         R15,R0
    000012A2 7014                   ADD         #20,R0
    000012A4 410B                   JSR         @R1
    000012A6 2F06                   MOV.L       R0,@-R15
    000012A8              L1010:                            
    000012A8 53F2                   MOV.L       @(8,R15),R3
    000012AA 3ADC                   ADD         R13,R10
    000012AC D15E                   MOV.L       L1061+20,R1; _deg
    000012AE 2F36                   MOV.L       R3,@-R15
    000012B0 53F2                   MOV.L       @(8,R15),R3
    000012B2 2F36                   MOV.L       R3,@-R15
    000012B4 52F6                   MOV.L       @(24,R15),R2
    000012B6 2F26                   MOV.L       R2,@-R15
    000012B8 52F6                   MOV.L       @(24,R15),R2
    000012BA 2F26                   MOV.L       R2,@-R15
    000012BC 7FF8                   ADD         #-8,R15
    000012BE E208                   MOV         #8,R2
    000012C0 53AC                   MOV.L       @(48,R10),R3
    000012C2 2F36                   MOV.L       R3,@-R15
    000012C4 53AB                   MOV.L       @(44,R10),R3
    000012C6 2F36                   MOV.L       R3,@-R15
    000012C8 32FC                   ADD         R15,R2
    000012CA 410B                   JSR         @R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012CC 2F26                   MOV.L       R2,@-R15
    000012CE 7F0C                   ADD         #12,R15
    000012D0 5BE8                   MOV.L       @(32,R14),R11
    000012D2 3BDC                   ADD         R13,R11
    000012D4 53BA                   MOV.L       @(40,R11),R3
    000012D6 2F36                   MOV.L       R3,@-R15
    000012D8 53B9                   MOV.L       @(36,R11),R3
    000012DA 2F36                   MOV.L       R3,@-R15
    000012DC 52B8                   MOV.L       @(32,R11),R2
    000012DE 2F26                   MOV.L       R2,@-R15
    000012E0 52B7                   MOV.L       @(28,R11),R2
    000012E2 2F26                   MOV.L       R2,@-R15
    000012E4 53B6                   MOV.L       @(24,R11),R3
    000012E6 2F36                   MOV.L       R3,@-R15
    000012E8 53B5                   MOV.L       @(20,R11),R3
    000012EA 2F36                   MOV.L       R3,@-R15
    000012EC 52B4                   MOV.L       @(16,R11),R2
    000012EE 2F26                   MOV.L       R2,@-R15
    000012F0 52B3                   MOV.L       @(12,R11),R2
    000012F2 2F26                   MOV.L       R2,@-R15
    000012F4 53BE                   MOV.L       @(56,R11),R3
    000012F6 2F36                   MOV.L       R3,@-R15
    000012F8 53BD                   MOV.L       @(52,R11),R3
    000012FA D24C                   MOV.L       L1061+24,R2; __dtoi
    000012FC 420B                   JSR         @R2
    000012FE 2F36                   MOV.L       R3,@-R15
    00001300 D34B                   MOV.L       L1061+28,R3; _intialCZb
    00001302 430B                   JSR         @R3
    00001304 6403                   MOV         R0,R4
    00001306 E200                   MOV         #0,R2
    00001308 9184                   MOV.W       L1061,R1   ; H'00AC
    0000130A 6323                   MOV         R2,R3
    0000130C DB49                   MOV.L       L1061+32,R11; _zbzs_x
    0000130E 2F26                   MOV.L       R2,@-R15
    00001310 2F26                   MOV.L       R2,@-R15
    00001312 2F26                   MOV.L       R2,@-R15
    00001314 2F36                   MOV.L       R3,@-R15
    00001316 52E8                   MOV.L       @(32,R14),R2
    00001318 32DC                   ADD         R13,R2
    0000131A 5326                   MOV.L       @(24,R2),R3
    0000131C 2F36                   MOV.L       R3,@-R15
    0000131E 5325                   MOV.L       @(20,R2),R3
    00001320 2F36                   MOV.L       R3,@-R15
    00001322 31FC                   ADD         R15,R1
    00001324 4B0B                   JSR         @R11
    00001326 2F16                   MOV.L       R1,@-R15
    00001328 DB43                   MOV.L       L1061+36,R11; _zbzs_y
    0000132A E300                   MOV         #0,R3
    0000132C 9173                   MOV.W       L1061+2,R1 ; H'00C0
    0000132E 6233                   MOV         R3,R2
    00001330 2F36                   MOV.L       R3,@-R15
    00001332 2F36                   MOV.L       R3,@-R15
    00001334 2F36                   MOV.L       R3,@-R15
    00001336 2F26                   MOV.L       R2,@-R15
    00001338 53E8                   MOV.L       @(32,R14),R3
    0000133A 33DC                   ADD         R13,R3
    0000133C 5236                   MOV.L       @(24,R3),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000133E 2F26                   MOV.L       R2,@-R15
    00001340 5235                   MOV.L       @(20,R3),R2
    00001342 2F26                   MOV.L       R2,@-R15
    00001344 31FC                   ADD         R15,R1
    00001346 4B0B                   JSR         @R11
    00001348 2F16                   MOV.L       R1,@-R15
    0000134A 7F70                   ADD         #112,R15
    0000134C DB3B                   MOV.L       L1061+40,R11; _zbzs_a
    0000134E E300                   MOV         #0,R3
    00001350 2F36                   MOV.L       R3,@-R15
    00001352 6233                   MOV         R3,R2
    00001354 2F36                   MOV.L       R3,@-R15
    00001356 2F36                   MOV.L       R3,@-R15
    00001358 2F26                   MOV.L       R2,@-R15
    0000135A 53E8                   MOV.L       @(32,R14),R3
    0000135C 33DC                   ADD         R13,R3
    0000135E 5236                   MOV.L       @(24,R3),R2
    00001360 2F26                   MOV.L       R2,@-R15
    00001362 5235                   MOV.L       @(20,R3),R2
    00001364 2F26                   MOV.L       R2,@-R15
    00001366 61F3                   MOV         R15,R1
    00001368 7164                   ADD         #100,R1
    0000136A 4B0B                   JSR         @R11
    0000136C 2F16                   MOV.L       R1,@-R15
    0000136E 7F0C                   ADD         #12,R15
    00001370 9052                   MOV.W       L1061+4,R0 ; H'0088
    00001372 00FE                   MOV.L       @(R0,R15),R0
    00001374 D132                   MOV.L       L1061+44,R1; __subdr
    00001376 2F06                   MOV.L       R0,@-R15
    00001378 904E                   MOV.W       L1061+4,R0 ; H'0088
    0000137A 00FE                   MOV.L       @(R0,R15),R0
    0000137C 2F06                   MOV.L       R0,@-R15
    0000137E E070                   MOV         #112,R0
    00001380 03FE                   MOV.L       @(R0,R15),R3
    00001382 E070                   MOV         #112,R0
    00001384 2F36                   MOV.L       R3,@-R15
    00001386 03FE                   MOV.L       @(R0,R15),R3
    00001388 2F36                   MOV.L       R3,@-R15
    0000138A 62F3                   MOV         R15,R2
    0000138C 7210                   ADD         #16,R2
    0000138E 410B                   JSR         @R1
    00001390 2F26                   MOV.L       R2,@-R15
    00001392 7FE8                   ADD         #-24,R15
    00001394 D12C                   MOV.L       L1061+52,R1; __addd
    00001396 E078                   MOV         #120,R0
    00001398 03FE                   MOV.L       @(R0,R15),R3
    0000139A E200                   MOV         #0,R2
    0000139C 2F36                   MOV.L       R3,@-R15
    0000139E E078                   MOV         #120,R0
    000013A0 03FE                   MOV.L       @(R0,R15),R3
    000013A2 2F36                   MOV.L       R3,@-R15
    000013A4 2F26                   MOV.L       R2,@-R15
    000013A6 D227                   MOV.L       L1061+48,R2; H'C0568000
    000013A8 2F26                   MOV.L       R2,@-R15
    000013AA 63F3                   MOV         R15,R3
    000013AC 7310                   ADD         #16,R3
    000013AE 410B                   JSR         @R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013B0 2F36                   MOV.L       R3,@-R15
    000013B2 E208                   MOV         #8,R2
    000013B4 32FC                   ADD         R15,R2
    000013B6 4C0B                   JSR         @R12
    000013B8 2F26                   MOV.L       R2,@-R15
    000013BA 7F0C                   ADD         #12,R15
    000013BC D223                   MOV.L       L1061+56,R2; _cos
    000013BE E008                   MOV         #8,R0
    000013C0 30FC                   ADD         R15,R0
    000013C2 420B                   JSR         @R2
    000013C4 2F06                   MOV.L       R0,@-R15
    000013C6 7F0C                   ADD         #12,R15
    000013C8 D221                   MOV.L       L1061+60,R2; __muld
    000013CA 60F3                   MOV         R15,R0
    000013CC 7010                   ADD         #16,R0
    000013CE 420B                   JSR         @R2
    000013D0 2F06                   MOV.L       R0,@-R15
    000013D2 7FF0                   ADD         #-16,R15
    000013D4 9021                   MOV.W       L1061+6,R0 ; H'0098
    000013D6 03FE                   MOV.L       @(R0,R15),R3
    000013D8 901F                   MOV.W       L1061+6,R0 ; H'0098
    000013DA 2F36                   MOV.L       R3,@-R15
    000013DC 03FE                   MOV.L       @(R0,R15),R3
    000013DE 2F36                   MOV.L       R3,@-R15
    000013E0 901C                   MOV.W       L1061+8,R0 ; H'0080
    000013E2 02FE                   MOV.L       @(R0,R15),R2
    000013E4 901A                   MOV.W       L1061+8,R0 ; H'0080
    000013E6 2F26                   MOV.L       R2,@-R15
    000013E8 02FE                   MOV.L       @(R0,R15),R2
    000013EA 2F26                   MOV.L       R2,@-R15
    000013EC D114                   MOV.L       L1061+44,R1; __subdr
    000013EE 63F3                   MOV         R15,R3
    000013F0 7310                   ADD         #16,R3
    000013F2 410B                   JSR         @R1
    000013F4 2F36                   MOV.L       R3,@-R15
    000013F6 7FE8                   ADD         #-24,R15
    000013F8 9010                   MOV.W       L1061+8,R0 ; H'0080
    000013FA E300                   MOV         #0,R3
    000013FC 02FE                   MOV.L       @(R0,R15),R2
    000013FE 2F26                   MOV.L       R2,@-R15
    00001400 900C                   MOV.W       L1061+8,R0 ; H'0080
    00001402 02FE                   MOV.L       @(R0,R15),R2
    00001404 2F26                   MOV.L       R2,@-R15
    00001406 2F36                   MOV.L       R3,@-R15
    00001408 D30E                   MOV.L       L1061+48,R3; H'C0568000
    0000140A 2F36                   MOV.L       R3,@-R15
    0000140C 62F3                   MOV         R15,R2
    0000140E 7210                   ADD         #16,R2
    00001410 A020                   BRA         L1028
    00001412 2F26                   MOV.L       R2,@-R15
    00001414              L1061:                            
    00001414 00AC                   .DATA.W     H'00AC
    00001416 00C0                   .DATA.W     H'00C0
    00001418 0088                   .DATA.W     H'0088
    0000141A 0098                   .DATA.W     H'0098
    0000141C 0080                   .DATA.W     H'0080
    0000141E 0000                   .DATA.W     0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001420 3FF00000               .DATA.L     H'3FF00000
    00001424 <00000000>             .DATA.L     __divdr
    00001428 <00000000>             .DATA.L     _deg
    0000142C <00000000>             .DATA.L     __dtoi
    00001430 <00000000>             .DATA.L     _intialCZb
    00001434 <00000000>             .DATA.L     _zbzs_x
    00001438 <00000000>             .DATA.L     _zbzs_y
    0000143C <00000000>             .DATA.L     _zbzs_a
    00001440 <00000000>             .DATA.L     __subdr
    00001444 C0568000               .DATA.L     H'C0568000
    00001448 <00000000>             .DATA.L     __addd
    0000144C <00000000>             .DATA.L     _cos
    00001450 <00000000>             .DATA.L     __muld
    00001454              L1028:                            
    00001454 D14E                   MOV.L       L1062+4,R1 ; __addd
    00001456 410B                   JSR         @R1
    00001458 0009                   NOP
    0000145A E308                   MOV         #8,R3
    0000145C 33FC                   ADD         R15,R3
    0000145E 4C0B                   JSR         @R12
    00001460 2F36                   MOV.L       R3,@-R15
    00001462 7F0C                   ADD         #12,R15
    00001464 D34B                   MOV.L       L1062+8,R3 ; _sin
    00001466 E008                   MOV         #8,R0
    00001468 30FC                   ADD         R15,R0
    0000146A 430B                   JSR         @R3
    0000146C 2F06                   MOV.L       R0,@-R15
    0000146E 7F0C                   ADD         #12,R15
    00001470 D349                   MOV.L       L1062+12,R3; __muld
    00001472 60F3                   MOV         R15,R0
    00001474 7010                   ADD         #16,R0
    00001476 430B                   JSR         @R3
    00001478 2F06                   MOV.L       R0,@-R15
    0000147A 61F3                   MOV         R15,R1
    0000147C D247                   MOV.L       L1062+16,R2; __subdr
    0000147E 7154                   ADD         #84,R1
    00001480 420B                   JSR         @R2
    00001482 2F16                   MOV.L       R1,@-R15
    00001484 D144                   MOV.L       L1062+12,R1; __muld
    00001486 7FF8                   ADD         #-8,R15
    00001488 E050                   MOV         #80,R0
    0000148A 03FE                   MOV.L       @(R0,R15),R3
    0000148C 2F36                   MOV.L       R3,@-R15
    0000148E E050                   MOV         #80,R0
    00001490 03FE                   MOV.L       @(R0,R15),R3
    00001492 2F36                   MOV.L       R3,@-R15
    00001494 52FE                   MOV.L       @(56,R15),R2
    00001496 2F26                   MOV.L       R2,@-R15
    00001498 52FE                   MOV.L       @(56,R15),R2
    0000149A 2F26                   MOV.L       R2,@-R15
    0000149C 63F3                   MOV         R15,R3
    0000149E 7310                   ADD         #16,R3
    000014A0 410B                   JSR         @R1
    000014A2 2F36                   MOV.L       R3,@-R15
    000014A4 D33E                   MOV.L       L1062+20,R3; __led
    000014A6 E200                   MOV         #0,R2
    000014A8 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014AA 430B                   JSR         @R3
    000014AC 2F26                   MOV.L       R2,@-R15
    000014AE 8800                   CMP/EQ      #0,R0
    000014B0 895A                   BT          L1011
    000014B2 7801                   ADD         #1,R8
    000014B4 DE3B                   MOV.L       L1062+24,R14; _zbfs_d
    000014B6 6083                   MOV         R8,R0
    000014B8 8801                   CMP/EQ      #1,R0
    000014BA 8B11                   BF          L1012
    000014BC E078                   MOV         #120,R0
    000014BE 03FE                   MOV.L       @(R0,R15),R3
    000014C0 2F36                   MOV.L       R3,@-R15
    000014C2 E078                   MOV         #120,R0
    000014C4 03FE                   MOV.L       @(R0,R15),R3
    000014C6 2F36                   MOV.L       R3,@-R15
    000014C8 9060                   MOV.W       L1062,R0   ; H'0088
    000014CA 02FE                   MOV.L       @(R0,R15),R2
    000014CC 905E                   MOV.W       L1062,R0   ; H'0088
    000014CE 2F26                   MOV.L       R2,@-R15
    000014D0 02FE                   MOV.L       @(R0,R15),R2
    000014D2 2F26                   MOV.L       R2,@-R15
    000014D4 63F3                   MOV         R15,R3
    000014D6 7374                   ADD         #116,R3
    000014D8 4E0B                   JSR         @R14
    000014DA 2F36                   MOV.L       R3,@-R15
    000014DC A032                   BRA         L764
    000014DE 7F14                   ADD         #20,R15
    000014E0              L1012:                            
    000014E0 E078                   MOV         #120,R0
    000014E2 01FE                   MOV.L       @(R0,R15),R1
    000014E4 2F16                   MOV.L       R1,@-R15
    000014E6 E078                   MOV         #120,R0
    000014E8 01FE                   MOV.L       @(R0,R15),R1
    000014EA 2F16                   MOV.L       R1,@-R15
    000014EC 904E                   MOV.W       L1062,R0   ; H'0088
    000014EE 03FE                   MOV.L       @(R0,R15),R3
    000014F0 904C                   MOV.W       L1062,R0   ; H'0088
    000014F2 2F36                   MOV.L       R3,@-R15
    000014F4 03FE                   MOV.L       @(R0,R15),R3
    000014F6 2F36                   MOV.L       R3,@-R15
    000014F8 62F3                   MOV         R15,R2
    000014FA 722C                   ADD         #44,R2
    000014FC 4E0B                   JSR         @R14
    000014FE 2F26                   MOV.L       R2,@-R15
    00001500 DE29                   MOV.L       L1062+28,R14; _fabs
    00001502 7F0C                   ADD         #12,R15
    00001504 53FA                   MOV.L       @(40,R15),R3
    00001506 E208                   MOV         #8,R2
    00001508 2F36                   MOV.L       R3,@-R15
    0000150A 53FA                   MOV.L       @(40,R15),R3
    0000150C 2F36                   MOV.L       R3,@-R15
    0000150E 32FC                   ADD         R15,R2
    00001510 4E0B                   JSR         @R14
    00001512 2F26                   MOV.L       R2,@-R15
    00001514 7F04                   ADD         #4,R15
    00001516 E078                   MOV         #120,R0
    00001518 01FE                   MOV.L       @(R0,R15),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000151A E308                   MOV         #8,R3
    0000151C 2F16                   MOV.L       R1,@-R15
    0000151E E078                   MOV         #120,R0
    00001520 01FE                   MOV.L       @(R0,R15),R1
    00001522 2F16                   MOV.L       R1,@-R15
    00001524 33FC                   ADD         R15,R3
    00001526 4E0B                   JSR         @R14
    00001528 2F36                   MOV.L       R3,@-R15
    0000152A D220                   MOV.L       L1062+32,R2; __ltd
    0000152C 420B                   JSR         @R2
    0000152E 7F0C                   ADD         #12,R15
    00001530 8800                   CMP/EQ      #0,R0
    00001532 8919                   BT          L1011
    00001534 63F3                   MOV         R15,R3
    00001536 731C                   ADD         #28,R3
    00001538 6232                   MOV.L       @R3,R2
    0000153A 61F3                   MOV         R15,R1
    0000153C 7164                   ADD         #100,R1
    0000153E 2122                   MOV.L       R2,@R1
    00001540 5231                   MOV.L       @(4,R3),R2
    00001542 1121                   MOV.L       R2,@(4,R1)
    00001544              L764:
    00001544 DE1A                   MOV.L       L1062+36,R14; _zbfs_s
    00001546 E078                   MOV         #120,R0
    00001548 03FE                   MOV.L       @(R0,R15),R3
    0000154A E078                   MOV         #120,R0
    0000154C 2F36                   MOV.L       R3,@-R15
    0000154E 03FE                   MOV.L       @(R0,R15),R3
    00001550 901C                   MOV.W       L1062,R0   ; H'0088
    00001552 2F36                   MOV.L       R3,@-R15
    00001554 02FE                   MOV.L       @(R0,R15),R2
    00001556 2F26                   MOV.L       R2,@-R15
    00001558 9018                   MOV.W       L1062,R0   ; H'0088
    0000155A 02FE                   MOV.L       @(R0,R15),R2
    0000155C 2F26                   MOV.L       R2,@-R15
    0000155E 63F3                   MOV         R15,R3
    00001560 737C                   ADD         #124,R3
    00001562 4E0B                   JSR         @R14
    00001564 2F36                   MOV.L       R3,@-R15
    00001566 7F14                   ADD         #20,R15
    00001568              L1011:                            
    00001568 7901                   ADD         #1,R9
    0000156A              L1005:                            
    0000156A DE12                   MOV.L       L1062+40,R14; _route
    0000156C 52E9                   MOV.L       @(36,R14),R2
    0000156E 3923                   CMP/GE      R2,R9
    00001570 8901                   BT          L1063
    00001572 ADA2                   BRA         L1006
    00001574 0009                   NOP
    00001576              L1063:                            
    00001576 2888                   TST         R8,R8
    00001578 8B22                   BF          L1015
    0000157A 9308                   MOV.W       L1062+2,R3 ; H'00A8
    0000157C D00E                   MOV.L       L1062+44,R0; H'C202A05F
    0000157E 33FC                   ADD         R15,R3
    00001580 6132                   MOV.L       @R3,R1
    00001582 2102                   MOV.L       R0,@R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001584 D00D                   MOV.L       L1062+48,R0; H'20000000
    00001586 1101                   MOV.L       R0,@(4,R1)
    00001588 A031                   BRA         L1016
    0000158A 0009                   NOP
    0000158C              L1062:                            
    0000158C 0088                   .DATA.W     H'0088
    0000158E 00A8                   .DATA.W     H'00A8
    00001590 <00000000>             .DATA.L     __addd
    00001594 <00000000>             .DATA.L     _sin
    00001598 <00000000>             .DATA.L     __muld
    0000159C <00000000>             .DATA.L     __subdr
    000015A0 <00000000>             .DATA.L     __led
    000015A4 <00000000>             .DATA.L     _zbfs_d
    000015A8 <00000000>             .DATA.L     _fabs
    000015AC <00000000>             .DATA.L     __ltd
    000015B0 <00000000>             .DATA.L     _zbfs_s
    000015B4 <00000000>             .DATA.L     _route
    000015B8 C202A05F               .DATA.L     H'C202A05F
    000015BC 20000000               .DATA.L     H'20000000
    000015C0              L1015:                            
    000015C0 62F2                   MOV.L       @R15,R2
    000015C2 2228                   TST         R2,R2
    000015C4 8B0A                   BF          L1017
    000015C6 63F3                   MOV         R15,R3
    000015C8 921D                   MOV.W       L1064,R2   ; H'00A8
    000015CA 736C                   ADD         #108,R3
    000015CC 6032                   MOV.L       @R3,R0
    000015CE 32FC                   ADD         R15,R2
    000015D0 6122                   MOV.L       @R2,R1
    000015D2 2102                   MOV.L       R0,@R1
    000015D4 5031                   MOV.L       @(4,R3),R0
    000015D6 1101                   MOV.L       R0,@(4,R1)
    000015D8 A009                   BRA         L1016
    000015DA 0009                   NOP
    000015DC              L1017:                            
    000015DC 9113                   MOV.W       L1064,R1   ; H'00A8
    000015DE 63F3                   MOV         R15,R3
    000015E0 31FC                   ADD         R15,R1
    000015E2 7364                   ADD         #100,R3
    000015E4 6212                   MOV.L       @R1,R2
    000015E6 6032                   MOV.L       @R3,R0
    000015E8 2202                   MOV.L       R0,@R2
    000015EA 5031                   MOV.L       @(4,R3),R0
    000015EC 1201                   MOV.L       R0,@(4,R2)
    000015EE              L1016:                            
    000015EE 910B                   MOV.W       L1064+2,R1 ; H'0084
    000015F0 3F1C                   ADD         R1,R15
    000015F2 4F16                   LDS.L       @R15+,MACL
    000015F4 4F26                   LDS.L       @R15+,PR
    000015F6 68F6                   MOV.L       @R15+,R8
    000015F8 69F6                   MOV.L       @R15+,R9
    000015FA 6AF6                   MOV.L       @R15+,R10
    000015FC 6BF6                   MOV.L       @R15+,R11
    000015FE 6CF6                   MOV.L       @R15+,R12
    00001600 6DF6                   MOV.L       @R15+,R13
    00001602 000B                   RTS
    00001604 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001606              L1064:                            
    00001606 00A8                   .DATA.W     H'00A8
    00001608 0084                   .DATA.W     H'0084
C   00000000              L547:
    00000000 2564                   .SDATA      "%d"
    00000002 00                     .DATA.B     H'00
    00000003 00000001               .RES.B      1
    00000004              L551:
    00000004 B8B2B8C7               .DATA.B     H'B8,H'B2,H'B8,H'C7
    00000008 3F                     .SDATA      "?"
    00000009 00                     .DATA.B     H'00
    0000000A 00000002               .RES.W      1
    0000000C              L552:
    0000000C 596573203A             .SDATA      "Yes : [F1]"
             205B46315D   
    00000016 00                     .DATA.B     H'00
    00000017 00000001               .RES.B      1
    00000018              L553:
    00000018 4E6F20203A             .SDATA      "No  : [F6]"
             205B46365D   
    00000022 00                     .DATA.B     H'00
    00000023              L560:
    00000023 00                     .DATA.B     H'00
    00000024 0000000C01             .DATAB.B    12,0
             00           
    00000030              L564:
    00000030 CEC4BCFEC3             .DATA.B     H'CE,H'C4,H'BC,H'FE,H'C3,H'FB
             FB           
    00000036 282A2E7372             .SDATA      "(*.srd)"
             6429         
    0000003D 00                     .DATA.B     H'00
    0000003E 00000002               .RES.W      1
    00000040              L567:
    00000040 2E737264               .SDATA      ".srd"
    00000044 00                     .DATA.B     H'00
    00000045 00000001               .RES.B      1
    00000046 00000002               .RES.W      1
    00000048              L574:
    00000048 B1A3B4E6CE             .DATA.B     H'B1,H'A3,H'B4,H'E6,H'CE,H'AA
             AA           
    0000004E 20                     .SDATA      " "
    0000004F 00                     .DATA.B     H'00
    00000050              L575:
    00000050 B4F2BFAA               .DATA.B     H'B4,H'F2,H'BF,H'AA
    00000054 20                     .SDATA      " "
    00000055 00                     .DATA.B     H'00
    00000056 00000002               .RES.W      1
    00000058              L576:
    00000058 D0C2BDA8               .DATA.B     H'D0,H'C2,H'BD,H'A8
    0000005C 20                     .SDATA      " "
    0000005D 00                     .DATA.B     H'00
    0000005E              L581:
    0000005E 00                     .DATA.B     H'00
    0000005F 0000000C01             .DATAB.B    12,0
             00           
    0000006B 00000001               .RES.B      1
    0000006C              L594:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000006C 4E6F204669             .SDATA      "No File!"
             6C6521       
    00000074 00                     .DATA.B     H'00
    00000075 00000001               .RES.B      1
    00000076 00000002               .RES.W      1
    00000078              L598:
    00000078 D0C2BDA8               .DATA.B     H'D0,H'C2,H'BD,H'A8
    0000007C 3F                     .SDATA      "?"
    0000007D 00                     .DATA.B     H'00
    0000007E 00000002               .RES.W      1
    00000080              L600:
    00000080 B1A3B4E6CA             .DATA.B     H'B1,H'A3,H'B4,H'E6,H'CA,H'FD,H'BE,H'DD
             FDBEDD       
    00000088 3F                     .SDATA      "?"
    00000089 00                     .DATA.B     H'00
    0000008A 00000002               .RES.W      1
    0000008C              L607:
    0000008C <00000000>             .DATA.L     L608,L609,L610,L611,L612,L613,L614,L615,L616
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    000000B0              L618:
    000000B0 <00000000>             .DATA.L     L619,L620,L621,L622,L623
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    000000C4              L625:
    000000C4 <00000000>             .DATA.L     L626,L627,L628,L629,L630,L631,L632,L633,L634
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    000000E8              L646:
    000000E8 00                     .DATA.B     H'00
    000000E9 0000000C01             .DATAB.B    12,0
             00           
    000000F5 00000001               .RES.B      1
    000000F6 00000002               .RES.W      1
    000000F8              L650:
    000000F8 3F                     .SDATA      "?"
    000000F9 00                     .DATA.B     H'00
    000000FA 00000002               .RES.W      1
    000000FC              L655:
    000000FC 256C66                 .SDATA      "%lf"
    000000FF 00                     .DATA.B     H'00
    00000100              L656:
    00000100 2573                   .SDATA      "%s"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000102 00                     .DATA.B     H'00
    00000103 00000001               .RES.B      1
    00000104              L660:
    00000104 B1A3B4E6               .DATA.B     H'B1,H'A3,H'B4,H'E6
    00000108 3F                     .SDATA      "?"
    00000109 00                     .DATA.B     H'00
    0000010A 00000002               .RES.W      1
    0000010C              L667:
    0000010C C9BE                   .DATA.B     H'C9,H'BE
    0000010E 20                     .SDATA      " "
    0000010F B3FD                   .DATA.B     H'B3,H'FD
    00000111 20                     .SDATA      " "
    00000112 D2BB                   .DATA.B     H'D2,H'BB
    00000114 20                     .SDATA      " "
    00000115 D0D0                   .DATA.B     H'D0,H'D0
    00000117 3F                     .SDATA      "?"
    00000118 00                     .DATA.B     H'00
    00000119 00000001               .RES.B      1
    0000011A 00000002               .RES.W      1
    0000011C              L668:
    0000011C 5B46315D59             .SDATA      "[F1]Yes   [F6]No"
             6573202020   
             5B46365D4E   
             6F           
    0000012C 00                     .DATA.B     H'00
    0000012D 00000001               .RES.B      1
    0000012E 00000002               .RES.W      1
    00000130              L670:
    00000130 C7E5                   .DATA.B     H'C7,H'E5
    00000132 20                     .SDATA      " "
    00000133 BFD5                   .DATA.B     H'BF,H'D5
    00000135 20                     .SDATA      " "
    00000136 CBF9                   .DATA.B     H'CB,H'F9
    00000138 20                     .SDATA      " "
    00000139 D3D0                   .DATA.B     H'D3,H'D0
    0000013B 203F                   .SDATA      " ?"
    0000013D 00                     .DATA.B     H'00
    0000013E 00000002               .RES.W      1
    00000140              L672:
    00000140 CFDFC2B7C3             .DATA.B     H'CF,H'DF,H'C2,H'B7,H'C3,H'FB,H'B3,H'C6,H'00
             FBB3C600     
    00000149 00000001               .RES.B      1
    0000014A 00000002               .RES.W      1
    0000014C              L674:
    0000014C C7EBB1A3B4             .DATA.B     H'C7,H'EB,H'B1,H'A3,H'B4,H'E6,H'CF,H'DF,H'C2,H'B7,H'CE,H'C4,H'BC,H'FE
             E6CFDFC2B7   
             CEC4BCFE     
    0000015A 20                     .SDATA      " "
    0000015B 00                     .DATA.B     H'00
    0000015C              L608:
    0000015C 4448                   .SDATA      "DH"
    0000015E 00                     .DATA.B     H'00
    0000015F 00000001               .RES.B      1
    00000160              L609:
    00000160 51445A48               .SDATA      "QDZH"
    00000164 00                     .DATA.B     H'00
    00000165 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000166 00000002               .RES.W      1
    00000168              L610:
    00000168 5A445A48               .SDATA      "ZDZH"
    0000016C 00                     .DATA.B     H'00
    0000016D 00000001               .RES.B      1
    0000016E 00000002               .RES.W      1
    00000170              L611:
    00000170 58                     .SDATA      "X"
    00000171 00                     .DATA.B     H'00
    00000172 00000002               .RES.W      1
    00000174              L612:
    00000174 59                     .SDATA      "Y"
    00000175 00                     .DATA.B     H'00
    00000176 00000002               .RES.W      1
    00000178              L613:
    00000178 46574A                 .SDATA      "FWJ"
    0000017B 00                     .DATA.B     H'00
    0000017C              L614:
    0000017C 5A58                   .SDATA      "ZX"
    0000017E 00                     .DATA.B     H'00
    0000017F 00000001               .RES.B      1
    00000180              L615:
    00000180 5144424A               .SDATA      "QDBJ"
    00000184 00                     .DATA.B     H'00
    00000185 00000001               .RES.B      1
    00000186 00000002               .RES.W      1
    00000188              L616:
    00000188 5A44424A               .SDATA      "ZDBJ"
    0000018C 00                     .DATA.B     H'00
    0000018D 00000001               .RES.B      1
    0000018E 00000002               .RES.W      1
    00000190              L619:
    00000190 536574                 .SDATA      "Set"
    00000193 00                     .DATA.B     H'00
    00000194              L620:
    00000194 416464                 .SDATA      "Add"
    00000197 00                     .DATA.B     H'00
    00000198              L621:
    00000198 496E73                 .SDATA      "Ins"
    0000019B 00                     .DATA.B     H'00
    0000019C              L622:
    0000019C 44656C4C               .SDATA      "DelL"
    000001A0 00                     .DATA.B     H'00
    000001A1 00000001               .RES.B      1
    000001A2 00000002               .RES.W      1
    000001A4              L623:
    000001A4 44656C41               .SDATA      "DelA"
    000001A8 00                     .DATA.B     H'00
    000001A9 00000001               .RES.B      1
    000001AA 00000002               .RES.W      1
    000001AC              L626:
    000001AC B5E3C3FB00             .DATA.B     H'B5,H'E3,H'C3,H'FB,H'00
    000001B1 00000001               .RES.B      1
    000001B2 00000002               .RES.W      1
    000001B4              L627:
    000001B4 C6F0B5E3D7             .DATA.B     H'C6,H'F0,H'B5,H'E3,H'D7,H'AE,H'BA,H'C5,H'00
             AEBAC500     




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001BD 00000001               .RES.B      1
    000001BE 00000002               .RES.W      1
    000001C0              L628:
    000001C0 D6D5B5E3D7             .DATA.B     H'D6,H'D5,H'B5,H'E3,H'D7,H'AE,H'BA,H'C5,H'00
             AEBAC500     
    000001C9 00000001               .RES.B      1
    000001CA 00000002               .RES.W      1
    000001CC              L629:
    000001CC 58                     .SDATA      "X"
    000001CD D7F8B1EA               .DATA.B     H'D7,H'F8,H'B1,H'EA
    000001D1 20                     .SDATA      " "
    000001D2 00                     .DATA.B     H'00
    000001D3 00000001               .RES.B      1
    000001D4              L630:
    000001D4 59                     .SDATA      "Y"
    000001D5 D7F8B1EA               .DATA.B     H'D7,H'F8,H'B1,H'EA
    000001D9 20                     .SDATA      " "
    000001DA 00                     .DATA.B     H'00
    000001DB 00000001               .RES.B      1
    000001DC              L631:
    000001DC B7BDCEBBBD             .DATA.B     H'B7,H'BD,H'CE,H'BB,H'BD,H'C7
             C7           
    000001E2 20                     .SDATA      " "
    000001E3 00                     .DATA.B     H'00
    000001E4              L632:
    000001E4 D7AACFF2               .DATA.B     H'D7,H'AA,H'CF,H'F2
    000001E8 20                     .SDATA      " "
    000001E9 00                     .DATA.B     H'00
    000001EA 00000002               .RES.W      1
    000001EC              L633:
    000001EC C6F0B5E3B0             .DATA.B     H'C6,H'F0,H'B5,H'E3,H'B0,H'EB,H'BE,H'B6,H'00
             EBBEB600     
    000001F5 00000001               .RES.B      1
    000001F6 00000002               .RES.W      1
    000001F8              L634:
    000001F8 D6D5B5E3B0             .DATA.B     H'D6,H'D5,H'B5,H'E3,H'B0,H'EB,H'BE,H'B6,H'00
             EBBEB600     
























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Mar-2015 00:40:54  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        36




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      545



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000160A Byte(s)
CONSTANT SECTION (C):                               00000201 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000180B Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           64
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           9
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           287






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk7800.tmp 

