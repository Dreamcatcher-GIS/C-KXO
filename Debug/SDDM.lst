SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Administrator\Desktop\2015-06-6½»µã·¨×ªÏßÔªÍÆÁ´±í\2015-06-4½»µã·¨×ªÏßÔªÍÆÁ´±í\SDDM.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          SDDM.c     1    #include "headfile.h"
P   00000000              _SDDM:                           ; function: SDDM
                                                           ; frame size=132
                                                           ; used runtime library name:
                                                           ; __quick_evn_mvn, __quick_odd_mvn
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A EB02                   MOV         #2,R11
    0000000C D23F                   MOV.L       L578+4,R2  ; L504
    0000000E EA00                   MOV         #0,R10
    00000010 DD3D                   MOV.L       L578,R13   ; _setup
    00000012 6EA3                   MOV         R10,R14
    00000014 D33E                   MOV.L       L578+8,R3  ; __quick_evn_mvn
    00000016 2F96                   MOV.L       R9,@-R15
    00000018 2F86                   MOV.L       R8,@-R15
    0000001A 4F22                   STS.L       PR,@-R15
    0000001C 4F12                   STS.L       MACL,@-R15
    0000001E 7FA8                   ADD         #-88,R15
    00000020 68F3                   MOV         R15,R8
    00000022 7840                   ADD         #64,R8
    00000024 61F3                   MOV         R15,R1
    00000026 7140                   ADD         #64,R1
    00000028 430B                   JSR         @R3
    0000002A E018                   MOV         #24,R0
    0000002C D239                   MOV.L       L578+12,R2 ; L506
    0000002E 64F3                   MOV         R15,R4
    00000030 D339                   MOV.L       L578+16,R3 ; __quick_odd_mvn
    00000032 61F3                   MOV         R15,R1
    00000034 7434                   ADD         #52,R4
    00000036 7134                   ADD         #52,R1
    00000038 430B                   JSR         @R3
    0000003A E00C                   MOV         #12,R0






    0000003C 6183                   MOV         R8,R1
    0000003E 63D3                   MOV         R13,R3
    00000040 1F12                   MOV.L       R1,@(8,R15)
    00000042 6013                   MOV         R1,R0
    00000044 731C                   ADD         #28,R3
    00000046 6232                   MOV.L       @R3,R2
    00000048 2022                   MOV.L       R2,@R0
    0000004A 5231                   MOV.L       @(4,R3),R2
    0000004C 1021                   MOV.L       R2,@(4,R0)
    0000004E 6303                   MOV         R0,R3
    00000050 7308                   ADD         #8,R3
    00000052 62D3                   MOV         R13,R2
    00000054 1F31                   MOV.L       R3,@(4,R15)
    00000056 6133                   MOV         R3,R1
    00000058 7224                   ADD         #36,R2
    0000005A 63D3                   MOV         R13,R3
    0000005C 6022                   MOV.L       @R2,R0
    0000005E 7314                   ADD         #20,R3
    00000060 2102                   MOV.L       R0,@R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000062 5021                   MOV.L       @(4,R2),R0
    00000064 1101                   MOV.L       R0,@(4,R1)
    00000066 6283                   MOV         R8,R2
    00000068 7210                   ADD         #16,R2
    0000006A 6123                   MOV         R2,R1
    0000006C 2F22                   MOV.L       R2,@R15
    0000006E 6032                   MOV.L       @R3,R0
    00000070 2102                   MOV.L       R0,@R1
    00000072 5031                   MOV.L       @(4,R3),R0
    00000074 1101                   MOV.L       R0,@(4,R1)
    00000076 6343                   MOV         R4,R3
    00000078 730C                   ADD         #12,R3
    0000007A 1F38                   MOV.L       R3,@(32,R15)
    0000007C 1F45                   MOV.L       R4,@(20,R15)
    0000007E 62F3                   MOV         R15,R2
    00000080 7224                   ADD         #36,R2
    00000082 61F3                   MOV         R15,R1
    00000084 1F26                   MOV.L       R2,@(24,R15)
    00000086 7125                   ADD         #37,R1
    00000088 1F17                   MOV.L       R1,@(28,R15)
    0000008A              L559:                             
    0000008A 60B3                   MOV         R11,R0
    0000008C 8802                   CMP/EQ      #2,R0
    0000008E 8F35                   BF/S        L560
    00000090 EC01                   MOV         #1,R12
    00000092 D922                   MOV.L       L578+20,R9 ; _Bdisp_AllClr_VRAM
    00000094 490B                   JSR         @R9
    00000096 6BC3                   MOV         R12,R11
    00000098 D921                   MOV.L       L578+24,R9 ; _DrawPicture
    0000009A E70D                   MOV         #13,R7
    0000009C D221                   MOV.L       L578+28,R2 ; _PIC_SD_SET
    0000009E E63C                   MOV         #60,R6
    000000A0 2F26                   MOV.L       R2,@-R15
    000000A2 E500                   MOV         #0,R5
    000000A4 490B                   JSR         @R9
    000000A6 E424                   MOV         #36,R4
    000000A8 7F04                   ADD         #4,R15
    000000AA E412                   MOV         #18,R4
    000000AC 1F44                   MOV.L       R4,@(16,R15)
    000000AE A009                   BRA         L561
    000000B0 59F5                   MOV.L       @(20,R15),R9
    000000B2              L562:                             
    000000B2 E700                   MOV         #0,R7
    000000B4 6696                   MOV.L       @R9+,R6
    000000B6 55F4                   MOV.L       @(16,R15),R5
    000000B8 D31B                   MOV.L       L578+32,R3 ; _PrintXY
    000000BA 430B                   JSR         @R3
    000000BC E40E                   MOV         #14,R4
    000000BE 52F4                   MOV.L       @(16,R15),R2
    000000C0 720D                   ADD         #13,R2
    000000C2 1F24                   MOV.L       R2,@(16,R15)
    000000C4              L561:                             
    000000C4 53F8                   MOV.L       @(32,R15),R3
    000000C6 3932                   CMP/HS      R3,R9
    000000C8 8BF3                   BF          L562
    000000CA E601                   MOV         #1,R6
    000000CC D518                   MOV.L       L578+40,R5 ; L513




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000CE D917                   MOV.L       L578+36,R9 ; _PrintIcon
    000000D0 490B                   JSR         @R9
    000000D2 E400                   MOV         #0,R4
    000000D4 D517                   MOV.L       L578+44,R5 ; L514
    000000D6 E601                   MOV         #1,R6
    000000D8 490B                   JSR         @R9
    000000DA 6463                   MOV         R6,R4
    000000DC D516                   MOV.L       L578+48,R5 ; L515
    000000DE E600                   MOV         #0,R6
    000000E0 490B                   JSR         @R9
    000000E2 E402                   MOV         #2,R4
    000000E4 D515                   MOV.L       L578+52,R5 ; L516
    000000E6 E601                   MOV         #1,R6
    000000E8 490B                   JSR         @R9
    000000EA E403                   MOV         #3,R4
    000000EC D514                   MOV.L       L578+56,R5 ; L517
    000000EE E601                   MOV         #1,R6
    000000F0 490B                   JSR         @R9
    000000F2 E404                   MOV         #4,R4
    000000F4 D513                   MOV.L       L578+60,R5 ; L518
    000000F6 E600                   MOV         #0,R6
    000000F8 490B                   JSR         @R9
    000000FA E405                   MOV         #5,R4
    000000FC              L560:                             

    000000FC 60B3                   MOV         R11,R0
    000000FE 8801                   CMP/EQ      #1,R0
    00000100 8F39                   BF/S        L563
    00000102 E90D                   MOV         #13,R9
    00000104 A033                   BRA         L564
    00000106 6BA3                   MOV         R10,R11
    00000108              L578:                             
    00000108 <00000000>             .DATA.L     _setup
    0000010C <00000000>             .DATA.L     L504
    00000110 <00000000>             .DATA.L     __quick_evn_mvn
    00000114 <00000000>             .DATA.L     L506
    00000118 <00000000>             .DATA.L     __quick_odd_mvn
    0000011C <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000120 <00000000>             .DATA.L     _DrawPicture
    00000124 <00000000>             .DATA.L     _PIC_SD_SET
    00000128 <00000000>             .DATA.L     _PrintXY
    0000012C <00000000>             .DATA.L     _PrintIcon
    00000130 <00000000>             .DATA.L     L513
    00000134 <00000000>             .DATA.L     L514
    00000138 <00000000>             .DATA.L     L515
    0000013C <00000000>             .DATA.L     L516
    00000140 <00000000>             .DATA.L     L517
    00000144 <00000000>             .DATA.L     L518
    00000148              L565:                             
    00000148 0B97                   MUL.L       R9,R11
    0000014A 63B3                   MOV         R11,R3
    0000014C 4308                   SHLL2       R3
    0000014E 4300                   SHLL        R3
    00000150 338C                   ADD         R8,R3
    00000152 E703                   MOV         #3,R7
    00000154 5231                   MOV.L       @(4,R3),R2
    00000156 3EB0                   CMP/EQ      R11,R14
    00000158 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000015A 051A                   STS         MACL,R5
    0000015C 6232                   MOV.L       @R3,R2
    0000015E 0629                   MOVT        R6
    00000160 2F26                   MOV.L       R2,@-R15
    00000162 7510                   ADD         #16,R5
    00000164 D335                   MOV.L       L579+16,R3 ; _PrintFloat
    00000166 430B                   JSR         @R3
    00000168 E426                   MOV         #38,R4
    0000016A 7F08                   ADD         #8,R15
    0000016C 7B01                   ADD         #1,R11
    0000016E              L564:                             
    0000016E E203                   MOV         #3,R2
    00000170 3B23                   CMP/GE      R2,R11
    00000172 8BE9                   BF          L565
    00000174 6BA3                   MOV         R10,R11
    00000176              L563:                             
    00000176 64F3                   MOV         R15,R4
    00000178 D231                   MOV.L       L579+20,R2 ; _GetKey
    0000017A 420B                   JSR         @R2
    0000017C 740C                   ADD         #12,R4
    0000017E 50F3                   MOV.L       @(12,R15),R0
    00000180 9154                   MOV.W       L579,R1    ; H'753B
    00000182 3010                   CMP/EQ      R1,R0
    00000184 8916                   BT          L544
    00000186 9152                   MOV.W       L579+2,R1  ; H'753C
    00000188 3010                   CMP/EQ      R1,R0
    0000018A 892A                   BT          L545
    0000018C 9150                   MOV.W       L579+4,R1  ; H'753D
    0000018E 3010                   CMP/EQ      R1,R0
    00000190 8927                   BT          L546
    00000192 914E                   MOV.W       L579+6,R1  ; H'753E
    00000194 3010                   CMP/EQ      R1,R0
    00000196 8927                   BT          L547
    00000198 914C                   MOV.W       L579+8,R1  ; H'7542
    0000019A 3010                   CMP/EQ      R1,R0
    0000019C 8929                   BT          L548
    0000019E 914A                   MOV.W       L579+10,R1 ; H'7547
    000001A0 3010                   CMP/EQ      R1,R0
    000001A2 8929                   BT          L549
    000001A4 9148                   MOV.W       L579+12,R1 ; H'7534
    000001A6 3010                   CMP/EQ      R1,R0
    000001A8 8926                   BT          L577
    000001AA 9146                   MOV.W       L579+14,R1 ; H'7532
    000001AC 3010                   CMP/EQ      R1,R0
    000001AE 8925                   BT          L551
    000001B0 A04C                   BRA         L552
    000001B2 0009                   NOP
    000001B4              L544:                            ; case label 
    000001B4 52F2                   MOV.L       @(8,R15),R2
    000001B6 61D3                   MOV         R13,R1
    000001B8 6022                   MOV.L       @R2,R0
    000001BA 711C                   ADD         #28,R1
    000001BC 2102                   MOV.L       R0,@R1
    000001BE 5021                   MOV.L       @(4,R2),R0
    000001C0 1101                   MOV.L       R0,@(4,R1)
    000001C2 61D3                   MOV         R13,R1
    000001C4 53F1                   MOV.L       @(4,R15),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001C6 7124                   ADD         #36,R1
    000001C8 6032                   MOV.L       @R3,R0
    000001CA 2102                   MOV.L       R0,@R1
    000001CC 5031                   MOV.L       @(4,R3),R0
    000001CE 1101                   MOV.L       R0,@(4,R1)
    000001D0 63F2                   MOV.L       @R15,R3
    000001D2 61D3                   MOV         R13,R1
    000001D4 6233                   MOV         R3,R2
    000001D6 7114                   ADD         #20,R1
    000001D8 6022                   MOV.L       @R2,R0
    000001DA 2102                   MOV.L       R0,@R1
    000001DC 5021                   MOV.L       @(4,R2),R0
    000001DE A022                   BRA         L576
    000001E0 0009                   NOP
    000001E2              L545:                            ; case label 
    000001E2              L546:                            ; case label 
    000001E2 DC18                   MOV.L       L579+24,R12; _Nodata
    000001E4 A001                   BRA         L575
    000001E6 0009                   NOP
    000001E8              L547:                            ; case label 
    000001E8 DC17                   MOV.L       L579+28,R12; _About
    000001EA              L575:                             
    000001EA 4C0B                   JSR         @R12
    000001EC 0009                   NOP
    000001EE A05F                   BRA         L566
    000001F0 EB02                   MOV         #2,R11
    000001F2              L548:                            ; case label 
    000001F2 6BC3                   MOV         R12,R11
    000001F4 A05C                   BRA         L566
    000001F6 7EFF                   ADD         #-1,R14
    000001F8              L549:                            ; case label 
    000001F8              L577:                             
    000001F8 A059                   BRA         L529
    000001FA 6BC3                   MOV         R12,R11
    000001FC              L551:                            ; case label 
    000001FC 53F2                   MOV.L       @(8,R15),R3
    000001FE 61D3                   MOV         R13,R1
    00000200 6032                   MOV.L       @R3,R0
    00000202 711C                   ADD         #28,R1
    00000204 2102                   MOV.L       R0,@R1
    00000206 5031                   MOV.L       @(4,R3),R0
    00000208 1101                   MOV.L       R0,@(4,R1)
    0000020A 61D3                   MOV         R13,R1
    0000020C 52F1                   MOV.L       @(4,R15),R2
    0000020E 7124                   ADD         #36,R1
    00000210 6022                   MOV.L       @R2,R0
    00000212 2102                   MOV.L       R0,@R1
    00000214 5021                   MOV.L       @(4,R2),R0
    00000216 1101                   MOV.L       R0,@(4,R1)
    00000218 62F2                   MOV.L       @R15,R2
    0000021A 61D3                   MOV         R13,R1
    0000021C 6323                   MOV         R2,R3
    0000021E 7114                   ADD         #20,R1
    00000220 6032                   MOV.L       @R3,R0
    00000222 2102                   MOV.L       R0,@R1
    00000224 5031                   MOV.L       @(4,R3),R0
    00000226              L576:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000226 1101                   MOV.L       R0,@(4,R1)
    00000228 A04C                   BRA         L567
    0000022A E000                   MOV         #0,R0
    0000022C              L579:                             
    0000022C 753B                   .DATA.W     H'753B
    0000022E 753C                   .DATA.W     H'753C
    00000230 753D                   .DATA.W     H'753D
    00000232 753E                   .DATA.W     H'753E
    00000234 7542                   .DATA.W     H'7542
    00000236 7547                   .DATA.W     H'7547
    00000238 7534                   .DATA.W     H'7534
    0000023A 7532                   .DATA.W     H'7532
    0000023C <00000000>             .DATA.L     _PrintFloat
    00000240 <00000000>             .DATA.L     _GetKey
    00000244 <00000000>             .DATA.L     _Nodata
    00000248 <00000000>             .DATA.L     _About
    0000024C              L552:                            ; default label 
    0000024C D325                   MOV.L       L580+10,R3 ; _GetPressNumChar
    0000024E 430B                   JSR         @R3
    00000250 54F3                   MOV.L       @(12,R15),R4
    00000252 6403                   MOV         R0,R4
    00000254 600E                   EXTS.B      R0,R0
    00000256 2008                   TST         R0,R0
    00000258 892A                   BT          L566
    0000025A 6BC3                   MOV         R12,R11
    0000025C 53F6                   MOV.L       @(24,R15),R3
    0000025E E700                   MOV         #0,R7
    00000260 0E97                   MUL.L       R9,R14
    00000262 2340                   MOV.B       R4,@R3
    00000264 53F7                   MOV.L       @(28,R15),R3
    00000266 051A                   STS         MACL,R5
    00000268 DC1F                   MOV.L       L580+14,R12; _InputString
    0000026A 7510                   ADD         #16,R5
    0000026C 23A0                   MOV.B       R10,@R3
    0000026E E30C                   MOV         #12,R3
    00000270 2F36                   MOV.L       R3,@-R15
    00000272 66F3                   MOV         R15,R6
    00000274 7628                   ADD         #40,R6
    00000276 4C0B                   JSR         @R12
    00000278 E426                   MOV         #38,R4
    0000027A 6C03                   MOV         R0,R12
    0000027C 942D                   MOV.W       L580,R4    ; H'7532
    0000027E 3C40                   CMP/EQ      R4,R12
    00000280 8D16                   BT/S        L566
    00000282 7F04                   ADD         #4,R15
    00000284 D919                   MOV.L       L580+18,R9 ; _atof
    00000286 62E3                   MOV         R14,R2
    00000288 4208                   SHLL2       R2
    0000028A 4200                   SHLL        R2
    0000028C 328C                   ADD         R8,R2
    0000028E 64F3                   MOV         R15,R4
    00000290 7424                   ADD         #36,R4
    00000292 490B                   JSR         @R9
    00000294 2F26                   MOV.L       R2,@-R15
    00000296 9421                   MOV.W       L580+2,R4  ; H'7547
    00000298 3C40                   CMP/EQ      R4,R12
    0000029A 8F01                   BF/S        L570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000029C 7F04                   ADD         #4,R15
    0000029E 7E01                   ADD         #1,R14
    000002A0              L570:                             
    000002A0 941D                   MOV.W       L580+4,R4  ; H'7542
    000002A2 3C40                   CMP/EQ      R4,R12
    000002A4 8B00                   BF          L571
    000002A6 7EFF                   ADD         #-1,R14
    000002A8              L571:                             
    000002A8 941A                   MOV.W       L580+6,R4  ; H'7534
    000002AA 3C40                   CMP/EQ      R4,R12
    000002AC 8B00                   BF          L566
    000002AE              L529:
    000002AE 7E01                   ADD         #1,R14
    000002B0              L566:                             
    000002B0 E203                   MOV         #3,R2
    000002B2 3E23                   CMP/GE      R2,R14
    000002B4 8B00                   BF          L573
    000002B6 6EA3                   MOV         R10,R14
    000002B8              L573:                             
    000002B8 4E11                   CMP/PZ      R14
    000002BA 8B01                   BF          L581
    000002BC AEE5                   BRA         L559
    000002BE 0009                   NOP
    000002C0              L581:                             
    000002C0 AEE3                   BRA         L559
    000002C2 EE02                   MOV         #2,R14
    000002C4              L567:                             
    000002C4 7F58                   ADD         #88,R15
    000002C6 4F16                   LDS.L       @R15+,MACL
    000002C8 4F26                   LDS.L       @R15+,PR
    000002CA 68F6                   MOV.L       @R15+,R8
    000002CC 69F6                   MOV.L       @R15+,R9
    000002CE 6AF6                   MOV.L       @R15+,R10
    000002D0 6BF6                   MOV.L       @R15+,R11
    000002D2 6CF6                   MOV.L       @R15+,R12
    000002D4 6DF6                   MOV.L       @R15+,R13
    000002D6 000B                   RTS
    000002D8 6EF6                   MOV.L       @R15+,R14
    000002DA              L580:                             
    000002DA 7532                   .DATA.W     H'7532
    000002DC 7547                   .DATA.W     H'7547
    000002DE 7542                   .DATA.W     H'7542
    000002E0 7534                   .DATA.W     H'7534
    000002E2 0000                   .DATA.W     0
    000002E4 <00000000>             .DATA.L     _GetPressNumChar
    000002E8 <00000000>             .DATA.L     _InputString
    000002EC <00000000>             .DATA.L     _atof





          SDDM.c     2    
          SDDM.c     3    
          SDDM.c     4    int SDDM ()
          SDDM.c     5    {
          SDDM.c     6            uint refresh = 2,key;
          SDDM.c     7            int  index = 0,i;
          SDDM.c     8            char ch;
          SDDM.c     9            double value[3] = {0.0,0.0,0.0};
          SDDM.c    10            const char * context[] = {"Oh=:","Od=:","Or=:"};
          SDDM.c    11            value[0]=setup.dmoh;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          SDDM.c    12            value[1]=setup.dmod;
          SDDM.c    13            value[2]=setup.dmor;
          SDDM.c    14            while(1){
          SDDM.c    15                    if (refresh == REFRESH_ALL){
          SDDM.c    16                            refresh = REFRESH_PART;
          SDDM.c    17                            Bdisp_AllClr_VRAM();
          SDDM.c    18                            DrawPicture (36, 0,60,13,PIC_SD_SET);
          SDDM.c    19                            for (i=0;i<3;++i){
          SDDM.c    20                                    PrintXY(14,18+i*13,(uchar*)context[i],0);
          SDDM.c    21                            }
          SDDM.c    22                            PrintIcon (0,"Rou",1);
          SDDM.c    23                            PrintIcon (1,"Set",1);
          SDDM.c    24                            PrintIcon (2,"OK",0);
          SDDM.c    25                            PrintIcon (3,"Disp",1);
          SDDM.c    26                            PrintIcon (4,"save",1);
          SDDM.c    27                            PrintIcon (5,"?",0);
          SDDM.c    28                    }
          SDDM.c    29                    if (refresh == REFRESH_PART){
          SDDM.c    30                            for (i=0;i<3;++i){
          SDDM.c    31                                    PrintFloat(value[i],38,16+i*13,index==i,3);     
          SDDM.c    32                            }
          SDDM.c    33                            refresh = 0;
          SDDM.c    34                    }
          SDDM.c    35                    GetKey(&key);
          SDDM.c    36                    switch(key){
          SDDM.c    37                            case KEY_CTRL_F3:
          SDDM.c    38                                    setup.dmoh=value[0];
          SDDM.c    39                                    setup.dmod=value[1];
          SDDM.c    40                                    setup.dmor=value[2];
          SDDM.c    41                                    return 0;
          SDDM.c    42                            case KEY_CTRL_F4        :
          SDDM.c    43                            case KEY_CTRL_F5        :
          SDDM.c    44                                    Nodata();       refresh=REFRESH_ALL;    break;
          SDDM.c    45                            case KEY_CTRL_F6        :
          SDDM.c    46                                    About();        refresh=REFRESH_ALL;    break;                  
          SDDM.c    47                            case KEY_CTRL_UP:
          SDDM.c    48                                    refresh=REFRESH_PART;   --index;        break;
          SDDM.c    49                            case KEY_CTRL_DOWN:
          SDDM.c    50                                    refresh=REFRESH_PART;   ++index;        break;
          SDDM.c    51                            case KEY_CTRL_EXE:
          SDDM.c    52                                    refresh = REFRESH_PART; index++;        break;
          SDDM.c    53                            case KEY_CTRL_EXIT:
          SDDM.c    54                                    setup.dmoh=value[0];
          SDDM.c    55                                    setup.dmod=value[1];
          SDDM.c    56                                    setup.dmor=value[2];
          SDDM.c    57                                    return 0;
          SDDM.c    58                            default:
          SDDM.c    59                                    if ((ch=GetPressNumChar(key))!=0){
          SDDM.c    60                                            char buf[14];
          SDDM.c    61                                            int        r;
          SDDM.c    62                                            refresh = REFRESH_PART;
          SDDM.c    63                                            buf[0] = ch;   buf[1] = '\0';
          SDDM.c    64                                            r = InputString (38,16+index*13,buf,0,12);
          SDDM.c    65                                            if (r != KEY_CTRL_EXIT){
          SDDM.c    66                                                    value[index] = atof(buf);
          SDDM.c    67                                                    if      (r==KEY_CTRL_DOWN)      ++index;
          SDDM.c    68                                                    if      (r==KEY_CTRL_UP)        --index;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          SDDM.c    69                                                    if (r==KEY_CTRL_EXE )   ++index;
          SDDM.c    70                                            }
          SDDM.c    71                                            break;
          SDDM.c    72                                    }
          SDDM.c    73                    }
          SDDM.c    74                    if (index >=3) index = 0;
          SDDM.c    75                    if (index < 0) index = 2;
          SDDM.c    76            }
          SDDM.c    77    }
C   00000000              L504:
    00000000 0000000000             .DATA.L     H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00000018              L506:
    00000018 <00000000>             .DATA.L     L507,L508,L509
             <00000000>   
             <00000000>   
    00000024              L513:
    00000024 526F75                 .SDATA      "Rou"
    00000027 00                     .DATA.B     H'00
    00000028              L514:
    00000028 536574                 .SDATA      "Set"
    0000002B 00                     .DATA.B     H'00
    0000002C              L515:
    0000002C 4F4B                   .SDATA      "OK"
    0000002E 00                     .DATA.B     H'00
    0000002F 00000001               .RES.B      1
    00000030              L516:
    00000030 44697370               .SDATA      "Disp"
    00000034 00                     .DATA.B     H'00
    00000035 00000001               .RES.B      1
    00000036 00000002               .RES.W      1
    00000038              L517:
    00000038 73617665               .SDATA      "save"
    0000003C 00                     .DATA.B     H'00
    0000003D 00000001               .RES.B      1
    0000003E 00000002               .RES.W      1
    00000040              L518:
    00000040 3F                     .SDATA      "?"
    00000041 00                     .DATA.B     H'00
    00000042 00000002               .RES.W      1
    00000044              L507:
    00000044 4F683D3A               .SDATA      "Oh=:"
    00000048 00                     .DATA.B     H'00
    00000049 00000001               .RES.B      1
    0000004A 00000002               .RES.W      1
    0000004C              L508:
    0000004C 4F643D3A               .SDATA      "Od=:"
    00000050 00                     .DATA.B     H'00
    00000051 00000001               .RES.B      1
    00000052 00000002               .RES.W      1
    00000054              L509:
    00000054 4F723D3A               .SDATA      "Or=:"
    00000058 00                     .DATA.B     H'00





SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 22:51:20  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        11




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       77



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000002F0 Byte(s)
CONSTANT SECTION (C):                               00000059 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000349 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           15
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           1
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            55






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk85A3.tmp 

